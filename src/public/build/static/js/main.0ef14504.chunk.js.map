{"version":3,"sources":["shopdharan.png","shopdharan-white.png","hooks/useRefreshToken.js","hooks/useAccessToken.js","helperFunctions/fetchAccessToken.js","contexts/LoginInfo.js","components/LightScreen.js","components/Logo.js","components/ErrorText.js","screens/LoginScreen.js","components/RedScreen.js","components/LogoWhite.js","screens/LoadingScreen.js","components/NavLinks.js","screens/NavScreen.js","components/NavigationBar.js","helperFunctions/validateAccessToken.js","hooks/useFetch.js","components/DisplayEmployees.js","hooks/useFetchEmployees.js","helperFunctions/fetchWithCredentials.js","helperFunctions/inputValidations.js","components/CancelAndOkButton.js","components/DisplayLoading.js","components/DisplayErrors.js","components/CustomSwitch.js","contexts/AddEmployeeInfo.js","components/AddEmployeeForm.js","components/AddEmployees.js","screens/EmployeesScreen.js","contexts/EmployeeInfo.js","components/EmployeeForm.js","components/DisplayEmployee.js","screens/EmployeeScreen.js","navigation/Employee.js","hooks/useFetchCities.js","helperFunctions/addCity.js","screens/CitiesScreen.js","components/DisplaySuppliers.js","hooks/useFetchSuppliers.js","helperFunctions/deleteCity.js","helperFunctions/updateCity.js","screens/CityScreen.js","navigation/City.js","hooks/useFetchCatagories.js","helperFunctions/addCatagory.js","screens/CatagoriesScreen.js","helperFunctions/deleteCatagory.js","helperFunctions/updateCatagory.js","screens/CatagoryScreen.js","navigation/Catagory.js","components/CustomSelect.js","contexts/AddSupplierInfo.js","components/AddSupplierForm.js","components/AddSupplier.js","screens/SuppliersScreen.js","contexts/SupplierInfo.js","components/SupplierForm.js","components/DisplaySupplier.js","screens/SupplierScreen.js","navigation/Supplier.js","navigation/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useRefreshToken","useState","localStorage","getItem","refreshToken","setRefreshToken","useEffect","setItem","useAccessToken","sessionStorage","accessToken","setAccessToken","fetchAccessToken","a","data","fetch","method","headers","Accept","body","JSON","stringify","response","ok","statusText","json","loadingContext","React","createContext","isLoggedInContext","useIsLoggedIn","useContext","LoginInfo","children","loading","setLoading","isLoggedIn","setIsLoggedIn","then","catch","err","console","log","Provider","value","RedScreen","className","Logo","src","logo","ErrorText","fetchTokens","username","password","text","LoginScreen","setUsername","setPassword","setErr","handleLogin","ShowLoading","CircularProgress","ShowError","TextField","label","variant","onChange","e","target","style","margin","width","required","type","Button","color","onClick","LogoWhite","LoadingScreen","NavLinks","to","NavScreen","Navigation","title","history","useHistory","xmlns","height","viewBox","goBack","transform","x1","fill","stroke","stroke-width","x2","y2","y1","valid","useFetch","url","result","setResult","validations","validateAccessToken","newAccessToken","fetchItems","options","authorization","request","useStyles","makeStyles","container","maxWidth","table","head","backgroundColor","colors","PRIMARY_RED","PRIMARY_WHITE","fontWeight","DisplayEmployees","useFetchEmployees","styles","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","employee","key","employee_id","push","scope","employee_name","is_admin","email","fetchWithCredentials","validateEmail","test","String","toLowerCase","validatePassword","length","CancelAndOkButton","onClickOk","onClickCancel","okLabel","cancelLabel","DisplayLoading","DisplayErrors","errors","index","toString","CustomSwitch","checked","FormGroup","FormControlLabel","control","Switch","EmployeeContext","ErrorsContext","LoadingContext","ACTIONS","reducer","state","action","payload","repassword","useEmployeeContext","dispatch","EmployeeInfo","useReducer","button","wrapper","display","flexDirection","padding","alignItems","EmployeeForm","addEmployee","employee_data","AddEmployees","handleClose","Wrapper","useLoadingContext","useErrorsContext","employee_added","alert","theme","backdrop","zIndex","drawer","AddEmployee","open","Backdrop","EmployeesScreen","match","setOpen","ErrorContext","getData","DisplayEmployee","useErrorContext","handleDelete","window","confirm","handleUpdate","EmployeeScreen","id","useParams","Employee","exact","path","useFetchCities","addCity","city_name","CitiesScreen","handleAddCity","prompt","CityTable","city","city_id","Display","DisplaySuppliers","visible","catagory_id","supplier_name","searchParams","URLSearchParams","append","useFetchSuppliers","supplier","supplier_id","supplier_description","contact_number","deleteCity","updateCity","CityScreen","name","setName","setTitle","CityInfo","City","useFetchCatagories","addCatagory","catagory_name","handleAddCatagory","Catagory","catagory","deleteCatagory","updateCatagory","CatagoriesScreen","CatagoryScreen","formControl","spacing","minWidth","CustomSelect","selection","setSelection","currentValue","setCurrentValue","FormControl","InputLabel","Select","labelId","MenuItem","option","SupplierContext","email_id","useSupplier","SupplierInfo","paddingBottom","overflowY","fullcontainer","justifyContent","SupplierForm","catagoryloading","catagories","citiesloading","cities","multiline","rows","inside","addSupplier","supplier_data","AddSupplier","useLoading","useErrors","handleAddSupplier","supplier_added","flexWrap","gap","AddSuppliers","ACTION","SelectOptions","catagorieserr","citiesserr","search","setSearch","SuppliersScreen","SETALL","SETSUPPLIER","SETCITY","SETEMAIL","TOGGLEVISIBILITY","SETCATAGORY","SETCONTACT","SETDESCRIPTION","image_id","SETCONTACTNUM","DisplaySupplier","Container","useError","SupplierScreen","Main","basename","process","Suppliers","App","Boolean","location","hostname","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0ef14504.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopdharan.f6198331.png\";","module.exports = __webpack_public_path__ + \"static/media/shopdharan-white.24657495.png\";","import { useState, useEffect} from 'react'\n\nexport default function useRefreshToken() {\n    const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n    useEffect(()=>{\n        localStorage.setItem('refreshToken', refreshToken)\n    },[refreshToken])\n    \n    return [refreshToken,setRefreshToken]\n}\n","import { useState, useEffect} from 'react'\n\nexport default function useAccessToken() {\n    const [accessToken, setAccessToken] = useState(sessionStorage.getItem('accessToken'));\n    useEffect(()=>{\n        sessionStorage.setItem('accessToken', accessToken)\n    },[accessToken])\n    \n    return [accessToken,setAccessToken]\n}\n","export default async function fetchAccessToken(refreshToken){\n    const data = {refreshToken};\n\n    const response = await fetch(\"/api/token\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.accessToken;\n}","import React, { useState, useEffect, useContext } from 'react'\n\nimport useRefreshToken from '../hooks/useRefreshToken';\nimport useAccessToken from '../hooks/useAccessToken';\nimport fetchAccessToken from '../helperFunctions/fetchAccessToken'\nconst loadingContext = React.createContext();\nconst isLoggedInContext = React.createContext();\n\nexport function useLoading(){\n    return useContext(loadingContext);\n}\n\nexport function useIsLoggedIn(){\n    return useContext(isLoggedInContext);\n}\n\nexport function LoginInfo({children}) {\n    const [loading, setLoading] = useState(true);\n    const [isLoggedIn,setIsLoggedIn] = useState(false);\n    const [refreshToken, setRefreshToken] = useRefreshToken();\n    const [accessToken, setAccessToken] = useAccessToken();\n    \n    useEffect(()=>{\n         if(refreshToken==null){\n             setLoading(false)\n             setIsLoggedIn(false)\n             return;\n         }\n         fetchAccessToken(refreshToken)\n            .then((accessToken)=>{\n                setLoading(false);\n                setIsLoggedIn(true);\n                setAccessToken(accessToken);\n            })\n            .catch(err=>{\n                console.log(err);\n                setLoading(false);\n                setIsLoggedIn(false);\n            })\n    },[])\n\n    return (\n        <loadingContext.Provider value={loading}>\n            <isLoggedInContext.Provider value={[isLoggedIn,setIsLoggedIn]}>\n                {children}\n            </isLoggedInContext.Provider>\n        </loadingContext.Provider>\n    )\n}\n","import React from 'react'\n\nexport default function RedScreen({children}) {\n    return (\n        <div className={\"light-background\"}>\n             {children}\n        </div>\n    )\n}\n","import React from \"react\";\nimport logo from \"../shopdharan.png\";\n\nexport default function Logo() {\n  return <img src={logo} className={\"logo\"} />;\n}\n","import React from 'react'\nimport colors from '../defaults/colors.json'\n\nexport default function ErrorText({children}) {\n    return (\n        <div className={\"red-text\"}>\n            {children}\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\n\nimport {useIsLoggedIn} from '../contexts/LoginInfo'\nimport LightScreen from \"../components/LightScreen\";\nimport Logo from \"../components/Logo\";\nimport ErrorText from '../components/ErrorText'\nimport useRefreshToken from '../hooks/useRefreshToken'\nimport useAccessToken from '../hooks/useAccessToken'\n\nasync function fetchTokens(username, password) {\n  const data = {\n    username: username,\n    password: password,\n  };\n\n  const response = await fetch(\"/api/admin/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw await response.text();\n  }\n  return await response.json();\n}\n\nexport default function LoginScreen() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState('');\n  const [refreshToken,setRefreshToken] = useRefreshToken();\n  const [accessToken, setAccessToken] = useAccessToken();\n  const [isLoggedIn, setIsLoggedIn] = useIsLoggedIn();\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value);\n  };\n\n  \n  const handleLogin = async () => {\n    try{\n      setErr('')\n      setLoading(true)\n      const {accessToken, refreshToken } = await fetchTokens(username,password);\n      setLoading(false)\n      setRefreshToken(refreshToken);\n      setAccessToken(accessToken);\n      setIsLoggedIn(true)\n    }catch(err){\n      setLoading(false)\n      setErr(err)\n    }\n  };\n\n const ShowLoading = ()=>{\n  if (loading) return <CircularProgress />\n  return null;\n }\n\n const ShowError = ()=>{\n if(err) return <ErrorText>{err}</ErrorText>\n return null;\n }\n\n  return (\n    <LightScreen>\n      <Logo />\n      <ShowLoading />\n      <ShowError />\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        value={username}\n        onChange={handleUsernameInput}\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordInput}\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        required\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        onClick={handleLogin}\n      >\n        Login\n      </Button>\n    </LightScreen>\n  );\n}\n","import React from 'react'\n\nexport default function RedScreen({children}) {\n    return (\n        <div className={\"red-background\"}>\n             {children}\n        </div>\n    )\n}\n","import React from \"react\";\nimport logo from \"../shopdharan-white.png\";\n\nexport default function LogoWhite() {\n  return <img src={logo} className={\"logo\"} />;\n}\n","import React from 'react'\nimport {CircularProgress} from '@material-ui/core'\n\nimport RedScreen from '../components/RedScreen'\nimport LogoWhite from '../components/LogoWhite'\n\nexport default function LoadingScreen() {\n    return (\n        <RedScreen>\n            <LogoWhite />\n            <CircularProgress color=\"secondary\" />\n        </RedScreen>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function NavLinks() {\n    return (\n        <>\n            <Link to='/employees' className=\"white-text-bold\"> Employees</Link>\n            <Link to='/cities' className=\"white-text-bold\"> Cities</Link>\n            <Link to='/catagories' className=\"white-text-bold\"> Catagories</Link>\n            <Link to='/suppliers' className=\"white-text-bold\"> Suppliers</Link>\n        </>\n    )\n}\n","import React from 'react'\n\nimport NavLinks from '../components/NavLinks'\nimport LogoWhite from '../components/LogoWhite'\nimport RedScreen from '../components/RedScreen'\n\nexport default function NavScreen() {\n    return (\n        <RedScreen>\n            <LogoWhite />\n            <NavLinks />\n        </RedScreen>\n    )\n}\n","import React from \"react\";\nimport {useHistory} from 'react-router-dom'\n\nexport default function Navigation({ title=\"Shop Dharan\" }) {\n    const history = useHistory()\n    return (\n    <nav className={'nav-bar'}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"26.552\"\n        height=\"21.272\"\n        viewBox=\"0 0 26.552 21.272\"\n        onClick= {history.goBack}\n      >\n        <g transform=\"translate(-12.948 -27.239)\">\n          <line\n            x1=\"24.375\"\n            transform=\"translate(15.125 37.25)\"\n            fill=\"none\"\n            stroke=\"#fff\"\n            stroke-width=\"4\"\n          />\n          <line\n            x2=\"8.125\"\n            y2=\"10\"\n            transform=\"translate(15.125 37.25)\"\n            fill=\"none\"\n            stroke=\"#fff\"\n            stroke-width=\"4\"\n          />\n          <line\n            y1=\"10\"\n            x2=\"8.125\"\n            transform=\"translate(14.5 28.5)\"\n            fill=\"none\"\n            stroke=\"#fff\"\n            stroke-width=\"4\"\n          />\n        </g>\n      </svg>\n      <div className={'title'}>\n          {title}\n      </div>\n    </nav>\n  );\n}\n","export default async function fetchAccessToken(accessToken){\n    const data = {accessToken};\n\n    const response = await fetch(\"/api/validate\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.valid;\n}","import React, { useState, useEffect } from \"react\";\n\nimport useAccessToken from \"./useAccessToken\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport validateAccessToken from \"../helperFunctions/validateAccessToken\";\nimport fetchAccessToken from \"../helperFunctions/fetchAccessToken\";\n\nexport default function useFetch(method = \"GET\", url, body) {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState();\n  const [err, setErr] = useState(\"\");\n  const [accessToken, setAccessToken] = useAccessToken();\n  const [refreshToken] = useRefreshToken();\n\n  useEffect(() => {\n    const validations = async () => {\n      const isValid = await validateAccessToken(accessToken);\n      if (isValid) return;\n      const newAccessToken = await fetchAccessToken(refreshToken);\n      setAccessToken(newAccessToken);\n    };\n\n    const fetchItems = async () => {\n      let options = {\n        method: method,\n        headers: {\n          authorization: `bearer ${accessToken}`,\n          \"content-type\": \"application/json\",\n        },\n      };\n      if (body) {\n        options = { ...options, body: JSON.stringify(body) };\n      }\n      const request = await fetch(url, options);\n      if(!request.ok){\n        setErr(request.statusText)\n        setLoading(false)\n        return;\n      }\n      const result = await request.json();\n\n      setResult(result);\n      setLoading(false);\n    };\n\n    setLoading(true);\n    validations()\n      .then(() => {\n        fetchItems();\n      })\n      .catch((err) => {\n        setErr(err);\n        setLoading(false);\n      });\n  }, [url, body]);\n\n  return { loading, result, err };\n}\n","import React from 'react'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    CircularProgress,\n    Paper,\n    makeStyles,\n  } from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useFetchEmployees from '../hooks/useFetchEmployees'\nimport ErrorText from './ErrorText'\nimport colors from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n    container: {\n      maxWidth: 1000,\n      width: \"90%\",\n      margin: 10,\n    },\n    table: {\n      width: \"100%\",\n    },\n    head: {\n      backgroundColor: colors.PRIMARY_RED,\n      color: colors.PRIMARY_WHITE,\n      fontWeight: \"bolder\",\n    },\n  });\n\nexport default function DisplayEmployees() {\n    const {err,loading,result} = useFetchEmployees()\n    const styles = useStyles()\n    const history = useHistory()\n\n    if(loading) return <CircularProgress color=\"primary\" />\n    if(err) return <ErrorText> {err} </ErrorText>\n    return (\n        <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n          <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Admin\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Username\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Email\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((employee) => (\n              <TableRow key={employee.employee_id} \n                onClick ={()=>{\n                  history.push(`employees/${employee.employee_id}`)\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {employee.employee_name}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {employee.is_admin ? \"True\" : \"False\"}\n                </TableCell>\n                <TableCell align=\"center\">{employee.username}</TableCell>\n                <TableCell align=\"center\">{employee.email}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","import React from 'react'\nimport useFetch from './useFetch'\n\nexport default function useFetchEmployees() {\n    const { loading, err, result } = useFetch(\"GET\", \"/api/employees/getall\");\n\n    return {err, loading, result}\n}\n","import validateAccessToken from \"./validateAccessToken\";\nimport fetchAccessToken from \"./fetchAccessToken\";\n\nexport default async function fetchWithCredentials(method = \"POST\", url, body) {\n  let accessToken = sessionStorage.getItem(\"accessToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  const isValid = await validateAccessToken(accessToken);\n  if (!isValid){\n    accessToken = await fetchAccessToken(refreshToken);\n    sessionStorage.setItem(\"accessToken\", accessToken);\n  }\n\n  let options = {\n    method: method,\n    headers: {\n      authorization: `bearer ${accessToken}`,\n      \"content-type\": \"application/json\",\n    },\n    \n  };\n  if(body && method != 'GET'){\n   options = {...options, body: JSON.stringify(body),} \n  }\n  \n  return await fetch(url,options);\n}\n","export function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function validatePassword(password){\n    return ((password).length >= 6)\n}","import React from \"react\";\nimport {Button} from \"@material-ui/core\";\n\n\nexport default function CancelAndOkButton({\n  onClickOk,\n  onClickCancel,\n  okLabel=\"Ok\",\n  cancelLabel = \"Cancel\",\n}) {\n  return (\n    <div className=\"button-container\" style={{width:\"100%\"}}>\n      <Button color=\"primary\" variant=\"text\" onClick={onClickCancel}>\n        {cancelLabel}\n      </Button>\n\n      <Button color=\"primary\" variant=\"contained\" onClick={onClickOk}>\n        {okLabel}\n      </Button>\n    </div>\n  );\n}\n","import React from 'react'\nimport {CircularProgress} from '@material-ui/core'\n\nexport default function DisplayLoading({loading}) {\n    if(loading) return <CircularProgress  color=\"primary\"/>\n    return null;\n}\n","import React from 'react'\nimport ErrorText from './ErrorText'\n\nexport default function DisplayErrors({errors=[]}) {\n    if(errors.length>0){\n        return errors.map((err, index)=>(\n            <ErrorText key={index} >\n                {err.toString()}\n            </ErrorText>\n        ))\n    }\n    return null;\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function CustomSwitch({checked, onChange, label}) {\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={onChange} color=\"primary\"/>}\n        label={label}\n      />\n    </FormGroup>\n  );\n}","import React, { useState, useReducer, useContext } from \"react\";\n\nconst EmployeeContext = React.createContext();\nconst ErrorsContext = React.createContext();\nconst LoadingContext = React.createContext();\n\nexport const ACTIONS = {\n  SETEMPLOYEENAME: \"setemployeename\",\n  TOGGLEISADMIN: \"toggleisadmin\",\n  SETUSERNAME: \"setusername\",\n  SETPASSWORD: \"setpassword\",\n  SETREPASSWORD: \"setrepassword\",\n  SETEMAIL: \"setemail\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETEMPLOYEENAME:\n      return { ...state, employee_name: action.payload };\n    case ACTIONS.TOGGLEISADMIN:\n      return { ...state, is_admin: !state.is_admin };\n    case ACTIONS.SETEMAIL:\n      return { ...state, email: action.payload };\n    case ACTIONS.SETUSERNAME:\n      return { ...state, username: action.payload };\n    case ACTIONS.SETPASSWORD:\n      return { ...state, password: action.payload };\n    case ACTIONS.SETREPASSWORD:\n      return { ...state, repassword: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function useEmployeeContext() {\n  const [state, dispatch] = useContext(EmployeeContext);\n  return { state, dispatch };\n}\n\nexport function useLoadingContext() {\n  const [loading, setLoading] = useContext(LoadingContext);\n  return { loading, setLoading };\n}\n\nexport function useErrorsContext() {\n  const [err, setErr] = useContext(ErrorsContext);\n  return { err, setErr };\n}\n\nexport function EmployeeInfo({ children }) {\n  const [state, dispatch] = useReducer(reducer, {\n    employee_name: \"\",\n    is_admin: false,\n    username: \"\",\n    password: \"\",\n    repassword: \"\",\n    email: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState([]);\n\n  return (\n    <EmployeeContext.Provider value={[state, dispatch]}>\n      <ErrorsContext.Provider value={[err, setErr]}>\n        <LoadingContext.Provider value={[loading, setLoading]}>\n          {children}\n        </LoadingContext.Provider>\n      </ErrorsContext.Provider>\n    </EmployeeContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport CustomSwitch from './CustomSwitch'\n\nimport { ACTIONS ,useEmployeeContext} from \"../contexts/AddEmployeeInfo\";\n\nconst useStyles = makeStyles({\n    button: { margin: \"1rem\", width: \"80vmin\" },\n    wrapper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: \"1em\",\n      alignItems: \"center\",\n    },\n  });\n\nexport default function EmployeeForm() {\n    const styles = useStyles();\n    const {state,dispatch} = useEmployeeContext() \n    return (\n      <>\n        <CustomSwitch \n            checked={state.is_admin}\n            onChange={(e) => dispatch({ type: ACTIONS.TOGGLEISADMIN })}\n            label=\"Admin\"\n        />\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          className={styles.button}\n          value={state.employee_name}\n          onChange={(e) =>\n            dispatch({ type: ACTIONS.SETEMPLOYEENAME, payload: e.target.value })\n          }\n          required\n        />\n  \n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          className={styles.button}\n          value={state.email}\n          onChange={(e) =>\n            dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n          }\n          required\n        />\n  \n        <TextField\n          label=\"Username\"\n          variant=\"outlined\"\n          className={styles.button}\n          value={state.username}\n          onChange={(e) =>\n            dispatch({ type: ACTIONS.SETUSERNAME, payload: e.target.value })\n          }\n          required\n        />\n  \n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          className={styles.button}\n          value={state.password}\n          onChange={(e) =>\n            dispatch({ type: ACTIONS.SETPASSWORD, payload: e.target.value })\n          }\n          required\n        />\n  \n        <TextField\n          label=\"Retype Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          className={styles.button}\n          value={state.repassword}\n          onChange={(e) =>\n            dispatch({ type: ACTIONS.SETREPASSWORD, payload: e.target.value })\n          }\n          required\n        />\n      </>\n    );\n  }\n  ","import React, { useReducer, useState } from \"react\";\nimport {\n  TextField,\n  makeStyles,\n  Switch,\n  Button,\n  Paper,\n} from \"@material-ui/core\";\n\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\nimport {\n  validateEmail,\n  validatePassword,\n} from \"../helperFunctions/inputValidations\";\nimport CancelAndOkButton from './CancelAndOkButton'\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport AddEmployeeForm from '../components/AddEmployeeForm';\nimport { EmployeeInfo, useLoadingContext, useErrorsContext,useEmployeeContext } from \"../contexts/AddEmployeeInfo\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    alignItems: \"center\",\n  },\n});\n\nasync function addEmployee(state) {\n  const url = `/api/employees/add`;\n  const body = { ...state };\n  const response = await fetchWithCredentials(\"POST\", url, body);\n  if (response.ok) {\n    return response.ok;\n  }\n  throw await response.text();\n}\n\nfunction validations(employee_data) {\n  let errors = [];\n  if (!validateEmail(employee_data.email))\n    errors = [...errors, \"Invalid Email\"];\n  if (!validatePassword(employee_data.password))\n    errors = [...errors, \"Password should Be Atleast 6 digit long\"];\n  if (employee_data.password !== employee_data.repassword)\n    errors = [...errors, \"Passwords Don't Match\"];\n  return errors;\n}\n\n\nexport default function AddEmployees({ handleClose }) {\n  return (\n    \n      <EmployeeInfo>\n        <Wrapper handleClose={handleClose}/>\n      </EmployeeInfo>\n  \n  );\n}\n\nfunction Wrapper({handleClose}) {\n  const {loading, setLoading} = useLoadingContext();\n  const {err,setErr} = useErrorsContext();\n  const {state} = useEmployeeContext();\n  const styles = useStyles();\n\n  async function handleAddEmployee(){\n      setErr([]);\n      const errors = validations(state);\n      if (errors.length > 0) {\n        setErr([...errors]);\n        return;\n      }\n      try {\n        setLoading(true)\n        const employee_added = await addEmployee(state);\n        setLoading(false)\n        if (employee_added) {\n          handleClose();\n          return alert(\"Employees Added\");\n        }\n        throw \"Failed To Add Employees\";\n      } catch (err) {\n        setLoading(false)\n        setErr([String(err)]);\n      }\n  }\n\n  return (\n    <Paper className={styles.wrapper}>\n      <DisplayLoading loading={loading} />\n      <DisplayErrors errors={err} />\n      <AddEmployeeForm />\n      <CancelAndOkButton okLabel={\"Add Employee\"}\n       onClickOk={handleAddEmployee}\n       cancelLabel={\"Cancel\"}\n       onClickCancel={handleClose}\n      />\n    </Paper>\n  );\n}\n\n","import React,{useState} from \"react\";\nimport {\n  Button,\n  Backdrop,\n  makeStyles\n} from \"@material-ui/core\";\n \nimport { useHistory } from \"react-router-dom\";\n\nimport LightScreen from \"../components/LightScreen\";\n\nimport Navigationbar from \"../components/NavigationBar\";\nimport DisplayEmployees from '../components/DisplayEmployees'\nimport AddEmployees from '../components/AddEmployees'\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nfunction AddEmployee({open, handleClose}){\n  const styles = useStyles()\n  return(\n    <Backdrop open={open} className={styles.backdrop} >\n      <AddEmployees handleClose={handleClose}/>\n    </Backdrop>\n  )\n}\n \nexport default function EmployeesScreen({match}) {\n\n  const history = useHistory();\n  \n  const [ open, setOpen] = useState(false);\n\n  const handleOpen = ()=>{\n    setOpen(true)\n  }\n  const handleClose = ()=>{\n    setOpen(false)\n  }\n\n  const goToAdd = () => {\n    history.push(`${match.url}/add`);\n  };\n\n\n  return (\n    <LightScreen>\n      <Navigationbar title={\"Employees\"} />\n      <AddEmployee open={open} handleClose={handleClose} />\n      <Button color=\"primary\" onClick={handleOpen}>\n        Add New\n      </Button>\n      <DisplayEmployees />\n    </LightScreen>\n  );\n}\n","import React, { useState, useReducer, useContext, useEffect } from \"react\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\nconst EmployeeContext = React.createContext()\nconst LoadingContext = React.createContext()\nconst ErrorContext = React.createContext()\n\nexport const ACTIONS = {\n    SETALL: \"setall\",\n    SETNAME: \"setname\",\n    SETUSERNAME: \"setusername\",\n    SETEMAIL: \"setemail\",\n    TOGGLEADMIN: \"toggleadmin\",\n};\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.SETALL:\n            return { ...action.payload };\n        case ACTIONS.SETNAME:\n            return { ...state, employee_name: action.payload };\n        case ACTIONS.SETUSERNAME:\n            return { ...state, username: action.payload };\n        case ACTIONS.SETEMAIL:\n            return { ...state, email: action.payload };\n        case ACTIONS.TOGGLEADMIN:\n            return { ...state, is_admin: !state.is_admin };\n        default:\n            return state;\n    }\n}\n\nexport function useEmployeeContext(){\n    const [state,dispatch] = useContext(EmployeeContext)\n    return {state, dispatch}\n}\n\nexport function useLoadingContext(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return {loading, setLoading}\n}\n\nexport function useErrorContext(){\n    const [err,setErr] = useContext(ErrorContext)\n    return {err,setErr}\n}\n\nexport  function EmployeeInfo({ employee_id, children }) {\n    const url = `/api/employees/get?employee_id=${employee_id}`;\n    const [state, dispatch] = useReducer(reducer, {\n        employee_name: \"\",\n        is_admin: false,\n        username: \"\",\n        email: \"\",\n    });\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState(\"\");\n\n    useEffect(() => {\n        const getData = async () => {\n            setLoading(true);\n            const response = await fetchWithCredentials(\"GET\", url);\n            if (!response.ok) throw response.statusText;\n            const data = await response.json();\n            dispatch({ type: ACTIONS.SETALL, payload: data });\n            setLoading(false);\n        };\n\n        getData().catch((err) => {\n            setLoading(false);\n            setErr(err);\n        });\n    }, [url]);\n\n\n    return(\n        <EmployeeContext.Provider value={[state,dispatch]}>\n            <LoadingContext.Provider value={[loading,setLoading]}>\n                <ErrorContext.Provider value={[err,setErr]}>\n                    {children}\n                </ErrorContext.Provider>\n            </LoadingContext.Provider>\n        </EmployeeContext.Provider>\n    );\n}\n","import React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport { useEmployeeContext, ACTIONS } from \"../contexts/EmployeeInfo\";\nimport CustomSwitch from \"./CustomSwitch\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n});\n\nexport default function EmployeeForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useEmployeeContext();\n  return (\n    <>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.employee_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETNAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.username}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETUSERNAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"Email\"\n        className={styles.button}\n        value={state.email}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <CustomSwitch\n        label=\"Admin\"\n        checked={state.is_admin}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEADMIN })}\n      />\n    </>\n  );\n}\n","import React, { useReducer, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\nimport {\n  EmployeeInfo,\n  useErrorContext,\n  useLoadingContext,\n  useEmployeeContext,\n} from \"../contexts/EmployeeInfo\";\n\nimport CancelAndOkButton from \"../components/CancelAndOkButton\";\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport EmployeeForm from \"../components/EmployeeForm\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n});\n\nexport default function DisplayEmployee({ employee_id }) {\n  return (\n    <EmployeeInfo employee_id={employee_id}>\n      <Wrapper employee_id={employee_id} />\n    </EmployeeInfo>\n  );\n}\n\nfunction Wrapper({ employee_id }) {\n  const { loading } = useLoadingContext();\n  const { err } = useErrorContext();\n  const { state } = useEmployeeContext();\n  const history = useHistory();\n\n  const handleDelete = async () => {\n    const confirmed = window.confirm(\n      \"Are You Sure You Want To Delete this Account?\"\n    );\n    if (!confirmed) return;\n    const url = `/api/employees/delete`;\n    const data = { employee_id };\n    const response = await fetchWithCredentials(\"DELETE\", url, data);\n    if (response.ok) {\n      alert(\"Employee Deleted\");\n      history.goBack();\n      return;\n    }\n    alert(\"Failed To Delete\");\n  };\n\n  const handleUpdate = async () => {\n    const confirmed = window.confirm(\"Are You Sure You Want To Update\");\n    if (!confirmed) return;\n    const data = {\n      ...state,\n      employee_id,\n    };\n    const url = `/api/employees/update`;\n    const response = await fetchWithCredentials(\"PUT\", url, data);\n    if (response.ok) {\n      alert(\"Employee Updated\");\n      return;\n    }\n    alert(\"Failed To Upload\");\n  };\n\n  if (loading) return <DisplayLoading loading={true} />;\n  if (err) return <DisplayErrors errors={[err]} />;\n\n  return (\n    <>\n      <CancelAndOkButton\n        onClickOk={handleUpdate}\n        okLabel=\"Update\"\n        onClickCancel={handleDelete}\n        cancelLabel=\"Delete\"\n      />\n      <EmployeeForm />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {\n  makeStyles,\n} from \"@material-ui/core\";\n\n\nimport LightScreen from '../components/LightScreen'\nimport NavigationBar from '../components/NavigationBar'\nimport DisplayEmployee from '../components/DisplayEmployee'\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n});\n \nexport default function EmployeeScreen() {\n  const { id } = useParams();\n  return (\n    <LightScreen>\n        <NavigationBar title={\"Employee\"}/>\n        <DisplayEmployee employee_id={id}/>\n    </LightScreen>\n  )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport EmployeesScreen from '../screens/EmployeesScreen';\nimport EmployeeScreen from '../screens/EmployeeScreen'\n\nexport default function Employee({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n            <Route exact path={`${match.url}/`} component={EmployeesScreen}/>\n            <Route path={`${match.url}/:id`} component={EmployeeScreen} />\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","\nimport useFetch from './useFetch'\n\nexport default function useFetchCities() {\n    const url = `/api/cities/getall`;\n    const { loading, result, err } = useFetch(\"GET\", url);\n    \n    return {loading, result, err}\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default  async function addCity(city_name){\n    const url = `/api/cities/add`\n    const response = await fetchWithCredentials('POST',url,{city_name})\n    return response.ok;\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  CircularProgress,\n  Paper,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport colors from \"../defaults/colors.json\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport ErrorText from \"../components/ErrorText\";\nimport addCity from '../helperFunctions/addCity'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: colors.PRIMARY_RED,\n    color: colors.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function CitiesScreen({match}) {\n  const { loading, result, err } = useFetchCities();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleAddCity = async () =>{\n    const city_name = window.prompt(\"City Name\");\n    if(!city_name) return;\n    const success = await addCity(city_name)\n    if(success){\n      alert(\"City Added\")\n      return;\n    }\n    alert(\"Failed To Add City\")\n  }\n\n  const CityTable = () => {\n    return (\n      <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                No.\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                City Name\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((city, index) => (\n              <TableRow\n                key={city.city_id}\n                onClick={() => {\n                  history.push(`${match.url}/${city.city_id}`);\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {index+1}\n                </TableCell>\n                <TableCell align=\"center\">{city.city_name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const Display = () => {\n    if (loading) return <CircularProgress color=\"primary\" />;\n    if (err) return <ErrorText> {err} </ErrorText>;\n    return <CityTable />;\n  };\n  return (\n    <LightScreen>\n      <NavigationBar title=\"Cities\" />\n      <Button color=\"primary\"\n        onClick={handleAddCity}\n      > Add City </Button>\n      <Display />\n    </LightScreen>\n  );\n}\n","import React from 'react'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    CircularProgress,\n    Paper,\n    makeStyles,\n  } from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useFetchSuppliers from '../hooks/useFetchSuppliers'\nimport ErrorText from './ErrorText'\nimport colors from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n    container: {\n      maxWidth: 1000,\n      width: \"90%\",\n      margin: 10,\n    },\n    table: {\n      width: \"100%\",\n    },\n    head: {\n      backgroundColor: colors.PRIMARY_RED,\n      color: colors.PRIMARY_WHITE,\n      fontWeight: \"bolder\",\n    },\n  });\n\nexport default function DisplaySuppliers({visible,supplier_name, catagory_id,city_id}) {\n    const {err,loading,result} = useFetchSuppliers({visible,supplier_name,catagory_id,city_id})\n    const styles = useStyles()\n    const history = useHistory()\n\n    if(loading) return <CircularProgress color=\"primary\" />\n    if(err) return <ErrorText> {err} </ErrorText>\n    return (\n        <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Description\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Number\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Visible\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((supplier) => (\n              <TableRow key={supplier.supplier_id} \n                onClick ={()=>{\n                  history.push(`/suppliers/${supplier.supplier_id}`)\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {supplier.supplier_name}\n                </TableCell>\n                <TableCell align=\"center\">{supplier.supplier_description}</TableCell>\n                <TableCell align=\"center\">{supplier.contact_number}</TableCell>\n                <TableCell align=\"center\">\n                  {supplier.visible ? \"True\" : \"False\"}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","import React from 'react'\n\nimport useFetch from './useFetch'\n\nexport default function useFetchSuppliers({\n    visible,\n    city_id,\n    catagory_id,\n    supplier_name\n}) {\n    \n    const searchParams= new URLSearchParams()\n    if(city_id) searchParams.append('city_id',city_id)\n    if(visible != null || undefined) searchParams.append('visible', visible)\n    if(catagory_id) searchParams.append('catagory_id', catagory_id)\n    if(supplier_name) searchParams.append('supplier_name', supplier_name)\n    \n    const url = `/api/suppliers/getall?${searchParams}`\n\n    const {err,loading,result} = useFetch('GET',url)\n    \n    return {err,loading,result}\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function deleteCity(city_id){\n    const url = `/api/cities/delete`\n    const response = await fetchWithCredentials('DELETE', url, {city_id})\n    return response.ok;\n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function updateCity(city_id, city_name){\n    const url = '/api/cities/update'\n    const response = await fetchWithCredentials('PUT',url,{city_id,city_name})\n    return response.ok\n}","import React,{useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\nimport {CircularProgress, TextField,makeStyles, Button} from '@material-ui/core'\nimport LightScreen from '../components/LightScreen'\nimport ErrorText from '../components/ErrorText'\nimport NavigationBar from '../components/NavigationBar'\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport DisplaySuppliers from '../components/DisplaySuppliers'\nimport deleteCity from '../helperFunctions/deleteCity'\nimport updateCity from '../helperFunctions/updateCity'\n\nconst useStyles = makeStyles({\n    button: { margin: \"1rem\", width: \"80vmin\" },\n  });\n\nexport default function CityScreen() {\n    const {id} = useParams()\n    const url = `/api/cities/get?city_id=${id}`\n    const styles = useStyles()\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState('');\n    const [name, setName] = useState('');\n    const [title, setTitle] = useState('City')\n    const history = useHistory()\n\n    useEffect(()=>{\n        const getData =  async () =>{\n            setLoading(true);\n            const response = await fetchWithCredentials('GET', url);\n            const data = await response.json()\n            setName(data.city_name);\n            setLoading(false)\n            setTitle(data.city_name)\n        }\n\n        getData()\n            .catch(err=> setErr(err))\n    },[])\n    \n    const CityInfo = ()=>{\n        const handleName = (e)=>{\n            setName(e.target.value)\n        }\n        \n        const handleDelete = async ()=>{\n            const confirmed = window.confirm(\"Are You Sure You Want To Delete This City?\")\n            if(!confirmed) return;\n            const deleted = await deleteCity(id);\n            if(deleted){\n                window.alert(\"City Deleted\")\n                history.goBack()\n                return;\n            }\n            window.alert(\"Failed to Delete\")\n        }\n\n        const handleUpdate = async ()=>{\n            const confirmed = window.confirm('Are You Sure You Want To Update');\n            if(!confirmed) return;\n            const updated = await updateCity(id,name);\n            if(updated){\n                window.alert(\"City Updated\")\n                history.goBack()\n                return;\n            }\n            window.alert('Failed To Update')\n        }\n        return(\n\n            <div className=\"button-container\">\n                \n            <Button color=\"primary\"\n                onClick={handleDelete}\n            >\n                Delete\n            </Button>\n\n            <TextField value={name}\n            label=\"Name\"\n            variant=\"outlined\"\n            className={styles.button}\n            value={name}\n            autoFocus={true}\n            onChange={handleName}\n            required\n            />\n\n            <Button color=\"primary\" variant=\"contained\"\n                onClick = {handleUpdate}\n            >\n                Update\n            </Button>\n            </div>\n        )\n    }\n\n    const Display = ()=>{\n        if(loading) return <CircularProgress color=\"primary\" />\n        if(err) return <ErrorText> {err} </ErrorText> \n        return <CityInfo />\n    }\n\n    return(\n        <LightScreen>\n            <NavigationBar title={title} />\n            <Display />\n            <h2> Suppliers </h2>\n            <DisplaySuppliers city_id={id} />\n        </LightScreen>\n    )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport CitiesScreen from '../screens/CitiesScreen'\nimport CityScreen from '../screens/CityScreen'\n\nexport default function City({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={CitiesScreen}/>\n           <Route exact path={`${match.url}/:id`} component={CityScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchCatagories(){\n    const url = `/api/catagories/getall`;\n    const { loading, result, err } = useFetch(\"GET\", url);\n    return {loading, result, err} \n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default  async function addCatagory(catagory_name){\n    const url = `/api/catagories/add`\n    const response = await fetchWithCredentials('POST',url,{catagory_name})\n    return response.ok;\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  CircularProgress,\n  Paper,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport colors from \"../defaults/colors.json\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport ErrorText from \"../components/ErrorText\";\nimport addCatagory from '../helperFunctions/addCatagory'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: colors.PRIMARY_RED,\n    color: colors.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function CitiesScreen({match}) {\n  const { loading, result, err } = useFetchCatagories();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleAddCatagory = async () =>{\n    const catagory_name = window.prompt(\"Catagory Name\");\n    if(!catagory_name) return;\n    const success = await addCatagory(catagory_name)\n    if(success){\n      alert(\"Catagory Added\")\n      return;\n    }\n    alert(\"Failed To Add Catagory\")\n  }\n\n  const Catagory = () => {\n    return (\n      <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                No.\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Catagory Name\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((catagory, index) => (\n              <TableRow\n                key={catagory.catagory_id}\n                onClick={() => {\n                  history.push(`${match.url}/${catagory.catagory_id}`);\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {index+1}\n                </TableCell>\n                <TableCell align=\"center\">{catagory.catagory_name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const Display = () => {\n    if (loading) return <CircularProgress color=\"primary\" />;\n    if (err) return <ErrorText> {err} </ErrorText>;\n    return <Catagory />;\n  };\n  return (\n    <LightScreen>\n      <NavigationBar title=\"Catagories\" />\n      <Button color=\"primary\"\n        onClick={handleAddCatagory}\n      > Add Catagory </Button>\n      <Display />\n    </LightScreen>\n  );\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function deleteCity(catagory_id){\n    const url = `/api/catagories/delete`\n    const response = await fetchWithCredentials('DELETE', url, {catagory_id})\n    return response.ok;\n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function updateCity(catagory_id, catagory_name){\n    const url = '/api/catagories/update'\n    const response = await fetchWithCredentials('PUT',url,{catagory_id,catagory_name})\n    return response.ok\n}","import React,{useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\nimport {CircularProgress, TextField,makeStyles, Button} from '@material-ui/core'\nimport LightScreen from '../components/LightScreen'\nimport ErrorText from '../components/ErrorText'\nimport NavigationBar from '../components/NavigationBar'\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport DisplaySuppliers from '../components/DisplaySuppliers'\nimport deleteCatagory from '../helperFunctions/deleteCatagory'\nimport updateCatagory from '../helperFunctions/updateCatagory'\n\nconst useStyles = makeStyles({\n    button: { margin: \"1rem\", width: \"80vmin\" },\n  });\n\nexport default function CityScreen() {\n    const {id} = useParams()\n    const url = `/api/catagories/get?catagory_id=${id}`\n    const styles = useStyles()\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState('');\n    const [name, setName] = useState('');\n    const [title, setTitle] = useState('Catagory')\n    const history = useHistory()\n\n    useEffect(()=>{\n        const getData =  async () =>{\n            setLoading(true);\n            const response = await fetchWithCredentials('GET', url);\n            const data = await response.json()\n            setName(data.catagory_name);\n            setLoading(false)\n            setTitle(data.catagory_name)\n        }\n\n        getData()\n            .catch(err=> setErr(err))\n    },[])\n    \n    const CityInfo = ()=>{\n        const handleName = (e)=>{\n            setName(e.target.value)\n        }\n        \n        const handleDelete = async ()=>{\n            const confirmed = window.confirm(\"Are You Sure You Want To Delete This Catagory?\")\n            if(!confirmed) return;\n            const deleted = await deleteCatagory(id);\n            if(deleted){\n                window.alert(\"Catagory Deleted\")\n                history.goBack()\n                return;\n            }\n            window.alert(\"Failed to Delete\")\n        }\n\n        const handleUpdate = async ()=>{\n            const confirmed = window.confirm('Are You Sure You Want To Update');\n            if(!confirmed) return;\n            const updated = await updateCatagory(id,name);\n            if(updated){\n                window.alert(\"Catagory Updated\")\n                history.goBack()\n                return;\n            }\n            window.alert('Failed To Update')\n        }\n        return(\n\n            <div className=\"button-container\">\n                \n            <Button color=\"primary\"\n                onClick={handleDelete}\n            >\n                Delete\n            </Button>\n\n            <TextField value={name}\n            label=\"Name\"\n            variant=\"outlined\"\n            className={styles.button}\n            value={name}\n            autoFocus={true}\n            onChange={handleName}\n            required\n            />\n\n            <Button color=\"primary\" variant=\"contained\"\n                onClick = {handleUpdate}\n            >\n                Update\n            </Button>\n            </div>\n        )\n    }\n\n    const Display = ()=>{\n        if(loading) return <CircularProgress color=\"primary\" />\n        if(err) return <ErrorText> {err} </ErrorText> \n        return <CityInfo />\n    }\n\n    return(\n        <LightScreen>\n            <NavigationBar title={title} />\n            <Display />\n            <h2> Suppliers </h2>\n            <DisplaySuppliers catagory_id={id} />\n        </LightScreen>\n    )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport CatagoriesScreen from '../screens/CatagoriesScreen'\nimport CatagoryScreen from '../screens/CatagoryScreen'\n\nexport default function Catagory({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={CatagoriesScreen}/>\n           <Route exact path={`${match.url}/:id`} component={CatagoryScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import React,{useState} from \"react\";\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CustomSelect({\n  label,\n  options = [],\n  selection = {value: \"All\"},\n  setSelection,\n}) {\n  const styles = useStyles();\n  const [currentValue, setCurrentValue] = useState(selection.id)\n  return (\n    <FormControl className={styles.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId={label}\n        value={currentValue}\n        onChange={(e) => {\n          setCurrentValue(e.target.value)\n          setSelection(e.target.value)}}\n      >\n        \n        {selection.id?null:<MenuItem value={selection.id}>{String(selection.value)}</MenuItem>}\n        {options.map((option) => (\n          <MenuItem key={option.id} value={option.id}>{String(option.value)}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, {useState, useContext, useReducer} from \"react\";\n\nconst SupplierContext = React.createContext();\nconst LoadingContext = React.createContext();\nconst ErrorContext = React.createContext()\n\nexport const ACTIONS = {\n  SETSUPPLIER: \"supplier\",\n  SETCITY: \"city\",\n  SETEMAIL: \"email\",\n  SETDESCRIPTION: \"description\",\n  TOGGLEVISIBLITY: \"togglevisibility\",\n  SETPASSWORD: \"password\",\n  SETREPASSWORD: \"repassword\",\n  SETCATAGORY: \"catagory\",\n  SETCONTACTNUM: \"contact\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETSUPPLIER:\n      return { ...state, supplier_name: action.payload };\n    case ACTIONS.SETCITY:\n      return { ...state, city_id: action.payload };\n    case ACTIONS.SETEMAIL:\n      return { ...state, email_id: action.payload };\n    case ACTIONS.TOGGLEVISIBLITY:\n      return { ...state, visible: !state.visible };\n    case ACTIONS.SETPASSWORD:\n      return { ...state, password: action.payload };\n    case ACTIONS.SETDESCRIPTION:\n      return { ...state, supplier_description: action.payload };\n    case ACTIONS.SETREPASSWORD:\n      return { ...state, repassword: action.payload };\n    case ACTIONS.SETCATAGORY:\n      return { ...state, catagory_id: action.payload };\n    case ACTIONS.SETCONTACTNUM:\n      return { ...state, contact_number: action.payload };\n    default:\n      return state;\n  }\n}\n\n\nexport function useSupplier(){\n    const [state,dispatch] = useContext(SupplierContext)\n    return {state,dispatch}\n}\n\nexport function useErrors(){\n    const [err, setErr] = useContext(ErrorContext)\n    return {err, setErr};\n}\n\nexport function  useLoading(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return {loading,setLoading}\n}\n\nexport function SupplierInfo({children}) {\n  const [state, dispatch] = useReducer(reducer, {\n    supplier_name: \"\",\n    city_id: \"\",\n    email_id: \"\",\n    supplier_description: \"\",\n    visible: false,\n    password: \"\",\n    repassword: \"\",\n    catagory_id: \"\",\n    contact_number: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState([]);\n\n  return(\n      <SupplierContext.Provider value={[state,dispatch]}>\n        <ErrorContext.Provider value={[err,setErr]}>\n            <LoadingContext.Provider value={[loading,setLoading]}>\n                {children}\n            </LoadingContext.Provider>\n        </ErrorContext.Provider>\n      </SupplierContext.Provider>\n  );\n}\n","import { useSupplier, ACTIONS } from \"../contexts/AddSupplierInfo\";\n\nimport React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport CustomSelect from \"./CustomSelect\";\nimport CustomSwitch from \"./CustomSwitch\";\nimport DisplayLoading from './DisplayLoading'\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    paddingBottom: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  fullcontainer:{\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\"\n  }\n});\n\nexport default function SupplierForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useSupplier();\n\n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  if (citiesloading || catagoryloading) return <DisplayLoading loading={true}/>\n\n  return (\n    <>\n      <CustomSwitch\n        checked={state.visible}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEVISIBLITY })}\n        label=\"Visible\"\n      />\n\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.supplier_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETSUPPLIER, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        className={styles.button}\n        value={state.email_id}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Description\"\n        variant=\"outlined\"\n        multiline\n        rows={5}\n        className={styles.button}\n        value={state.supplier_description}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETDESCRIPTION, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.password}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Retype Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.repassword}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETREPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Contact Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        className={styles.button}\n        value={state.contact_number}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETCONTACTNUM, payload: e.target.value })\n        }\n        required\n      />\n\n    <div className={styles.fullcontainer}>\n      <CustomSelect\n        label={\"City\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCITY, payload: value });\n        }}\n        options={cities.map((city) => ({\n          id: city.city_id,\n          value: city.city_name,\n        }))}\n        selection={{ id: cities[0].city_id, value: cities[0].city_name }}\n      />\n\n      <CustomSelect\n        label={\"Catagory\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCATAGORY, payload: value });\n        }}\n        options={catagories.map((catagory) => ({\n          id: catagory.catagory_id,\n          value: catagory.catagory_name,\n        }))}\n        selection={{\n          id: catagories[0].catagory_id,\n          value: catagories[0].catagory_name,\n        }}\n      />\n    </div>\n    </>\n  );\n}\n","import React, { useReducer, useState } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nimport {\n  SupplierInfo,\n  useLoading,\n  useErrors,\n  useSupplier,\n} from \"../contexts/AddSupplierInfo\";\n\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\nimport {\n  validateEmail,\n  validatePassword,\n} from \"../helperFunctions/inputValidations\";\n\nimport CancelAndOk from \"../components/CancelAndOkButton\";\nimport DisplayLoading from \"./DisplayLoading\";\nimport DisplayErrors from \"./DisplayErrors\";\nimport AddSupplierForm from \"./AddSupplierForm\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  inside:{\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0.5em\",\n    alignItems: \"center\",\n    padding: \"0.5em\"\n  },\n \n});\n\nasync function addSupplier(state) {\n  const url = `/api/suppliers/add`;\n  const body = { ...state };\n  const response = await fetchWithCredentials(\"POST\", url, body);\n  if (response.ok) {\n    return response.ok;\n  }\n  throw await response.text();\n}\n\nfunction validations(supplier_data) {\n  let errors = [];\n  if (!validateEmail(supplier_data.email_id))\n    errors = [...errors, \"Invalid Email\"];\n  if (!validatePassword(supplier_data.password))\n    errors = [...errors, \"Password should Be Atleast 6 digit long\"];\n  if (supplier_data.password !== supplier_data.repassword)\n    errors = [...errors, \"Passwords Don't Match\"];\n  return errors;\n}\n\nexport default function AddSupplier({ handleClose }) {\n  return (\n    <SupplierInfo>\n      <Wrapper handleClose={handleClose} />\n    </SupplierInfo>\n  );\n}\n\nfunction Wrapper({ handleClose }) {\n  const styles = useStyles();\n  const { state } = useSupplier();\n  const { loading, setLoading } = useLoading();\n  const { err, setErr } = useErrors();\n\n  const handleAddSupplier = async () => {\n    setErr([]);\n    const errors = validations(state);\n    if (errors.length > 0) {\n      setErr([...errors]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const supplier_added = await addSupplier(state);\n      setLoading(false);\n      if (supplier_added) {\n        handleClose();\n        return alert(\"Suppliers Added\");\n      }\n      throw \"Failed To Add Suppliers\";\n    } catch (err) {\n      setLoading(false);\n      setErr([String(err)]);\n    }\n  };\n\n  return (\n    <Paper className={styles.wrapper}>\n      <div className={styles.inside}>\n        <DisplayLoading loading={loading} />\n        <DisplayErrors errors={err} />\n        <AddSupplierForm />\n        <CancelAndOk\n          okLabel={\"Add Supplier\"}\n          onClickOk={handleAddSupplier}\n          cancelLabel={\"Cancel\"}\n          onClickCancel={handleClose}\n        />\n      </div>\n    </Paper>\n  );\n}\n","import React, { useReducer, useState } from \"react\";\n\nimport {\n  CircularProgress,\n  TextField,\n  Button,\n  makeStyles,\n  Backdrop,\n} from \"@material-ui/core\";\n\nimport CustomSelect from \"../components/CustomSelect\";\nimport ErrorText from \"../components/ErrorText\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport LightScreen from \"../components/LightScreen\";\nimport DisplaySuppliers from \"../components/DisplaySuppliers\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport AddSupplier from \"../components/AddSupplier\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: \"1em\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nfunction AddSuppliers({ open, handleClose }) {\n  const styles = useStyles();\n  return (\n    <Backdrop open={open} className={styles.backdrop}>\n      <AddSupplier handleClose={handleClose} />\n    </Backdrop>\n  );\n}\n\nconst ACTION = {\n  SETVISIBILITY: \"setvisibility\",\n  SETSUPPLIERNAME: \"setsuppliername\",\n  SETCATAGORY: \"setcatagory\",\n  SETCITY: \"setcity\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTION.SETVISIBILITY:\n      return { ...state, visible: action.payload };\n    case ACTION.SETSUPPLIERNAME:\n      return { ...state, supplier_name: action.payload };\n    case ACTION.SETCATAGORY:\n      return { ...state, catagory_id: action.payload };\n    case ACTION.SETCITY:\n      return { ...state, city_id: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction SelectOptions({ state, dispatch }) {\n  const styles = useStyles();\n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  const [search, setSearch] = useState(\"\");\n\n  if (catagoryloading || citiesloading)\n    return <CircularProgress color=\"primary\" />;\n  if (catagorieserr || citiesserr)\n    return <ErrorText> Something Went Wrong </ErrorText>;\n\n  return (\n    <div className={styles.wrapper}>\n      <CustomSelect\n        label=\"City\"\n        options={{value: \"All\"},cities.map((city) => ({\n          id: city.city_id,\n          value: city.city_name,\n        }))}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETCITY, payload: value })\n        }\n      />\n      <CustomSelect\n        label=\"Catagory\"\n        options={{value: \"All\"},catagories.map((catagory) => ({\n          id: catagory.catagory_id,\n          value: catagory.catagory_name,\n        }))}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETCATAGORY, payload: value })\n        }\n      />\n      <CustomSelect\n        label=\"Visible\"\n        options={[\n          { id: true, value: \"True\" },\n          { id: false, value: \"False\" },\n        ]}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETVISIBILITY, payload: value })\n        }\n      />\n      <div className={styles.wrapper}>\n        <TextField\n          variant=\"outlined\"\n          value={search}\n          label=\"Name\"\n          onChange={(e) =>\n            //   dispatch({ type: ACTION.SETSUPPLIERNAME, payload: e.target.value })\n            setSearch(e.target.value)\n          }\n          type=\"search\"\n        />\n        <Button\n          color=\"primary\"\n          onClick={() =>\n            dispatch({ type: ACTION.SETSUPPLIERNAME, payload: search })\n          }\n        >\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function SuppliersScreen() {\n  const [state, dispatch] = useReducer(reducer, {\n    visible: null,\n    supplier_name: \"\",\n    catagory_id: \"\",\n    city_id: \"\",\n  });\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <LightScreen>\n      <NavigationBar />\n      <SelectOptions state={state} dispatch={dispatch} />\n      <AddSuppliers open={open} handleClose={handleClose} />\n      <Button color=\"primary\" onClick={handleOpen}>\n        Add New\n      </Button>\n      <DisplaySuppliers\n        visible={state.visible}\n        supplier_name={state.supplier_name}\n        catagory_id={state.catagory_id}\n        city_id={state.city_id}\n      />\n    </LightScreen>\n  );\n}\n","import React, { useContext, useState, useReducer, useEffect } from \"react\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\n\nconst SupplierContext = React.createContext();\nconst LoadingContext = React.createContext();\nconst ErrorContext = React.createContext();\n\n\nexport const ACTIONS = {\n  SETALL: \"setall\",\n  SETSUPPLIER: \"setsupplier\",\n  SETCITY: \"setcity\",\n  SETEMAIL: \"setemail\",\n  TOGGLEVISIBILITY: \"togglevisible\",\n  SETCATAGORY: \"setcatagory\",\n  SETCONTACT: \"setcontact\",\n  SETDESCRIPTION: \"setdescription\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETALL:\n      return { ...action.payload };\n    case ACTIONS.SETSUPPLIER:\n        return {...state, supplier_name: action.payload}\n    case ACTIONS.SETCITY:\n        return {...state,city_id: action.payload}\n    case ACTIONS.SETEMAIL:\n        return {...state, email_id: action.payload}\n    case ACTIONS.TOGGLEVISIBILITY:\n        return {...state, visible: !state.visible}\n    case ACTIONS.SETDESCRIPTION:\n        return{...state, supplier_description: action.payload}\n    case ACTIONS.SETCATAGORY:\n        return {...state, catagory_id: action.payload}\n    case ACTIONS.SETCONTACT:\n        return {...state, contact_number: action.payload}\n    default:\n        return state\n  }\n}\n\nexport function useSupplier(){\n    const [state, dispatch] = useContext(SupplierContext)\n    return {state, dispatch}\n}\n\nexport function useLoading(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return { loading, setLoading}\n}\n\nexport function useError(){\n    const [err, setErr] = useContext(ErrorContext)\n    return {err, setErr}\n}\n\nexport function SupplierInfo({ supplier_id, children }) {\n  const url = `/api/suppliers/get?supplier_id=${supplier_id}`;\n  const [state, dispatch] = useReducer(reducer, {\n    supplier_name: \"\",\n    image_id: \"\",\n    city_id: \"\",\n    email_id: \"\",\n    supplier_description: \"\",\n    visible: true,\n    catagory_id: \"\",\n    contact_number: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchWithCredentials(\"GET\", url);\n      if(!response.ok) throw response.statusText;\n      const data = await response.json();\n      dispatch({ type: ACTIONS.SETALL, payload: data });\n      setLoading(false);\n    };\n\n    getData().catch((err) => {\n      setLoading(false);\n      setErr(err);\n    });\n  },[supplier_id]);\n\n  return(\n      <SupplierContext.Provider value={[state,dispatch]}>\n        <LoadingContext.Provider value={[loading,setLoading]}>\n            <ErrorContext.Provider value={[err,setErr]}>\n                {children}\n            </ErrorContext.Provider>\n        </LoadingContext.Provider>\n      </SupplierContext.Provider>\n  );\n}\n","import { ACTIONS,useSupplier } from \"../contexts/SupplierInfo\";\n\nimport React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport CustomSelect from \"./CustomSelect\";\nimport CustomSwitch from \"./CustomSwitch\";\nimport DisplayLoading from './DisplayLoading'\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    paddingBottom: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  fullcontainer:{\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\"\n  }\n});\n\nexport default function SupplierForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useSupplier();\n\n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  if (citiesloading || catagoryloading) return <DisplayLoading loading={true}/>\n\n  return (\n    <>\n      <CustomSwitch\n        checked={state.visible}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEVISIBILITY })}\n        label=\"Visible\"\n      />\n\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.supplier_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETSUPPLIER, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        className={styles.button}\n        value={state.email_id}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Description\"\n        variant=\"outlined\"\n        multiline\n        rows={5}\n        className={styles.button}\n        value={state.supplier_description}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETDESCRIPTION, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Contact Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        className={styles.button}\n        value={state.contact_number}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETCONTACTNUM, payload: e.target.value })\n        }\n        required\n      />\n\n    <div className={styles.fullcontainer}>\n      <CustomSelect\n        label={\"City\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCITY, payload: value });\n        }}\n        options={cities.map((city) => ({\n          id: city.city_id,\n          value: city.city_name,\n        }))}\n        selection={{ id:state.city_id }}\n      />\n\n      <CustomSelect\n        label={\"Catagory\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCATAGORY, payload: value });\n        }}\n        options={catagories.map((catagory) => ({\n          id: catagory.catagory_id,\n          value: catagory.catagory_name,\n        }))}\n        selection={{\n          id: state.catagory_id,\n        }}\n      />\n    </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport { SupplierInfo, useLoading, useError, useSupplier} from \"../contexts/SupplierInfo\";\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport SupplierForm from \"../components/SupplierForm\";\nimport CancelAndOkButton from \"../components/CancelAndOkButton\";\nexport default function DisplaySupplier({ supplier_id }) {\n  return (\n    <SupplierInfo supplier_id={supplier_id}>\n      <Container supplier_id={supplier_id} />\n    </SupplierInfo>\n  );\n}\n\nfunction Container({supplier_id}) {\n  const history = useHistory();\n  const {state} = useSupplier()\n  const handleDelete = async () => {\n    const confirmed = window.confirm(\n      \"Are You Sure You Want To Delete this Account?\"\n    );\n    if (!confirmed) return;\n    const url = `/api/suppliers/delete`;\n    const data = { supplier_id };\n    const response = await fetchWithCredentials(\"DELETE\", url, data);\n    if (response.ok) {\n      alert(\"Supplier Deleted\");\n      history.goBack();\n      return;\n    }\n    alert(\"Failed To Delete\");\n  };\n\n  const handleUpdate = async () => {\n    const confirmed = window.confirm(\"Are You Sure You Want To Update\");\n    if (!confirmed) return;\n    const data = {\n      ...state,\n      supplier_id\n    };\n    const url = `/api/suppliers/update`;\n    const response = await fetchWithCredentials(\"PUT\", url, data);\n    if (response.ok) {\n      alert(\"Supplier Updated\");\n      return;\n    }\n    alert(\"Failed To Update\");\n  };\n\n  const { loading } = useLoading();\n  const { err } = useError();\n  if (loading) return <DisplayLoading loading={true} />;\n  if (err) return <DisplayErrors errors={[err]} />;\n  return (\n    <>\n      <CancelAndOkButton okLabel=\"Update\" cancelLabel=\"Delete\" \n        onClickOk={handleUpdate} onClickCancel={handleDelete}\n      />\n      <SupplierForm />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {\n  makeStyles,\n} from \"@material-ui/core\";\n\n\nimport LightScreen from '../components/LightScreen'\nimport NavigationBar from '../components/NavigationBar'\nimport DisplaySupplier from '../components/DisplaySupplier'\n\n// const useStyles = makeStyles({\n//   button: { margin: \"1rem\", width: \"80vmin\" },\n// });\n \nexport default function SupplierScreen() {\n  const { id } = useParams();\n  return (\n    <LightScreen>\n        <NavigationBar title={\"Supplier\"}/>\n        <DisplaySupplier supplier_id={id}/>\n    </LightScreen>\n  )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport SuppliersScreen from '../screens/SuppliersScreen'\nimport SupplierScreen from '../screens/SupplierScreen'\n\nexport default function Catagory({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={SuppliersScreen}/>\n           <Route exact path={`${match.url}/:id`} component={SupplierScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport {BrowserRouter as Router ,Route, Switch} from 'react-router-dom'\n\nimport NavScreen from '../screens/NavScreen'\nimport Employee from './Employee';\nimport City from './City';\nimport Catagory from './Catagory';\nimport Suppliers from './Supplier'\n\nexport default function Main() {\n    return (\n  \n        <Router basename=\"/admin\"> \n            <Switch>\n                <Route exact path={`${process.env.PUBLIC_URL}/`} component={NavScreen} />\n                <Route path ={`${process.env.PUBLIC_URL}/employees`} component={Employee} />\n                <Route path={`${process.env.PUBLIC_URL}/cities`} component={City} />\n                <Route path={`${process.env.PUBLIC_URL}/catagories`} component={Catagory} />\n                <Route path={`${process.env.PUBLIC_URL}/suppliers`} component={Suppliers} />\n            </Switch>\n        </Router> \n\n    )\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport Main from './navigation/Main'\nimport { useLoading, useIsLoggedIn } from \"./contexts/LoginInfo\";\n\nfunction Wrapper(){\n  const loading = useLoading();\n  const [isLoggedIn] =  useIsLoggedIn();\n\n  if(loading) return <LoadingScreen />;\n  if(!isLoggedIn) return <LoginScreen />;\n  return <Main />\n}\n\nfunction App() {\n  return (\n    <div className={\"App\"}>\n      <Wrapper />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport colors from \"./defaults/colors.json\";\nimport { LoginInfo } from \"./contexts/LoginInfo\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: colors.PRIMARY_RED,\n    },\n    secondary: {\n      main: colors.PRIMARY_WHITE,\n    },\n    \n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <LoginInfo>\n        <App />\n      </LoginInfo>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}