{"version":3,"sources":["user/validations/index.js","user/shopdharan.png","user/shopdharan-white.png","user/placeholder.jpeg","user/helperFunctions/fetchAccessToken.js","user/contexts/LoginInfo.js","user/contexts/Cart.js","user/contexts/Settings.js","user/components/Logo.js","user/components/LightScreen.js","user/components/RedText.js","user/components/Loading.js","user/components/ErrorText.js","user/components/Errors.js","user/components/CustomText.js","user/components/CenterPaper.js","user/components/CustomButton.js","user/forms/LoginForm.js","user/forms/SignupForm.js","user/components/Center.js","user/forms/RequestPinForm.js","user/forms/ResetPasswordForm.js","user/screens/LoginScreen.js","user/hooks/useFetch.js","user/components/SupplierCard.js","user/components/HeadingText.js","user/section/DisplayProductByCatagory.js","user/hooks/useFetchSuppliers.js","user/components/CitySelect.js","user/hooks/useFetchCities.js","user/helperFunctions/capitalize.js","user/section/NavList.js","user/components/NavBar.js","user/screens/HomeScreen.js","user/hooks/useFetchCatagories.js","user/components/ImageComponent.js","user/section/DisplaySupplier.js","user/components/ProductCard.js","user/section/DisplayProducts.js","user/screens/SupplierScreen.js","user/hooks/useFetchSupplier.js","user/hooks/useFetchProducts.js","user/components/SearchBar.js","user/screens/SearchScreen.js","user/hooks/useProductSearch.js","user/components/RedScreen.js","user/section/NavLinks.js","user/screens/NavScreen.js","user/hooks/useFetchProduct.js","user/section/ProductDetails.js","user/section/Quantity.js","user/screens/ProductScreen.js","user/section/CartTable.js","user/section/DisplayCartOrder.js","user/hooks/useFetchCartOrder.js","user/screens/CartScreen.js","user/screens/CartProductScreen.js","user/section/DisplayCost.js","user/section/DisplayAddOrder.js","user/hooks/useFetchCost.js","user/helperFunctions/validateAccessToken.js","user/hooks/useFetchWithAuth.js","user/hooks/useFetchAddress.js","user/components/AddressSelect.js","user/helperFunctions/fetchWithCredentials.js","user/helperFunctions/addOrder.js","user/screens/AddOrderScreen.js","user/helperFunctions/deleteAddress.js","user/section/Address.js","user/section/DisplayAddress.js","user/screens/AddressScreen.js","user/helperFunctions/addAddress.js","user/forms/AddAddressForm.js","user/screens/AddAddressScreen.js","user/components/OrderStatusSelect.js","user/hooks/useFetchOrderStatus.js","user/section/OrderDetails.js","user/helperFunctions/msToTime.js","user/section/DisplayOrders.js","user/screens/OrdersScreen.js","user/hooks/useFetchOrders.js","user/section/OrderTable.js","user/helperFunctions/cancelOrder.js","user/section/DisplayOrder.js","user/hooks/useFetchOrder.js","user/screens/OrderScreen.js","user/helperFunctions/logout.js","user/section/Logout.js","user/section/Login.js","user/section/UserList.js","user/screens/UserScreen.js","user/forms/ChangePasswordForm.js","user/screens/ChangePasswordScreen.js","user/navigation/Home.js","user/screens/SetCityScreen.js","user/navigation/Main.js","user/App.js"],"names":["module","exports","validateEmail","email","test","String","toLowerCase","validatePassword","password","length","fetchAccessToken","refreshToken","a","data","fetch","method","headers","Accept","body","JSON","stringify","response","ok","statusText","json","accessToken","loadingContext","React","createContext","isLoggedInContext","roleContext","refreshTokenContext","accessTokenContext","continueWithoutLoginContext","useAccessToken","useContext","setAccessToken","useRefreshToken","setRefreshToken","useIsLoggedIn","useContinueWithoutLogin","continueWithoutLogin","setContinueWithoutLogin","LoginInfo","children","useState","loading","setLoading","isLoggedIn","setIsLoggedIn","role","setRole","Boolean","parse","sessionStorage","getItem","localStorage","useEffect","setItem","then","decoded","jwt_decode","catch","err","console","log","Provider","value","cartContext","useCart","cart","addToCart","updateCartItemQuantity","removeFromCart","clearCart","Cart","setCart","product_id","quantity","map","item","parseInt","product","cartItem","find","newQuantity","items","filter","settingsContext","ACTIONS","reducer","state","action","type","payload","city_id","useSettings","settings","dispatch","Settings","useReducer","useStyles","makeStyles","logo","width","padding","objectFit","Logo","variant","props","styles","logoWhite","logoRed","src","className","alt","fullscreen","display","flexDirection","backgroundColor","COLORS","PRIMARY_WHITE","flex","marginLeft","marginRight","overflowY","maxWidth","overflowX","minHeight","LightScreen","Paper","text","fontWeight","textDecoration","cursor","RedText","fields","Typography","color","DisplayLoading","center","CircularProgress","style","ErrorText","DisplayErrors","errors","index","key","toString","input","margin","CustomText","label","onChange","onBlur","required","multiline","rowsMax","TextField","container","alignItems","justifyContent","CenterPaper","button","CustomButton","onClick","Button","fetchTokens","LoginForm","history","useHistory","setErr","initialValues","email_id","onSubmit","setSubmitting","isSubmitting","handleSubmit","name","as","push","authlinks","RequestPin","SignUp","user_name","repassword","mobile_number","validate","error","helperText","Login","Center","Container","requestPin","RequestPinForm","ResetPassword","alert","resetPassword","ResetForm","new_password","renew_password","pin","LoginScreen","path","component","SignupForm","ResetPasswordForm","useFetch","url","result","setResult","options","request","fetchItems","card","height","image","SupplierCard","title","description","imageURI","id","Box","Card","CardHeader","subheader","CardMedia","fontSize","HeadingText","flexWrap","marginBottom","DisplayProductByCatagory","catagory_id","catagory_name","visible","supplier_name","searchParams","URLSearchParams","append","useFetchSuppliers","supplier","supplier_id","supplier_description","image_id","theme","formControl","spacing","minWidth","CitySelect","setValue","useFetchCities","FormControl","InputLabel","Select","labelId","event","target","city","MenuItem","city_name","capitalizeEachWord","sentence","split","word","lowerCaseWord","charAt","toUpperCase","slice","join","ListIcon","navlinks","Home","Search","ShoppingCart","Address","Business","Orders","MenuBook","User","Person","DoubleArrow","ListLink","link","ListItem","ListItemIcon","ListItemText","NavList","open","onClose","NavArray","Object","entries","Drawer","anchor","nav","PRIMARY_RED","Navigation","setOpen","toggleOpen","document","ArrowBack","goBack","Menu","HomeScreen","useFetchCatagories","catagory","useStyle","ImageComponent","onError","e","DisplaySupplier","textAlign","price","DisplayProducts","products","product_name","SupplierScreen","useParams","useFetchSupplier","available","useFetchProducts","producterr","productLoad","searchbar","SearchBar","search","setSearch","SearchScreen","page","setPage","page_no","undefined","setProducts","hasMore","setHasMore","oldProducts","Set","useProductSearch","RedScreen","links","transform","DisplayLinks","to","NavScreen","useFetchProduct","ProductDetails","product_description","Quantity","setQuantity","min","max","ProductScreen","table","head","DisplayCartTable","orders","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","order","NAVLINKS","scope","reduce","total","DisplayCartOrder","cart_orders","res","finally","useFetchCartOrder","CartScreen","window","confirm","CartProductScreen","DisplayCost","deliveryCharge","suppliers","DisplayAddOrder","address_id","useFetchCost","valid","validations","validateAccessToken","newAccessToken","authorization","fetchResources","reloadResources","useFetchAddress","useFetchWithAuth","AddressSelect","address","street_name","fetchWithCredentials","addOrder","resp","AddOrderScreen","setAddress","deleteAddress","details","DisplayAddress","onDelete","AddressScreen","addAddress","AddAddressForm","values","handleChange","errorText","AddAddressScreen","OrderStatusSelect","orderStatus","setOrderStatus","useFetchOrderStatus","status","OrderDetails","orderedTime","Date","ordered_time","ms","days","Math","floor","minutes","hours","msToTime","now","order_id","order_status","list","border","marginTop","colors","DisplayOrders","OrdersScreen","useFetchOrders","cancelOrder","DisplayOrder","useFetchOrder","ordered_items","numOfSuppliers","OrderScreen","logout","DisplayLogout","logoutStart","DisplayLogin","UserList","LockOpen","UserScreen","changePassword","old_password","ChangePasswordForm","oldpassword","newpassword","renewpassword","resetForm","handleBlur","ChangePasswordScreen","exact","SetCityScreen","setCity","disabled","Main","Wrapper","LoadingScreen","ROLES","USER","App"],"mappings":"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","file":"static/js/7.a27b6c12.chunk.js","sourcesContent":["function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nfunction validatePassword(password){\n    return ((password).length >= 6)\n}\n\nmodule.exports= {\n    validateEmail,\n    validatePassword\n}","module.exports = __webpack_public_path__ + \"static/media/shopdharan.f6198331.png\";","module.exports = __webpack_public_path__ + \"static/media/shopdharan-white.24657495.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.b35d838f.jpeg\";","export default async function fetchAccessToken(refreshToken){\n    const data = {refreshToken};\n\n    const response = await fetch(\"/api/token\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.accessToken;\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport jwt_decode from \"jwt-decode\";\n\nimport fetchAccessToken from \"../helperFunctions/fetchAccessToken\";\nconst loadingContext = React.createContext();\nconst isLoggedInContext = React.createContext();\nconst roleContext = React.createContext();\nconst refreshTokenContext = React.createContext();\nconst accessTokenContext = React.createContext();\nconst continueWithoutLoginContext = React.createContext();\n\nexport function useLoading() {\n  return useContext(loadingContext);\n}\n\nexport function useRole() {\n  return useContext(roleContext);\n}\n\nexport function useAccessToken() {\n  const [accessToken, setAccessToken] = useContext(accessTokenContext);\n  return { accessToken, setAccessToken };\n}\n\nexport function useRefreshToken() {\n  const [refreshToken, setRefreshToken] = useContext(refreshTokenContext);\n  return { refreshToken, setRefreshToken };\n}\n\nexport function useIsLoggedIn() {\n  return useContext(isLoggedInContext);\n}\n\nexport function useContinueWithoutLogin() {\n  const [continueWithoutLogin, setContinueWithoutLogin] = useContext(\n    continueWithoutLoginContext\n  );\n  return { continueWithoutLogin, setContinueWithoutLogin };\n}\n\nexport function LoginInfo({ children }) {\n  const [loading, setLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [role, setRole] = useState(\"\");\n\n  const [continueWithoutLogin, setContinueWithoutLogin] = useState(\n    Boolean(JSON.parse(sessionStorage.getItem(\"continuewithoutlogin\"))) || false\n  );\n\n  const [refreshToken, setRefreshToken] = useState(\n    localStorage.getItem(\"refreshToken\")\n  );\n  const [accessToken, setAccessToken] = useState(\n    sessionStorage.getItem(\"accessToken\")\n  );\n\n  useEffect(() => {\n    sessionStorage.setItem(\"continuewithoutlogin\", continueWithoutLogin);\n  }, [continueWithoutLogin]);\n\n  useEffect(() => {\n    localStorage.setItem(\"refreshToken\", refreshToken);\n  }, [refreshToken]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"accessToken\", accessToken);\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!refreshToken) {\n      setLoading(false);\n      setIsLoggedIn(false);\n      setRole(\"\");\n      return;\n    }\n    fetchAccessToken(refreshToken)\n      .then((accessToken) => {\n        const decoded = jwt_decode(accessToken);\n        setRole(decoded.role);\n        setLoading(false);\n        setIsLoggedIn(true);\n        setAccessToken(accessToken);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setIsLoggedIn(false);\n      });\n  }, [refreshToken]);\n\n  return (\n    <loadingContext.Provider value={loading}>\n      <isLoggedInContext.Provider value={isLoggedIn}>\n        <roleContext.Provider value={role}>\n          <refreshTokenContext.Provider value={[refreshToken, setRefreshToken]}>\n            <accessTokenContext.Provider value={[accessToken, setAccessToken]}>\n              <continueWithoutLoginContext.Provider\n                value={[continueWithoutLogin, setContinueWithoutLogin]}\n              >\n                {children}\n              </continueWithoutLoginContext.Provider>\n            </accessTokenContext.Provider>\n          </refreshTokenContext.Provider>\n        </roleContext.Provider>\n      </isLoggedInContext.Provider>\n    </loadingContext.Provider>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\n\nconst cartContext = React.createContext();\n\n\n\nexport function useCart() {\n  const [\n    cart,\n    addToCart,\n    updateCartItemQuantity,\n    removeFromCart,\n    clearCart,\n  ] = useContext(cartContext);\n  return {\n    cart,\n    addToCart,\n    updateCartItemQuantity,\n    removeFromCart,\n    clearCart,\n  };\n}\n\nexport function Cart({ children }) {\n\n  const [cart, setCart] = useState(\n    JSON.parse(localStorage.getItem(\"cart\")) || []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  function clearCart() {\n    setCart([]);\n  }\n\n  function removeFromCart(product_id) {\n    setCart((cart) => {\n      return cart.filter((item) => item.product_id !== product_id);\n    });\n  }\n\n  function updateCartItemQuantity(product_id, quantity) {\n    if (quantity <= 0) return;\n    setCart((cart) => {\n      return cart.map((item) => {\n        if (item.product_id === product_id)\n          return {\n            product_id: item.product_id,\n            quantity: parseInt(quantity),\n          };\n        return item;\n      });\n    });\n  }\n\n  function addToCart(product, quantity) {\n    //quantity must be greater than 0\n    if (quantity <= 0) return;\n    const cartItem = cart.find(\n      (item) => item.product_id === product.product_id\n    );\n    if (cartItem) {\n      //If Item is In Cart Update Quantity\n      const newQuantity = parseInt(cartItem.quantity) + parseInt(quantity);\n      updateCartItemQuantity(product.product_id, newQuantity);\n    } else {\n      //else add item to cart\n      setCart((items) => {\n        return [\n          ...items,\n          { product_id: product.product_id, quantity: parseInt(quantity) },\n        ];\n      });\n    }\n  }\n\n  return (\n\n        <cartContext.Provider\n          value={[\n            cart,\n            addToCart,\n            updateCartItemQuantity,\n            removeFromCart,\n            clearCart,\n          ]}\n        >\n          {children}\n        </cartContext.Provider>\n  );\n}\n","import React, { useContext, useEffect, useReducer } from \"react\";\n\nconst settingsContext = React.createContext();\n\nexport const ACTIONS = {\n  SETALL: \"setall\",\n  SETCITY: \"setcity\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETALL:\n      return { ...action.payload };\n    case ACTIONS.SETCITY:\n      return { ...state, city_id: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function useSettings() {\n  const [settings, dispatch] = useContext(settingsContext);\n  return { settings, dispatch };\n}\n\nexport function Settings({ children }) {\n  const [settings, dispatch] = useReducer(reducer, {\n    city_id: \"\",\n  });\n\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.SETALL,\n      payload: JSON.parse(localStorage.getItem(\"settings\")),\n    });\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n  }, [settings]);\n\n  return (\n    <settingsContext.Provider value={[settings, dispatch]}>\n      {children}\n    </settingsContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {makeStyles} from '@material-ui/core'\nimport logoRed from \"../shopdharan.png\";\nimport logoWhite from '../shopdharan-white.png'\n\nconst useStyles = makeStyles({\n  logo:{\n    width:\"80vmin\",\n    padding: 50,\n    objectFit: \"contain\"\n  }\n})\n\nexport default function Logo({variant=\"white\", ...props}) {\n  const styles = useStyles()\n  const logo= (variant.toLowerCase())===\"white\"?logoWhite:logoRed;\n  return <img src={logo} className={styles.logo} {...props} alt=\"Shop Dharan\"/>;\n}\n","import React from 'react'\nimport COLORS from '../defaults/colors.json'\nimport {makeStyles, Paper} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    fullscreen:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: COLORS.PRIMARY_WHITE,\n        flex: 1,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        overflowY: \"auto\",\n        // alignItems: \"center\",\n        maxWidth: 800,\n        overflowX: \"hidden\",\n        minHeight: \"100vh\",\n    }\n}) \nexport default function LightScreen({children}) {\n    const styles = useStyles()\n    return (\n        <Paper className={styles.fullscreen}> \n             {children}\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {Typography, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    text:{\n        fontWeight: \"bold\",\n        \"&:hover\": {\n            textDecoration: \"underline\",\n            cursor: \"pointer\"\n        }\n    }\n})\n\nexport default function RedText({children, ...fields}) {\n    const styles = useStyles()\n    return (\n       <Typography color={\"primary\"} className={styles.text} {...fields}>\n           {children}\n       </Typography>\n    )\n}\n","import React from 'react'\nimport {CircularProgress} from '@material-ui/core'\n\nexport default function DisplayLoading({loading=true, color, center, ...props}) {\n    if(loading) return <CircularProgress  color={color||\"primary\"} style={center && {marginLeft:\"auto\", marginRight:\"auto\"}} {...props}/>\n    return null;\n}\n","import React from 'react'\nimport {Typography} from '@material-ui/core'\n\nexport default function ErrorText({children}) {\n    return (\n        <Typography color=\"primary\">\n            {children}\n        </Typography>\n    )\n}\n","import React from 'react'\nimport ErrorText from './ErrorText'\n\nexport default function DisplayErrors({errors=[]}) {\n    if(errors.length>0){\n        return errors.map((err, index)=>(\n            <ErrorText key={index} >\n                {err.toString()}\n            </ErrorText>\n        ))\n    }\n    return null;\n}\n","import React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  input: { margin: \"1rem\", width: \"80vmin\" },\n});\n\nexport default function CustomText({\n  label,\n  type,\n  value,\n  onChange,\n  onBlur,\n  required,\n  multiline,\n  rowsMax,\n  ...props\n}) {\n  const styles = useStyles();\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      type={type}\n      className={styles.input}\n      value={value}\n      multiline={multiline}\n      rowsMax={rowsMax}\n      onChange={onChange}\n      onBlur={onBlur}\n      required={required}\n      {...props}\n    />\n  );\n}\n","import React from 'react'\nimport {Paper, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    container:{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 10,\n    },\n})\n\nexport default function CenterPaper({children}) {\n    const styles = useStyles()\n    return (\n        <Paper className={styles.container}>\n            {children}\n        </Paper>\n    )\n}\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  button: { margin: 20, padding: 5 },\n});\n\nexport default function CustomButton({\n  children,\n  onClick,\n  variant = \"contained\",\n  ...props\n}) {\n  const styles = useStyles();\n  return (\n    <Button\n      className={styles.button}\n      variant={variant}\n      color=\"primary\"\n      onClick={onClick}\n      {...props}\n    >\n      <b>{children}</b>\n    </Button>\n  );\n}\n\nCustomButton.propTypes = {\n  onClick: propTypes.func,\n  variant: propTypes.oneOf([\"contained\", \"text\", \"outlined\"]),\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\nimport {\n  useRefreshToken,\n  useAccessToken,\n  useContinueWithoutLogin,\n} from \"../contexts/LoginInfo\";\nimport authlinks from \"../defaults/authlinks.json\";\nimport RedText from \"../components/RedText\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport CustomText from \"../components/CustomText\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport CustomButton from \"../components/CustomButton\";\n\nasync function fetchTokens(data) {\n  const response = await fetch(\"/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw await response.text();\n  }\n  return await response.json();\n}\n\nexport default function LoginForm() {\n  const history = useHistory();\n  const [err, setErr] = useState(\"\");\n  const { setRefreshToken } = useRefreshToken();\n  const { setAccessToken } = useAccessToken();\n  const { setContinueWithoutLogin } = useContinueWithoutLogin();\n  return (\n    <CenterPaper>\n      <Formik\n        initialValues={{ email_id: \"\", password: \"\" }}\n        onSubmit={async (data, { setSubmitting }) => {\n          try {\n            setSubmitting(true);\n            const { accessToken, refreshToken } = await fetchTokens(data);\n            setAccessToken(accessToken);\n            setRefreshToken(refreshToken);\n          } catch (err) {\n            setErr(err);\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, handleSubmit }) => (\n          <>\n            <Loading loading={isSubmitting} />\n            <Errors errors={[err]} />\n            <Field\n              name=\"email_id\"\n              type=\"text\"\n              label=\"Email\"\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              required\n              as={CustomText}\n            />\n            <CustomButton type=\"submit\" onClick={handleSubmit}>\n              Login\n            </CustomButton>\n            <RedText\n              onClick={() => {\n                setContinueWithoutLogin(true);\n              }}\n            >\n              {\" \"}\n              Continue Without Login{\" \"}\n            </RedText>\n\n            <RedText\n              onClick={() => {\n                history.push(authlinks.RequestPin);\n              }}\n            >\n              Forgot Password?\n            </RedText>\n            <RedText\n              onClick={() => {\n                history.push(authlinks.SignUp);\n              }}\n            >\n              {\" \"}\n              Not A User?{\" \"}\n            </RedText>\n          </>\n        )}\n      </Formik>\n    </CenterPaper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\nimport {\n  useRefreshToken,\n  useAccessToken,\n} from \"../contexts/LoginInfo\";\n\nimport authlinks from '../defaults/authlinks.json'\nimport RedText from \"../components/RedText\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport CustomText from \"../components/CustomText\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport CustomButton from \"../components/CustomButton\";\nimport { validateEmail, validatePassword } from \"../validations\";\n\nasync function fetchTokens(data) {\n  const response = await fetch(\"/api/user/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw await response.text();\n  }\n  return await response.json();\n}\n\nexport default function LoginForm() {\n  const history = useHistory();\n  const [err, setErr] = useState(\"\");\n  const { setRefreshToken } = useRefreshToken();\n  const { setAccessToken } = useAccessToken();\n  return (\n    <CenterPaper>\n      <Formik\n        initialValues={{\n          user_name: \"\",\n          email_id: \"\",\n          password: \"\",\n          repassword: \"\",\n          mobile_number: \"\",\n        }}\n        validate={(data) => {\n          const errors = {};\n          if (!validateEmail(data.email_id)) errors.email_id = \"Invalid Email\";\n          if (!validatePassword(data.password))\n            errors.password = \"Password Must Be Atleast 6 characters\";\n          if (data.password !== data.repassword)\n            errors.repassword = \"Passwords Donot Match\";\n          if (data.mobile_number.length !== 10)\n            errors.mobile_number = \"Mobile Number Must Be 10 digits long\";\n          if (data.mobile_number.length === 0)\n            errors.mobile_number = \"Mobile Number is Required\";\n          if (!/^\\d+$/.test(data.mobile_number))\n            errors.mobile_number = \"Invalid Mobile number\";\n          if (data.user_name.length === 0)\n            errors.user_name = \"Name is Required\";\n          return errors;\n        }}\n        onSubmit={async (data, { setSubmitting }) => {\n          try {\n            setSubmitting(true);\n            const { accessToken, refreshToken } = await fetchTokens(data);\n            setAccessToken(accessToken);\n            setRefreshToken(refreshToken);\n            history.push(\"/\");\n          } catch (err) {\n            setErr(err);\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, handleSubmit, errors }) => (\n          <>\n            <Loading loading={isSubmitting} />\n            <Errors errors={[err]} />\n            <Field\n              name=\"user_name\"\n              type=\"text\"\n              label=\"Name\"\n              error={errors.user_name ? true : false}\n              helperText={errors.user_name}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"email_id\"\n              type=\"text\"\n              label=\"Email\"\n              error={errors.email_id ? true : false}\n              helperText={errors.email_id}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"mobile_number\"\n              type=\"tel\"\n              label=\"Mobile No.\"\n              error={errors.mobile_number ? true : false}\n              helperText={errors.mobile_number}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              error={errors.password ? true : false}\n              helperText={errors.password}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"repassword\"\n              type=\"password\"\n              label=\"Retype Password\"\n              error={errors.repassword ? true : false}\n              helperText={errors.repassword}\n              required\n              as={CustomText}\n            />\n            <CustomButton type=\"submit\" onClick={handleSubmit}>\n              Sign Up\n            </CustomButton>\n\n            <RedText\n              onClick={() => {\n                history.push(authlinks.Login);\n              }}\n            >\n              Already A User?\n            </RedText>\n          </>\n        )}\n      </Formik>\n    </CenterPaper>\n  );\n}\n","import React from \"react\";\nimport { Container, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default function Center({ children }) {\n  const styles = useStyles();\n  return <Container className={styles.container}>{children}</Container>;\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\nimport { validateEmail } from \"../validations\";\nimport RedText from \"../components/RedText\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport CustomText from \"../components/CustomText\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport CustomButton from \"../components/CustomButton\";\nimport authlinks from \"../defaults/authlinks.json\";\n\nasync function requestPin(data) {\n  const response = await fetch(\"/api/user/requestpin\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n\n  return response.ok;\n}\n\nexport default function RequestPinForm() {\n  const history = useHistory();\n  const [err, setErr] = useState(\"\");\n\n  return (\n    <CenterPaper>\n      <Formik\n        initialValues={{ email_id: \"\" }}\n        validate={(data) => {\n          const errors = {};\n          if (!validateEmail(data.email_id)) errors.email_id = \"Invalid Email\";\n          return errors;\n        }}\n        onSubmit={async (data, { setSubmitting }) => {\n          try {\n            setSubmitting(true);\n            const success = await requestPin(data);\n            if (success) {\n              return history.push(authlinks.ResetPassword);\n            }\n            alert(\"Failed To Send Email Please Try Again\");\n          } catch (err) {\n            setErr(err);\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, handleSubmit,errors }) => (\n          <>\n            <Loading loading={isSubmitting} />\n            <Errors errors={[err]} />\n            <Field\n              name=\"email_id\"\n              type=\"text\"\n              label=\"Email\"\n              error={errors.email_id ? true : false}\n              helperText={errors.email_id}\n              required\n              as={CustomText}\n            />\n\n            <CustomButton type=\"submit\" onClick={handleSubmit}>\n              Request Reset Pin From Email\n            </CustomButton>\n            <RedText\n              onClick={() => {\n                history.push(authlinks.ResetPassword);\n              }}\n            >\n              {\" \"}\n              Already Have A Pin?{\" \"}\n            </RedText>\n\n            <RedText\n              onClick={() => {\n                history.push(authlinks.Login);\n              }}\n            >\n              {\" \"}\n              Back To Login{\" \"}\n            </RedText>\n          </>\n        )}\n      </Formik>\n    </CenterPaper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\n\nimport { validateEmail, validatePassword } from \"../validations\";\nimport RedText from \"../components/RedText\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport CustomText from \"../components/CustomText\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport CustomButton from \"../components/CustomButton\";\nimport authlinks from \"../defaults/authlinks.json\";\n\nasync function resetPassword(data) {\n  const response = await fetch(\"/api/user/resetpassword\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw await response.text();\n  }\n  return response.ok;\n}\n\nexport default function ResetForm() {\n  const history = useHistory();\n  const [err, setErr] = useState(\"\");\n\n  return (\n    <CenterPaper>\n      <Formik\n        initialValues={{ email_id: \"\", new_password: \"\", renew_password:\"\", pin:\"\"}}\n        validate={(data)=>{\n            const errors = {};\n          if (!validateEmail(data.email_id)) errors.email_id = \"Invalid Email\";\n          if (!validatePassword(data.new_password))\n            errors.new_password = \"Password Must Be Atleast 6 characters\";\n          if (data.new_password !== data.renew_password)\n            errors.renew_password = \"Passwords Donot Match\";\n            return errors\n        }}\n        onSubmit={async (data, { setSubmitting }) => {\n          try {\n            setSubmitting(true);\n            const success = await resetPassword(data)\n            if(success) history.push(authlinks.Login)\n          } catch (err) {\n            setErr(err);\n          } finally {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, handleSubmit, errors}) => (\n          <>\n            <Loading loading={isSubmitting} />\n            <Errors errors={[err]} />\n            <Field\n              name=\"email_id\"\n              type=\"text\"\n              label=\"Email\"\n              error={errors.email_id ? true : false}\n              helperText={errors.email_id}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"new_password\"\n              type=\"password\"\n              label=\"New Password\"\n              error={errors.new_password ? true : false}\n              helperText={errors.new_password}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"renew_password\"\n              type=\"password\"\n              label=\"Retype Password\"\n              error={errors.renew_password ? true : false}\n              helperText={errors.renew_password}\n              required\n              as={CustomText}\n            />\n            <Field\n              name=\"pin\"\n              type=\"text\"\n              label=\"Pin\"\n              required\n              as={CustomText}\n            />\n            <CustomButton type=\"submit\" onClick={handleSubmit}>\n              Reset Password\n            </CustomButton>\n            <RedText\n              onClick={() => {\n                history.push(authlinks.RequestPin)\n              }}\n            >\n              Didn't Recieve Pin?\n            </RedText>\n\n            <RedText\n              onClick={() => {\n                history.push(authlinks.Login);\n              }}\n            >\n                Back To Login\n            </RedText>\n          </>\n        )}\n      </Formik>\n    </CenterPaper>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Logo from \"../components/Logo\";\nimport LightScreen from \"../components/LightScreen\";\nimport LoginForm from \"../forms/LoginForm\";\nimport SignupForm from \"../forms/SignupForm\";\nimport Center from \"../components/Center\";\nimport RequestPinForm from '../forms/RequestPinForm'\nimport ResetPasswordForm from '../forms/ResetPasswordForm'\nimport authlinks from '../defaults/authlinks.json'\n\nexport default function LoginScreen() {\n  return (\n    <LightScreen>\n      <Center>\n        <Logo variant=\"red\" />\n        <BrowserRouter>\n          <Switch>\n            <Route path={authlinks.SignUp} component={SignupForm} />\n            <Route path={authlinks.RequestPin} component={RequestPinForm} />\n            <Route path={authlinks.ResetPassword} component={ResetPasswordForm} />\n            <Route path={authlinks.Login} component={LoginForm} />\n          </Switch>\n        </BrowserRouter>\n      </Center>\n    </LightScreen>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useFetch(url) {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState();\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      let options = {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      };\n      const request = await fetch(url, options);\n      if (!request.ok) {\n        setErr(request.statusText);\n        setLoading(false);\n        return;\n      }\n      const result = await request.json();\n      setResult(result);\n      setLoading(false);\n    };\n\n    fetchItems().catch((err) => {\n      setErr(err);\n      setLoading(false);\n    });\n  }, [url]);\n\n  return { loading, result, err };\n}","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  card: {\n    width: 320,\n    height: 320,\n  },\n  container: {\n    width: 320,\n    height: 320,\n    padding: 10,\n    margin: 10,\n  },\n  image: {\n    height: 200,\n    width: 300,\n    padding: 10,\n  },\n});\nexport default function SupplierCard({ title, description, imageURI, id }) {\n  const history = useHistory();\n  const styles = useStyles();\n  return (\n    <Box className={styles.container}>\n      <Card\n        className={styles.card}\n        onClick={() => {\n          history.push(`/suppliers/${id}`);\n        }}\n      >\n        <CardHeader title={title} subheader={description} />\n        <CardMedia className={styles.image} image={imageURI} title={title} />\n      </Card>\n    </Box>\n  );\n}\n","import React from 'react'\nimport {Typography, makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    text:{\n        fontWeight: \"bold\",\n        fontSize: 35,\n    }\n})\n\nexport default function HeadingText({children, ...fields}) {\n    const styles = useStyles()\n    return (\n       <Typography color={\"primary\"} variant=\"h5\" className={styles.text} {...fields}>\n           {children}\n       </Typography>\n    )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport useFetchSuppliers from \"../hooks/useFetchSuppliers\";\nimport SupplierCard from \"../components/SupplierCard\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport HeadingText from \"../components/HeadingText\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexWrap: \"nowrap\",\n    overflowX: \"auto\",\n    marginBottom:20,\n    width: \"100%\",\n  },\n});\n\nexport default function DisplayProductByCatagory({\n  catagory_id,\n  catagory_name,\n  city_id\n}) {\n  const styles = useStyles();\n  const { err, loading, result=[] } = useFetchSuppliers({\n    visible: true,\n    city_id,\n    catagory_id,\n  });\n  if (loading) return <Loading loading={loading} />;\n  if (err) return <Errors errors={[err]} />;\n  if(result.length>0) return (\n    <div>\n      <HeadingText> {catagory_name}</HeadingText>\n      <div className={styles.container}>\n        {result.map((supplier) => (\n          <SupplierCard\n            id={supplier.supplier_id}\n            description={supplier.supplier_description}\n            title={supplier.supplier_name}\n            imageURI={`/images/${supplier.image_id}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n  return null\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchSuppliers({\n    visible,\n    city_id,\n    catagory_id,\n    supplier_name\n}) {\n    \n    const searchParams= new URLSearchParams()\n    if(city_id) searchParams.append('city_id',city_id)\n    if(visible != null || undefined) searchParams.append('visible', visible)\n    if(catagory_id) searchParams.append('catagory_id', catagory_id)\n    if(supplier_name) searchParams.append('supplier_name', supplier_name)\n    \n    const url = `/api/suppliers/getall?${searchParams}`\n\n    const {err,loading,result} = useFetch(url)\n    \n    return {err,loading,result}\n}","import React  from \"react\";\nimport Loading from \"./Loading\";\nimport Errors from \"./Errors\";\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CitySelect({ value, setValue }) {\n  const styles = useStyles();\n  const { err, loading, result=[] } = useFetchCities();\n  if (loading) return <Loading loading={true} />;\n  if (err) return <Errors errors={[err, \"Can't Display Catagories\"]} />;\n\n  if(!value && result.length>0) setValue(result[0].city_id)\n  return (\n    <FormControl className={styles.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{\"city\"}</InputLabel>\n      <Select labelId={\"city\"} value={value} onChange={(event)=>{\n        setValue(event.target.value)\n      }}>\n        {result.map((city) => (\n          <MenuItem key={city.city_id} value={city.city_id}>\n            {String(city.city_name)}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}","\nimport useFetch from './useFetch'\n\nexport default function useFetchCities() {\n    const url = `/api/cities/getall`;\n    const { loading, result, err } = useFetch(url);\n    \n    return {loading, result, err}\n}\n","export function capitalizeEachWord(sentence){\n    const stringsentence = String(sentence)\n    const words = stringsentence.split(' ')\n    const capitalized = words.map(word=>{\n        const lowerCaseWord = word.toLowerCase()\n        return lowerCaseWord.charAt(0).toUpperCase() + lowerCaseWord.slice(1)\n    }).join(' ');\n    return capitalized\n}","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { capitalizeEachWord } from \"../helperFunctions/capitalize\";\nimport { ListItem, ListItemText, Drawer, ListItemIcon } from \"@material-ui/core\";\nimport {Home, Search, ShoppingCart, MenuBook, Person, DoubleArrow, Business} from '@material-ui/icons'\nimport navlinks from \"../defaults/navlinks.json\";\n\nfunction ListIcon({title}){\n    switch (title){\n        case navlinks.Home:\n            return <Home />\n        case navlinks.Search:\n            return <Search />\n        case navlinks.Cart:\n            return <ShoppingCart />\n        case navlinks.Address:\n          return <Business />\n        case navlinks.Orders:\n            return <MenuBook />\n        case navlinks.User:\n            return <Person />\n        default:\n            return <DoubleArrow />\n    }\n}\n\nfunction ListLink({ title, link }) {\n  const history = useHistory();\n  return (\n    <ListItem\n      button\n      onClick={() => {\n        history.push(link);\n      }}\n    >\n      <ListItemIcon>{ <ListIcon title={link}/> }</ListItemIcon>\n      <ListItemText> {capitalizeEachWord(title)} </ListItemText>\n    </ListItem>\n  );\n}\n\nexport default function NavList({ open, onClose }) {\n  const NavArray = Object.entries(navlinks);\n  return (\n    <Drawer anchor=\"top\" open={open} onClose={onClose}>\n      {NavArray.map(([label, link]) => (\n        <ListLink key={label} title={label} link={link} />\n      ))}\n    </Drawer>\n  );\n}\n","import React , {useState, useEffect} from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core'\nimport {ArrowBack, Menu} from '@material-ui/icons'\nimport COLORS from '../defaults/colors.json'\nimport NavList from '../section/NavList'\n\nconst useStyles = makeStyles({\n  nav:{\n    display: \"flex\",\n    minHeight: \"3em\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: \"1em\",\n    backgroundColor: COLORS.PRIMARY_RED,\n    width: \"100%\"\n  },\n  title:{\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: COLORS.PRIMARY_WHITE,\n    fontSize: \"25px\",\n    fontWeight: \"bold\",\n  }\n})\nexport default function Navigation({ title=\"Shop Dharan\" }) {\n    const history = useHistory()\n    const styles = useStyles()\n    const [open, setOpen] = useState(false)\n    const toggleOpen  = ()=>{\n      setOpen(open=> !open)\n    }\n    useEffect(() => {\n      document.title = title\n      return ()=>{\n        document.title = \"Shop Dharan\"\n      }\n    }, [title])\n    return (\n    <nav className={styles.nav}>\n     <ArrowBack  color=\"secondary\" fontSize=\"large\" onClick={history.goBack}/>\n      <div className={styles.title}>\n          {title}\n      </div>\n      <Menu onClick={toggleOpen} color=\"secondary\" fontSize=\"large\"/>\n      <NavList open={open} onClose={toggleOpen}/>\n    </nav>\n  );\n}","import React from \"react\";\n\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport LightScreen from '../components/LightScreen'\nimport DisplayProductByCatagory from \"../section/DisplayProductByCatagory\";\nimport CitySelect from '../components/CitySelect'\nimport NavBar from '../components/NavBar'\nimport {useSettings, ACTIONS} from '../contexts/Settings'\n\nexport default function HomeScreen() {\n  const { loading, err, result = [] } = useFetchCatagories();\n  const {settings, dispatch} = useSettings()\n  if (loading) return (<Loading loading={loading} \n  style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\n  />);\n  if (err) return <Errors errors={[err]} />;\n  return (\n    <LightScreen>\n      <NavBar title={\"Home\"}/>\n      <CitySelect value={settings.city_id} setValue={value=>{\n        dispatch({type: ACTIONS.SETCITY, payload: value})\n      }}/>\n        {\n          result.map(catagory=>(\n            <DisplayProductByCatagory \n             catagory_id={catagory.catagory_id}\n             catagory_name={catagory.catagory_name}\n             city_id={settings.city_id}\n            />\n          ))\n        }\n    </LightScreen>\n  )  \n\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchCatagories(){\n    const url = `/api/catagories/getall`;\n    const { loading, result, err } = useFetch(url);\n    return {loading, result, err} \n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport COLORS from \"../defaults/colors.json\";\nimport Logo from \"../placeholder.jpeg\";\n\nconst useStyle = makeStyles({\n  image: {\n    height: 200,\n    width: 300,\n    objectFit: \"cover\",\n    backgroundColor: COLORS.PRIMARY_WHITE,\n  },\n});\n\nexport default function ImageComponent({ src, alt, ...props }) {\n  const styles = useStyle()\n  return (\n    <img\n      src={src}\n      className={styles.image}\n      alt={alt || \"Shop Dharan\"}\n      {...props}\n      onError={(e) => (e.target.src = Logo)}\n    />\n  );\n}\n","import React from \"react\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport ImageComponent from \"../components/ImageComponent\";\nimport HeadingText from \"../components/HeadingText\";\n\nimport { capitalizeEachWord } from \"../helperFunctions/capitalize\";\n\nexport default function DisplaySupplier({supplier}) {\n\n  return (\n    <CenterPaper>\n      <HeadingText> {capitalizeEachWord(supplier.supplier_name)} </HeadingText>\n      <ImageComponent src={`/images/${supplier.image_id}`} />\n      <p style={{ maxWidth: 400, textAlign: \"center\", fontWeight: \"bold\" }}>\n        {supplier.supplier_description}\n      </p>\n    </CenterPaper>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  makeStyles,\n  Box,\n} from \"@material-ui/core\";\n\nconst HEIGHT = 320;\nconst WIDTH = 320;\nconst useStyles = makeStyles({\n  card: {\n    width: WIDTH,\n    height: HEIGHT,\n  },\n  container: {\n    width: WIDTH,\n    height: HEIGHT,\n    padding: 10,\n    margin: 10,\n  },\n  image: {\n    height: 200,\n    width: 300,\n    padding: 10,\n  },\n});\nexport default function SupplierCard({\n  title,\n  description: price,\n  imageURI,\n  id,\n}) {\n  const history = useHistory();\n  const styles = useStyles();\n  return (\n    <Box className={styles.container}\n    >\n      <Card\n        className={styles.card}\n        onClick={()=>{\n          history.push(`/products/${id}`)\n        }}\n      >\n        \n        <CardHeader title={title} subheader={`Rs. ${price}`} />\n        <CardMedia className={styles.image} image={imageURI} title={title} />\n      </Card>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, Container } from \"@material-ui/core\";\nimport ProductCard from \"../components/ProductCard\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    width: \"100%\",\n    flexWrap: \"wrap\",\n  },\n});\n\nexport default function DisplayProducts({ products = [] }) {\n  const styles = useStyles()\n    return (\n    <Container className={styles.container}>\n      {products.map((product) => (\n        <ProductCard\n          id={product.product_id}\n          description={product.price}\n          title={product.product_name}\n          imageURI={`/images/${product.image_id}`}\n          key={product.product_id}\n        />\n      ))}\n    </Container>\n  );\n}\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport Loading from '../components/Loading'\nimport Errors from '../components/Errors'\nimport useFetchSupplier from '../hooks/useFetchSupplier'\nimport LightScreen from '../components/LightScreen'\nimport DisplaySupplier from '../section/DisplaySupplier'\nimport DisplayProducts from '../section/DisplayProducts'\nimport useFetchProducts from '../hooks/useFetchProducts'\nimport NavBar from '../components/NavBar'\n\nexport default function SupplierScreen() {\n    const { id } = useParams();\n    const { err, loading, result } = useFetchSupplier({ supplier_id: id });\n    const {err: producterr, loading: productLoad, result: products} = useFetchProducts({supplier_id: id, visible: true})\n    if (loading || productLoad) return <Loading loading={true} />;\n    if (err || producterr) return <Errors errors={[err, producterr]} />;\n    console.log(result)\n    return (\n        <LightScreen>\n            <NavBar title={result.supplier_name || \"Supplier\"} />\n            <DisplaySupplier supplier={result} />\n            <DisplayProducts products={products}/>\n        </LightScreen>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchSuppliers({\n   supplier_id\n}) {\n    \n    \n    const url = `/api/suppliers/get?supplier_id=${supplier_id}`\n\n    const {err,loading,result} = useFetch(url)\n    \n    return {err,loading,result}\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchProducts({\n    supplier_id,\n    available,\n}) {\n    \n    const searchParams= new URLSearchParams()\n    if(supplier_id) searchParams.append('supplier_id',supplier_id)\n    if(available != null || undefined) searchParams.append('available', available)\n    \n    const url = `/api/products/getall?${searchParams}`\n\n    const {err,loading,result} = useFetch(url)\n    \n    return {err,loading,result}\n}\n","import React, {useState, useEffect} from 'react'\nimport {makeStyles} from '@material-ui/core'\n\nimport CustomText from './CustomText'\nimport CustomButton from './CustomButton'\n\nconst useStyle = makeStyles({\n    searchbar:{\n        display: \"flex\",\n        width:\"100%\",\n        alignItems: \"center\",\n        justifyContent:\"space-evenly\"\n    }\n})\n\nexport default function SearchBar({search, setSearch}) {\n    const styles = useStyle()\n    const [value, setValue] =  useState(search)\n    \n    useEffect(()=>{\n        if(value === '') setSearch(value)\n      },[value])\n\n    return (\n        <div className={styles.searchbar}>\n          <CustomText type=\"Search\" label=\"Search\" \n            onChange={\n                event=>{\n                    setValue(event.target.value)\n                }\n            }\n          />  \n          <CustomButton \n            onClick={()=>{\n                setSearch(value)\n            }}\n          > Search </CustomButton>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavBar from \"../components/NavBar\";\nimport Loading from \"../components/Loading\";\nimport SearchBar from \"../components/SearchBar\";\nimport CustomButton from \"../components/CustomButton\";\nimport Errors from \"../components/Errors\";\nimport useProductSearch from \"../hooks/useProductSearch\";\nimport { useSettings } from \"../contexts/Settings\";\nimport DisplayProducts from \"../section/DisplayProducts\";\n\nexport default function SearchScreen() {\n  const { settings } = useSettings();\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    setPage(0);\n  }, [search]);\n\n  const { err, loading, products, hasMore } = useProductSearch({\n    available: true,\n    city_id: settings.city_id,\n    product_name: search,\n    page_no: page,\n  });\n  return (\n    <LightScreen>\n      <NavBar title={\"Search\"} />\n      <SearchBar search={search} setSearch={setSearch} />\n      {err && <Errors errors={[err]} />}\n      <DisplayProducts products={products} />\n      {hasMore && (\n        <CustomButton\n          onClick={() => {\n            if (hasMore) setPage((page) => page + 1);\n          }}\n          variant=\"text\"\n        >\n          See More\n        </CustomButton>\n      )}\n      <Loading\n        loading={loading}\n        style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\n      />\n    </LightScreen>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useProductSearch({\n  supplier_id,\n  product_name,\n  page_no,\n  available,\n  city_id,\n}) {\n  const searchParams = new URLSearchParams();\n  if (supplier_id) searchParams.append(\"supplier_id\", supplier_id);\n  if (product_name) searchParams.append(\"product_name\", product_name);\n  if (page_no) searchParams.append(\"page_no\", page_no);\n  if (city_id) searchParams.append(\"city_id\", city_id);\n  if (available !== null || available !== undefined)\n    searchParams.append(\"available\", available);\n  const url = `/api/products/search?${searchParams}`;\n\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [err, setErr] = useState(\"\");\n  const [hasMore, setHasMore] = useState(false);\n\n  useEffect(() => {\n    setProducts([]);\n  }, [supplier_id, product_name, available]);\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      try {\n        setLoading(true);\n        let options = {\n          method: \"GET\",\n          headers: {\n            \"content-type\": \"application/json\",\n          },\n        };\n        const request = await fetch(url, options);\n\n        if (!request.ok) {\n          setErr(request.statusText);\n          setLoading(false);\n          return;\n        }\n        const result = await request.json();\n        setProducts((oldProducts) => [...new Set([...oldProducts, ...result])]);\n        setHasMore(result.length === 10);\n      } catch (err) {\n        setErr(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (!product_name) return;\n    fetchItems().catch((err) => {\n      setErr(err);\n      setLoading(false);\n    });\n  }, [product_name, supplier_id, page_no, available]);\n\n  return { err, loading, products, hasMore };\n}","import React from 'react'\nimport COLORS from '../defaults/colors.json'\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    fullscreen:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: COLORS.PRIMARY_RED,\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        minHeight: \"100vh\",\n\n    }\n})\nexport default function RedScreen({children}) {\n    const styles = useStyles()\n    return (\n        <div className={styles.fullscreen}>\n             {children}\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, Container } from \"@material-ui/core\";\nimport navlinks from \"../defaults/navlinks.json\";\n\nconst useStyles = makeStyles({\n  links: {\n    color: \" #f2f2f2\",\n    textDecoration: \"solid\",\n    fontSize: \"2em\",\n    fontWeight: \"bold\",\n    \"&:hover\": {\n      transform: \"scale(1.1)\",\n    },\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: 10,\n    alignItems: \"center\",\n  },\n});\n\nexport default function DisplayLinks() {\n  const styles = useStyles();\n  //Converts To Array with array of key and value\n  // {key1: value1, key2:value2} => [[key1,value1],[key2,value2]]\n  const NavArray = Object.entries(navlinks);\n  return (\n    <Container className={styles.container}>\n      {NavArray.map(([label, link]) => (\n        <Link to={link} className={styles.links}>\n          {label}\n        </Link>\n      ))}\n    </Container>\n  );\n}","import React from 'react'\nimport RedScreen from '../components/RedScreen'\nimport NavLinks from '../section/NavLinks'\nimport Logo from '../components/Logo'\n\nexport default function NavScreen() {\n    return (\n        <RedScreen>\n            <Logo />\n            <NavLinks />\n        </RedScreen>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchProduct({product_id}){\n    const url = `/api/products/get?product_id=${product_id}`\n    const {err, loading, result} = useFetch(url)\n    return {err, loading, result}\n}","import React  from \"react\";\nimport Center from '../components/Center'\nimport ImageComponent from \"../components/ImageComponent\";\n\n\nexport default function ProductDetails({ product }) {\n\n  return (\n    <Center>\n      <h2> {product.product_name} </h2>\n      <b>Price: Rs.{product.price}</b>\n      <ImageComponent src={`/images/${product.image_id}`} />\n      <p> {product.product_description} </p>\n    </Center>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CustomButton from \"../components/CustomButton\";\n\nconst useStyles = makeStyles({\n  quantity: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n});\n\nexport default function Quantity({ quantity, setQuantity, min = 1, max = 99 }) {\n  const styles = useStyles();\n\n  const decreaseQuantity = () => {\n    if (quantity > min) setQuantity(quantity - 1);\n  };\n  const increaseQuantity = () => {\n    if (quantity < max) setQuantity(quantity + 1);\n  };\n  return (\n    <div className={styles.quantity}>\n      <CustomButton onClick={decreaseQuantity}> - </CustomButton>\n      <b> {quantity}</b>\n      <CustomButton onClick={increaseQuantity}> + </CustomButton>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport useFetchProduct from \"../hooks/useFetchProduct\";\nimport LightScreen from \"../components/LightScreen\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport ProductDetails from \"../section/ProductDetails\";\nimport NavBar from \"../components/NavBar\";\nimport CenterPaper from \"../components/CenterPaper\";\n\nimport { useCart } from \"../contexts/Cart\";\nimport CustomButton from \"../components/CustomButton\";\nimport Quantity from \"../section/Quantity\";\n\n\n\nexport default function ProductScreen() {\n  const { id } = useParams();\n  const { loading, err, result } = useFetchProduct({ product_id: id });\n  const { addToCart } = useCart();\n  const [quantity, setQuantity] = useState(1);\n\n\n\n \n\n  return (\n    <LightScreen>\n      <NavBar title={\"Product\"} />\n      <Loading loading={loading} />\n      {err && <Errors errors={[err]} />}\n      {result && (\n        <CenterPaper>\n          <ProductDetails product={result} />\n          <Quantity quantity={quantity} setQuantity={setQuantity}/>\n          <CustomButton\n            onClick={() => {\n              addToCart({ product_id: id }, quantity);\n            }}\n          >\n            Add To Cart{\" \"}\n          </CustomButton>\n        </CenterPaper>\n      )}\n    </LightScreen>\n  );\n}\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport COLORS from \"../defaults/colors.json\";\nimport NAVLINKS from '../defaults/navlinks.json'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: COLORS.PRIMARY_RED,\n    color: COLORS.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function DisplayCartTable({ orders = [] }) {\n  const styles = useStyles();\n  const history = useHistory();\n\n  return (\n    <TableContainer component={Paper} className={styles.container}>\n      <Table aria-label=\"cart table\" className={styles.table}>\n        <TableHead className={styles.head}>\n          <TableRow>\n            <TableCell align=\"center\" className={styles.head}>\n              Name\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Price\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Quantity\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order) => (\n            <TableRow\n              key={order.product_id}\n              onClick={() => {\n                history.push(`${NAVLINKS.Cart}/${order.product_id}`);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                {order.product_name}\n              </TableCell>\n              <TableCell align=\"center\">{order.price}</TableCell>\n              <TableCell align=\"center\">{order.quantity}</TableCell>\n              <TableCell align=\"center\">\n                {parseInt(order.price * order.quantity)}\n              </TableCell>\n            </TableRow>\n          ))}\n          <TableRow key={\"Total\"}>\n            <TableCell component=\"th\" scope=\"row\" align=\"center\">\n              {\" \"}\n              Total{\" \"}\n            </TableCell>\n            <TableCell align=\"center\"> </TableCell>\n            <TableCell align=\"center\"> </TableCell>\n            <TableCell align=\"center\">\n              {orders.reduce((total, order) => {\n                return parseInt(total) + parseInt(order.price * order.quantity);\n              }, 0)}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react'\nimport useFetchCartOrder from '../hooks/useFetchCartOrder'\nimport Loading from '../components/Loading'\nimport Center from '../components/Center'\nimport Errors from '../components/Errors'\nimport CartTable from '../section/CartTable'\n\nexport default function DisplayCartOrder({cart}) {\n    const {err,loading,result} = useFetchCartOrder({cart})\n    if(loading) return <Loading loading={loading} center={true}/>\n    if(err) return <Errors errors={[err]}/>\n    return (\n        <Center>\n            <CartTable orders={result.cart_orders}/>            \n        </Center>\n    )\n}\n","import { useState, useEffect } from \"react\";\n\n\nexport default function useFetchCost({ cart = []}) {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState({\n    cart_orders: [],\n  \n  });\n  const [err, setErr] = useState();\n\n  useEffect(() => {\n    if (cart.length === 0) {\n      setResult({\n        cart_orders: [],\n      });\n      return;\n    }\n    setLoading(true);\n    fetch(`/api/user/orders/getproductcost`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        orders: cart,\n      }),\n    })\n      .then(async (response) => {\n        if (!response.ok)\n          throw (await response.text()) || \"Something Went Wrong\";\n        return response.json();\n      })\n      .then((res) => {\n        setResult(res);\n      })\n      .catch((err) => {\n        setErr(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [cart]);\n\n  return { err, loading, result };\n}","import React from 'react'\nimport {useHistory} from 'react-router-dom'\nimport LightScreen from '../components/LightScreen'\nimport NavBar from '../components/NavBar'\nimport CenterPaper from '../components/CenterPaper'\nimport DisplayCartOrder from '../section/DisplayCartOrder'\nimport {useCart} from '../contexts/Cart'\nimport CustomButton from '../components/CustomButton'\nimport NAVLINKS from '../defaults/navlinks.json'\n\nexport default function CartScreen() {\n    const history = useHistory()\n    const {cart,clearCart} = useCart()\n    return (\n        <LightScreen>\n            <NavBar title={\"Cart\"}/>\n            <CenterPaper>\n            <DisplayCartOrder cart={cart}/>\n            <CustomButton\n                variant=\"text\"\n                onClick={()=>{\n                    const confirm = window.confirm(\"Are You Sure?\")\n                    if(!confirm) return;\n                    clearCart()\n                }}\n            >\n                Clear Cart\n            </CustomButton>\n            <CustomButton\n                onClick={()=>{\n                    history.push(`${NAVLINKS.Cart}/order`)\n                }}\n            >\n                Add Order\n            </CustomButton>\n            </CenterPaper>\n        </LightScreen>\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavBar from \"../components/NavBar\";\nimport useFetchProduct from \"../hooks/useFetchProduct\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport ProductDetails from \"../section/ProductDetails\";\nimport Loading from \"../components/Loading\";\nimport Errors from \"../components/Errors\";\nimport { useCart } from \"../contexts/Cart\";\nimport Quantity from \"../section/Quantity\";\nimport CustomButton from \"../components/CustomButton\";\n\nexport default function CartProductScreen() {\n  const { id } = useParams();\n  const history = useHistory()\n  const { err, loading, result } = useFetchProduct({ product_id: id });\n  const { cart = [], updateCartItemQuantity, removeFromCart } = useCart();\n  const [quantity, setQuantity] = useState(\n    parseInt(cart.find((item) => item.product_id === id)?.quantity) || 1\n  );\n  \n  return (\n    <LightScreen>\n      <NavBar title={\"Product\"} />\n      <Loading loading={loading} />\n      {err && <Errors errors={[err]} />}\n      {result && (\n        <CenterPaper>\n          <ProductDetails product={result} />\n          <Quantity quantity={quantity} setQuantity={setQuantity} />\n          <CustomButton\n            onClick={() => {\n              updateCartItemQuantity(id, quantity);\n            }}\n          >\n            Update Cart\n          </CustomButton>\n          <CustomButton\n            variant=\"text\"\n            onClick={() => {\n              const confirm = window.confirm(\n                \"Are You Sure You Want To Remove?\"\n              );\n              if (!confirm) return;\n              removeFromCart(id);\n              alert(\"Item Removed\")\n              history.goBack()\n            }}\n          >\n            Remove From Cart\n          </CustomButton>\n        </CenterPaper>\n      )}\n    </LightScreen>\n  );\n}\n","import React from \"react\";\n\nexport default function DisplayCost({ total, deliveryCharge, suppliers }) {\n  return (\n    <>\n      <b> Total: {total}</b>\n      <b>\n        {\" \"}\n        Delivery Charge: {deliveryCharge} from {suppliers} supplier(s)\n      </b>\n      <text>\n        Delivery Charge cost Extra for items ordered from different city\n      </text>\n    </>\n  );\n}\n","import React from \"react\";\nimport useFetchCost from \"../hooks/useFetchCost\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport Loading from \"../components/Loading\";\nimport ErrorText from \"../components/ErrorText\";\nimport CartTable from \"../section/CartTable\";\nimport DisplayCost from \"../section/DisplayCost\";\n\nexport default function DisplayAddOrder({ cart, address_id }) {\n  const { err, loading, result } = useFetchCost({ cart, address_id });\n\n  return (\n    <CenterPaper>\n      {loading && <Loading loading={true} center={true} />}\n      {err && <ErrorText> {err}</ErrorText>}\n      <CartTable orders={result.cart_orders} />\n      <DisplayCost\n        total={result.total}\n        deliveryCharge={result.deliveryCharge}\n        suppliers={result.suppliers}\n      />\n    </CenterPaper>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\n\nexport default function useFetchCost({ cart = [], address_id}) {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState({\n    cart_orders: [],\n    deliveryCharge: 0,\n    suppliers: 0,\n    total: 0,\n  });\n  const [err, setErr] = useState();\n\n  useEffect(() => {\n  \n    if (cart.length === 0 || !address_id) {\n      setResult({\n        cart_orders: [],\n        deliveryCharge: 0,\n        suppliers: 0,\n        total: 0,\n      });\n      return;\n    }\n    setLoading(true);\n    fetch(`/api/user/orders/getcost`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        orders: cart,\n        address_id: address_id\n      }),\n    })\n      .then(async (response) => {\n        if (!response.ok)\n          throw (await response.text()) || \"Something Went Wrong\";\n        return response.json();\n      })\n      .then((res) => {\n        setResult(res);\n      })\n      .catch((err) => {\n        setErr(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [cart,address_id]);\n\n  return { err, loading, result };\n}","export default async function fetchAccessToken(accessToken){\n    const data = {accessToken};\n\n    const response = await fetch(\"/api/validate\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.valid;\n}","import { useState, useEffect } from \"react\";\n\nimport { useAccessToken, useRefreshToken } from \"../contexts/LoginInfo\";\nimport validateAccessToken from \"../helperFunctions/validateAccessToken\";\nimport fetchAccessToken from \"../helperFunctions/fetchAccessToken\";\n\nexport default function useFetch(url) {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState();\n  const [err, setErr] = useState(\"\");\n  const { accessToken, setAccessToken } = useAccessToken();\n  const { refreshToken } = useRefreshToken();\n\n  const validations = async () => {\n    const isValid = await validateAccessToken(accessToken);\n    if (isValid) return;\n    const newAccessToken = await fetchAccessToken(refreshToken);\n    setAccessToken(newAccessToken);\n  };\n\n  const fetchItems = async () => {\n    let options = {\n      method: \"GET\",\n      headers: {\n        authorization: `bearer ${accessToken}`,\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const request = await fetch(url, options);\n    if (!request.ok) {\n      throw await request.text() || request.statusText()\n    }\n    const result = await request.json();\n    return result\n  };\n\n  const fetchResources = async () => {\n    setLoading(true);\n    try{\n      await validations()\n      const result = await fetchItems()\n      setResult(result)\n    }catch(err){\n      setErr(err)\n    }finally{\n      setLoading(false)\n    }\n     \n  };\n\n  const reloadResources = fetchResources\n  useEffect(() => {\n    fetchResources();\n  }, [url]);\n\n  return { loading, result, err, reloadResources };\n}","import useFetchWithAuth from './useFetchWithAuth'\n\n\nexport default function useFetchAddress() {\n    const url = `/api/user/address/getall`\n    const {err, loading, reloadResources ,result=[]} = useFetchWithAuth(url)\n    return {err, loading, result, reloadResources}\n}","import React from \"react\";\nimport Loading from \"./Loading\";\nimport Errors from \"./Errors\";\nimport useFetchAddress from \"../hooks/useFetchAddress\";\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function AddressSelect({ value, setValue }) {\n  const styles = useStyles();\n  const { err, loading, result=[] } = useFetchAddress();\n  if (loading) return <Loading loading={true} />;\n  if (err) return <Errors errors={[err, \"Can't Display Catagories\"]} />;\n\n  if(!value && result.length>0) setValue(result[0].address_id)\n  return (\n    <FormControl className={styles.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{\"city\"}</InputLabel>\n      <Select labelId={\"city\"} value={value} onChange={(event)=>{\n        setValue(event.target.value)\n      }}>\n        {result.map((address) => (\n          <MenuItem key={address.address_id} value={address.address_id}>\n            {`${address.street_name}, ${address.city_name}`}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}","import validateAccessToken from \"./validateAccessToken\";\nimport fetchAccessToken from \"./fetchAccessToken\";\n\nexport default async function fetchWithCredentials(method = \"POST\", url, body) {\n  let accessToken = sessionStorage.getItem(\"accessToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  const isValid = await validateAccessToken(accessToken);\n  if (!isValid){\n    accessToken = await fetchAccessToken(refreshToken);\n    sessionStorage.setItem(\"accessToken\", accessToken);\n  }\n\n  let options = {\n    method: method,\n    headers: {\n      authorization: `bearer ${accessToken}`,\n      \"content-type\": \"application/json\",\n    },\n    \n  };\n  if(body && method !== 'GET'){\n   options = {...options, body: JSON.stringify(body),} \n  }\n  \n  return await fetch(url,options);\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function addOrder(orders, address_id){\n    const url = `/api/user/orders/add`\n    const method = 'POST'\n    const response = await fetchWithCredentials(method, url, {orders, address_id})\n    \n    if(!response.ok) throw \"Order Failed\"\n    const resp = await response.json()\n    return resp\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavBar from \"../components/NavBar\";\nimport { useCart } from \"../contexts/Cart\";\nimport DisplayAddOrder from \"../section/DisplayAddOrder\";\nimport AddressSelect from \"../components/AddressSelect\";\nimport CustomButton from \"../components/CustomButton\";\nimport addOrder from \"../helperFunctions/addOrder\";\nimport NAVLINKS from \"../defaults/navlinks.json\";\n\nexport default function AddOrderScreen() {\n  const { cart } = useCart();\n  const [address, setAddress] = useState(\"\");\n  const history = useHistory();\n  return (\n    <LightScreen>\n      <NavBar title=\"Add Order\" />\n      <AddressSelect value={address} setValue={setAddress} />\n      <CustomButton\n        variant=\"text\"\n        onClick={() => {\n          history.push(`${NAVLINKS.Address}/add`);\n        }}\n      >\n        Add Address\n      </CustomButton>\n      <DisplayAddOrder cart={cart} address_id={address} />\n      <CustomButton\n        onClick={async () => {\n          try {\n            const confirm = window.confirm(\"Do You Want To Order?\");\n            if (!confirm) return;\n            const resp = await addOrder(cart, address);\n            if (resp) window.alert(\"Order Sucessful\");\n          } catch (err) {\n            window.alert(\"Failed To Add Order\");\n          }\n        }}\n      >\n        Order\n      </CustomButton>\n    </LightScreen>\n  );\n}\n","import fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\n\nexport default async function deleteAddress(address_id){\n    const method = 'DELETE'\n    const url = `/api/user/address/delete`\n    const response = await fetchWithCredentials(method,url , {address_id})\n    return response.ok\n}","import React from \"react\";\nimport HeadingText from \"../components/HeadingText\";\n\nexport default function Address({ address }) {\n  return (\n    <>\n      <HeadingText>\n        {`${address.street_name}, ${address.city_name}`}\n      </HeadingText>\n      {address.details && (\n        <text style={{ textAlign: \"center\" }}>{address.details}</text>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CustomButton from \"../components/CustomButton\";\nimport deleteAddress from \"../helperFunctions/deleteAddress\";\nimport Address from \"./Address\";\n\nconst useStyles = makeStyles({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1,\n  },\n});\n\nexport default function DisplayAddress({ address, onDelete }) {\n  const style = useStyles();\n  return (\n    <div className={style.container}>\n      <Address address={address}/>\n      <CustomButton\n        variant=\"text\"\n        onClick={async () => {\n          try {\n            const confirm = window.confirm(\"Are You Sure You Want To Delete?\");\n            if (!confirm) return;\n            const success = await deleteAddress(address.address_id);\n            if (success) {\n              alert(\"Address Deleted\");\n              if (onDelete) return onDelete();\n            }\n            return alert(\"Failed To Delete\");\n          } catch (err) {\n            alert(\"Failed To Delete\");\n          }\n        }}\n      > Delete Address </CustomButton>\n    </div>\n  );\n}\n","import React from 'react'\nimport { useHistory} from 'react-router-dom'\nimport NAVLINKS from '../defaults/navlinks.json'\nimport useFetchAddress from '../hooks/useFetchAddress'\nimport LightScreen from '../components/LightScreen'\nimport NavBar from '../components/NavBar'\nimport CenterPaper from '../components/CenterPaper'\nimport Loading from '../components/Loading'\nimport Errors from '../components/Errors'\nimport DisplayAddress from '../section/DisplayAddress'\nimport CustomButton from '../components/CustomButton'\n\nexport default function AddressScreen() {\n    const {err, loading, result, reloadResources} = useFetchAddress()\n    const history = useHistory()\n    return (\n        <LightScreen>\n            <NavBar title=\"Address\" />\n            <CustomButton\n                    variant=\"text\"\n                    onClick={()=>{\n                        history.push(`${NAVLINKS.Address}/add`)\n                    }}\n                >\n                    Add Address\n                </CustomButton>\n            <CenterPaper>\n                <CustomButton\n                    variant=\"text\"\n                    onClick={reloadResources}\n                >\n                    Reload\n                </CustomButton>\n                {loading && <Loading loading={loading}/>}\n                {err && <Errors errors={[err]}/>}\n                {result.map(address=>(\n                    <DisplayAddress key={address.address_id} address={address} onDelete={reloadResources}/>\n                ))}\n            </CenterPaper>\n        </LightScreen>\n    )\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function addAddress({city_id,street_name,details}){\n    const data = {city_id,street_name,details}\n    const url = `/api/user/address/add`;\n    const method = \"POST\";\n    const response = await fetchWithCredentials(method, url, data);\n    if (!response.ok) throw (await response.text()) || \"Something Went Wrong\";\n    return response.ok;\n}","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field } from \"formik\";\n\nimport CitySelect from \"../components/CitySelect\";\nimport CenterPaper from \"../components/CenterPaper\";\nimport addAddress from \"../helperFunctions/addAddress\";\nimport Loading from \"../components/Loading\";\nimport CustomText from \"../components/CustomText\";\nimport CustomButton from \"../components/CustomButton\";\nimport Errors from \"../components/Errors\";\n\nexport default function AddAddressForm() {\n  const history = useHistory();\n  return (\n    <Formik\n      initialValues={{\n        city_id: \"\",\n        street_name: \"\",\n        details: \"\",\n      }}\n      validate={(data) => {\n        const errors = {};\n        if (!data.city_id) errors.city_id = \"Select A City\";\n        if (!data.street_name)\n          errors.street_name = \"Streen Name Must Be Provided\";\n        return errors;\n      }}\n      onSubmit={async (data, { setSubmitting }) => {\n        try {\n          setSubmitting(true);\n          const success = await addAddress(data);\n          if (success) {\n            alert(\"Address Added\");\n            history.goBack();\n          }\n        } catch (err) {\n          alert(err);\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ values, isSubmitting, handleSubmit, handleChange, errors }) => (\n        <CenterPaper>\n          <Loading loading={isSubmitting} />\n          {errors.city_id && <Errors errors={[errors.city_id]} />}\n          <CitySelect\n            value={values.city_id}\n            setValue={handleChange(\"city_id\")}\n            error={errors.city_id ? true : false}\n            errorText={errors.city_id}\n          />\n          <Field\n            name={\"street_name\"}\n            type=\"text\"\n            label=\"Street Name\"\n            error={errors.street_name ? true : false}\n            helperText={errors.street_name}\n            as={CustomText}\n          />\n          <CustomText\n            label=\"Details\"\n            type=\"text\"\n            onChange={handleChange(\"details\")}\n            multiline={true}\n            error={errors.details ? true : false}\n            helperText={errors.details}\n            rowsMax={5}\n          />\n          <CustomButton onClick={handleSubmit}>Add Address</CustomButton>\n        </CenterPaper>\n      )}\n    </Formik>\n  );\n}\n","import React from 'react'\nimport LightScreen from '../components/LightScreen'\nimport NavBar from '../components/NavBar'\nimport AddAddressForm from '../forms/AddAddressForm'\n\nexport default function AddAddressScreen() {\n    return (\n        <LightScreen>\n            <NavBar title=\"Add Address\"/>\n            <AddAddressForm />\n        </LightScreen>\n    )\n}\n","import React from \"react\";\nimport Loading from \"./Loading\";\nimport Errors from \"./Errors\";\nimport useFetchOrderStatus from \"../hooks/useFetchOrderStatus\";\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function OrderStatusSelect({ orderStatus, setOrderStatus }) {\n  const { err, loading, result } = useFetchOrderStatus();\n\n  const styles = useStyles();\n\n  if (loading) return <Loading loading={true} />;\n  if (err) return <Errors errors={[err, \"Can't Display Order Types\"]} />;\n\n  return (\n    <FormControl className={styles.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{\"Order Status\"}</InputLabel>\n      <Select\n        labelId={\"Order Status\"}\n        value={orderStatus}\n        onChange={(event) => {\n          setOrderStatus(event.target.value);\n        }}\n      >\n        <MenuItem key=\"All\" value=\"\">\n          {\"All\"}\n        </MenuItem>\n        {result.map((status) => (\n          <MenuItem key={status} value={status}>\n            {String(status)}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchOrderStatuses() {\n    const url = `/api/orderstatus`\n    const {loading, err, result=[]} = useFetch(url)\n    return {loading, err, result}\n}","import React from \"react\";\nimport { msToTime } from \"../helperFunctions/msToTime\";\n\nexport default function OrderDetails({ order }) {\n  const orderedTime = Date.parse(order.ordered_time);\n  const currentTime = Date.now();\n  const timePassed = currentTime - orderedTime;\n  const display = msToTime(timePassed);\n  return (\n    <>\n      <b>{order.order_id}</b>\n      <text>{display}</text>\n      <text>{order.order_status}</text>\n    </>\n  );\n}\n","export const msToTime = (ms) => {\n  const days = Math.floor(ms / 86400000);\n  if (days > 0) return `${days} day(s) ago`;  \n  \n  const minutes = Math.floor((ms / 60000) % 60);\n  const hours = Math.floor((ms / 3600000) % 24);\n  if (hours > 0)\n    return `${hours} hour(s) ${minutes} minute(s) ago`;\n  return `${minutes} minute(s) ago`;\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport NAVLINKS from \"../defaults/navlinks.json\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CenterPaper from \"../components/CenterPaper\";\n\nimport colors from \"../defaults/colors.json\";\nimport OrderDetails from \"./OrderDetails\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: \"100%\",\n    border: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: 5,\n    marginTop: 5,\n    \"&:hover\": {\n      backgroundColor: colors.PRIMARY_WHITE,\n    },\n  },\n});\nexport default function DisplayOrders({ orders = [] }) {\n  const styles = useStyles();\n  const history = useHistory();\n  return (\n    <CenterPaper>\n      {orders.map((order) => {\n        return (\n          <div\n            className={styles.list}\n            onClick={() => {\n              history.push(`${NAVLINKS.Orders}/${order.order_id}`);\n            }}\n          >\n            <OrderDetails order={order} />\n          </div>\n        );\n      })}\n    </CenterPaper>\n  );\n}\n","import React, { useState } from \"react\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavBar from \"../components/NavBar\";\nimport OrderStatusSelect from \"../components/OrderStatusSelect\";\nimport useFetchOrders from \"../hooks/useFetchOrders\";\nimport Errors from \"../components/Errors\";\nimport Loading from \"../components/Loading\";\nimport DisplayOrders from \"../section/DisplayOrders\";\nimport CustomButton from '../components/CustomButton'\n\nexport default function OrdersScreen() {\n  const [orderStatus, setOrderStatus] = useState(\"\");\n  const { err, loading, result, reloadResources } = useFetchOrders({order_status: orderStatus});\n  return (\n    <LightScreen>\n      <NavBar title=\"Orders\" />\n      <CustomButton\n        variant={\"text\"}\n        onClick={reloadResources}\n      >\n          Reload\n      </CustomButton>\n      <OrderStatusSelect\n        orderStatus={orderStatus}\n        setOrderStatus={setOrderStatus}\n        />\n        {err && <Errors errors={[err]} />}\n        {loading && <Loading loading={loading} />}\n        {result.length >= 0 && <DisplayOrders orders={result}/>}\n    </LightScreen>\n  );\n}\n","import useFetchWithAuth from \"./useFetchWithAuth\";\n\n\nexport default function useFetchOrders({ order_status }) {\n  const searchParams = new URLSearchParams();\n  if (order_status) searchParams.append(\"order_status\", order_status);\n  const url = `/api/user/orders/getall?${searchParams}`;\n\n  const { err, loading, result=[], reloadResources } = useFetchWithAuth(url);\n\n  return { err, loading, result, reloadResources };\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport COLORS from \"../defaults/colors.json\";\n\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: COLORS.PRIMARY_RED,\n    color: COLORS.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function DisplayCartTable({ orders = [] }) {\n  const styles = useStyles();\n  const history = useHistory();\n\n  return (\n    <TableContainer component={Paper} className={styles.container}>\n      <Table aria-label=\"cart table\" className={styles.table}>\n        <TableHead className={styles.head}>\n          <TableRow>\n            <TableCell align=\"center\" className={styles.head}>\n              Name\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Price\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Quantity\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order) => (\n            <TableRow\n              key={order.product_id}\n              onClick={() => {\n                history.push(`/products/${order.product_id}`);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                {order.product_name}\n              </TableCell>\n              <TableCell align=\"center\">{order.price}</TableCell>\n              <TableCell align=\"center\">{order.quantity}</TableCell>\n              <TableCell align=\"center\">\n                {parseInt(order.price * order.quantity)}\n              </TableCell>\n            </TableRow>\n          ))}\n          <TableRow key={\"Total\"}>\n            <TableCell component=\"th\" scope=\"row\" align=\"center\">\n              {\" \"}\n              Total{\" \"}\n            </TableCell>\n            <TableCell align=\"center\"> </TableCell>\n            <TableCell align=\"center\"> </TableCell>\n            <TableCell align=\"center\">\n              {orders.reduce((total, order) => {\n                return parseInt(total) + parseInt(order.price * order.quantity);\n              }, 0)}\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import fetchWithCredentials from \"./fetchWithCredentials\";\n\nexport default async function cancelOrder(order_id) {\n  const method = \"PUT\";\n  const url = `/api/user/orders/cancel`;\n  const response = await fetchWithCredentials(method, url, { order_id });\n  if (!response.ok) throw (await response.text()) || \"Failed To Cancel\";\n  return response.ok;\n}","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport Loading from '../components/Loading'\nimport Errors from '../components/Errors'\nimport CenterPaper from '../components/CenterPaper'\nimport useFetchOrder from '../hooks/useFetchOrder'\nimport OrderTable from './OrderTable'\nimport OrderDetails from './OrderDetails'\nimport Address from './Address'\nimport DisplayCost from './DisplayCost'\nimport CustomButton from '../components/CustomButton'\nimport cancelOrder from '../helperFunctions/cancelOrder'\n\n\nexport default function DisplayOrder() {\n    const {id} = useParams()\n    const {err, loading, result, reloadResources} = useFetchOrder({order_id: id})\n    if(loading) return <Loading center={true} loading={true}/>\n    if(err) return <Errors errors={[err]}/>\n    return (\n        <CenterPaper>\n            <CustomButton\n                onClick={reloadResources}\n                variant=\"text\"\n            >\n                Reload\n            </CustomButton>\n            <OrderDetails order={result.order}/>\n            <Address address={result.address}/>\n            <OrderTable orders={result.ordered_items}/>\n            <DisplayCost \n                suppliers={result.numOfSuppliers}\n                deliveryCharge={result.deliveryCharge}\n                total={result.total}\n            />\n            <CustomButton\n                variant=\"text\"\n                onClick={async()=>{\n                    try{\n                        const confirm = window.confirm(\"Are You Sure You Want To Cancel\")\n                        if(!confirm) return\n                        const cancelled = await cancelOrder(id)\n                        if(cancelled) {\n                            alert(\"Order Cancelled\")\n                            return reloadResources()\n                        }\n                        alert(\"Faied To Cancel\")\n                    }catch(err){\n                        alert(err)\n                    }\n                }}\n            >\n                Cancel Order\n            </CustomButton>\n        </CenterPaper>\n    )\n}\n","import useFetchWithAuth from './useFetchWithAuth'\n\nexport default function useFetchOrder({order_id}) {\n    const url = `/api/user/orders/get?order_id=${order_id}`;\n    const {err, loading, result, reloadResources } = useFetchWithAuth(url)\n    return {err, loading, result, reloadResources }\n}","import React from \"react\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavBar from \"../components/NavBar\";\nimport DisplayOrder from \"../section/DisplayOrder\";\n\nexport default function OrderScreen() {\n  return (\n    <LightScreen>\n      <NavBar title=\"Order\" />\n      <DisplayOrder />\n    </LightScreen>\n  );\n}\n","export default async function logout(refreshToken) {\n    if (!refreshToken) throw \"Not Logged In\";\n    const url = `/api/logout`;\n    const response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        refreshToken,\n      }),\n    });\n    return response.ok;\n  }","import React from \"react\";\nimport logout from '../helperFunctions/logout'\nimport CustomButtom from \"../components/CustomButton\";\nimport { useRefreshToken } from \"../contexts/LoginInfo\";\n\nexport default function DisplayLogout() {\n  const { refreshToken, setRefreshToken } = useRefreshToken();\n\n  const logoutStart = async () => {\n    try {\n      const confirm = window.confirm(\"Are You Sure?\")\n      if(!confirm) return;\n      const loggedout = await logout(refreshToken);\n      if (loggedout) {\n        setRefreshToken(\"\");\n        alert(\"Logged Out!!!\")\n        return;\n      }\n      alert(\"Failed To LogOut\")\n    } catch (err) {\n        alert(err)\n    }\n  };\n\n  return (\n    <CustomButtom\n        variant=\"text\"\n        onClick={logoutStart}\n    >\n        Logout\n    </CustomButtom>\n  );\n}","import React from \"react\";\nimport CustomButtom from \"../components/CustomButton\";\nimport { useContinueWithoutLogin } from \"../contexts/LoginInfo\";\n\nexport default function DisplayLogin() {\n  const { setContinueWithoutLogin } = useContinueWithoutLogin();\n  return (\n    <CustomButtom\n      variant=\"text\"\n      onClick={() => {\n        setContinueWithoutLogin(false);\n      }}\n    >\n      Log In\n    </CustomButtom>\n  );\n}\n","import React from \"react\";\nimport { ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { ShoppingCart, MenuBook, LockOpen, Business } from \"@material-ui/icons\";\nimport NAVLINKS from \"../defaults/navlinks.json\";\n\nexport default function UserList() {\n  const history = useHistory();\n  return (\n    <>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(NAVLINKS.Cart);\n        }}\n      >\n        <ListItemIcon>\n          <ShoppingCart />\n        </ListItemIcon>\n        <ListItemText>Cart</ListItemText>\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(NAVLINKS.Orders);\n        }}\n      >\n        <ListItemIcon>\n          <MenuBook />\n        </ListItemIcon>\n        <ListItemText>Orders</ListItemText>\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(NAVLINKS.Address);\n        }}\n      >\n        <ListItemIcon>\n          <Business />\n        </ListItemIcon>\n        <ListItemText>Address</ListItemText>\n      </ListItem>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(`${NAVLINKS.User}/changepassword`);\n        }}\n      >\n        <ListItemIcon>\n          <LockOpen />\n        </ListItemIcon>\n        <ListItemText>Change Password</ListItemText>\n      </ListItem>\n    </>\n  );\n}\n","import React from 'react'\nimport NavBar from '../components/NavBar'\nimport LightScreen from '../components/LightScreen'\nimport CenterPaper from '../components/CenterPaper'\nimport {useIsLoggedIn} from '../contexts/LoginInfo'\nimport Logout from '../section/Logout'\nimport Login from '../section/Login'\nimport UserList from '../section/UserList'\n\nexport default function UserScreen() {\n    const isLoggedIn = useIsLoggedIn()\n    \n    return (\n        <LightScreen>\n            <NavBar title=\"User\"/>\n            <CenterPaper>\n            <UserList />\n            {isLoggedIn?<Logout />:<Login/>}\n            </CenterPaper>\n        </LightScreen>\n    )\n}\n","import React  from 'react'\nimport { Formik } from 'formik'\nimport { validatePassword } from \"../validations\";\nimport Loading from '../components/Loading'\nimport CustomText from '../components/CustomText'\nimport CenterPaper from '../components/CenterPaper'\nimport CustomButton from \"../components/CustomButton\";\n\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\n\nasync function changePassword(old_password, new_password) {\n    const url = `/api/user/changepassword`\n    const method = 'PUT'\n    const response = await fetchWithCredentials(method, url, { old_password, new_password })\n    if (!response.ok) throw await response.text() || \"Failed To Update\"\n    return response.ok\n}\n\nexport default function ChangePasswordForm() {\n    return (\n        <Formik\n            initialValues={{\n                oldpassword: '',\n                newpassword: '',\n                renewpassword: '',\n            }}\n            validate={\n                (data) => {\n                    const errors = {}\n                    if (!validatePassword(data.newpassword)) errors.newpassword = \"Invalid Password\"\n                    if (data.newpassword.length === 0) errors.newpassword = \"Password Cant be Empty\"\n                    if (data.renewpassword !== data.newpassword) errors.renewpassword = \"Passwords Donot Match\"\n                    return errors\n                }\n            }\n            onSubmit={async (data, { setSubmitting, resetForm }) => {\n                setSubmitting(true)\n                try {\n                    if (await changePassword(data.oldpassword, data.newpassword)) {\n                        alert(\"Password Changed\")\n                        resetForm()\n                    }\n                } catch (err) {\n                    alert(err)\n                } finally {\n                    setSubmitting(false)\n                }\n            }}\n        >\n            {({\n                values,\n                handleSubmit,\n                handleBlur,\n                handleChange,\n                isSubmitting,\n                errors,\n            }) => (\n                    <CenterPaper>\n                        {isSubmitting && <Loading loading={isSubmitting}/>}\n                        <CustomText\n                            label={\"Old Password\"}\n                            value={values.oldpassword}\n                            type=\"password\"\n                            error={errors.oldpassword ? true : false}\n                            helperText={errors.oldpassword}\n                            onChange={handleChange(\"oldpassword\")}\n                            onBlur={handleBlur(\"oldpassword\")}\n                        />\n                        <CustomText\n                            label={\"New Password\"}\n                            value={values.newpassword}\n                            type=\"password\"\n                            error={errors.newpassword ? true : false}\n                            helperText={errors.newpassword}\n                            onChange={handleChange(\"newpassword\")}\n                            onBlur={handleBlur(\"newpassword\")}\n                        />\n\n                        <CustomText\n                            label={\"Retype Password\"}\n                            value={values.renewpassword}\n                            type=\"password\"\n                            error={errors.renewpassword ? true : false}\n                            helperText={errors.renewpassword}\n                            onChange={handleChange(\"renewpassword\")}\n                            onBlur={handleBlur(\"renewpassword\")}\n                        />\n                        <CustomButton\n                            onClick={handleSubmit}\n                        >\n                            Change Password\n                        </CustomButton>\n                    </CenterPaper>\n                )}\n        </Formik>\n    )\n}\n","import React from 'react'\nimport NavBar from \"../components/NavBar\";\nimport LightScreen from \"../components/LightScreen\";\nimport ErrorText from \"../components/ErrorText\";\nimport ChangePasswordForm from \"../forms/ChangePasswordForm\";\nimport { useIsLoggedIn } from \"../contexts/LoginInfo\";\n\nexport default function ChangePasswordScreen() {\n  const isLoggedIn = useIsLoggedIn();\n  return (\n    <LightScreen>\n      <NavBar title=\"Change Password\" />\n      {isLoggedIn ? (\n        <ChangePasswordForm />\n      ) : (\n        <ErrorText>You're Not Logged In</ErrorText>\n      )}\n    </LightScreen>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport NAVLINKS from \"../defaults/navlinks.json\";\n\nimport HomeScreen from \"../screens/HomeScreen\";\nimport SupplierScreen from \"../screens/SupplierScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport NavScreen from \"../screens/NavScreen\";\nimport ProductScreen from \"../screens/ProductScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport CartProductScreen from \"../screens/CartProductScreen\";\nimport AddOrderScreen from \"../screens/AddOrderScreen\";\nimport AddressScreen from \"../screens/AddressScreen\";\nimport AddAddressScreen from \"../screens/AddAddressScreen\";\nimport OrdersScreen from \"../screens/OrdersScreen\";\nimport OrderScreen from \"../screens/OrderScreen\";\nimport UserScreen from \"../screens/UserScreen\";\nimport ChangePasswordScreen from \"../screens/ChangePasswordScreen\";\n\nexport default function Home() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={\"/\"} component={NavScreen} />\n        <Route exact path={NAVLINKS.Home} component={HomeScreen} />\n        <Route exact path={NAVLINKS.Search} component={SearchScreen} />\n        <Route exact path={NAVLINKS.Cart} component={CartScreen} />\n        <Route\n          exact\n          path={`${NAVLINKS.Cart}/order`}\n          component={AddOrderScreen}\n        />\n        <Route\n          exact\n          path={`${NAVLINKS.Cart}/:id`}\n          component={CartProductScreen}\n        />\n        <Route exact path={NAVLINKS.Address} component={AddressScreen} />\n        <Route\n          exact\n          path={`${NAVLINKS.Address}/add`}\n          component={AddAddressScreen}\n        />\n        <Route exact path={NAVLINKS.Orders} component={OrdersScreen} />\n        <Route exact path={`${NAVLINKS.Orders}/:id`} component={OrderScreen} />\n        <Route exact path={NAVLINKS.User} component={UserScreen} />\n        <Route exact path={`${NAVLINKS.User}/changepassword`} component={ChangePasswordScreen} />\n        <Route exact path={`/suppliers/:id`} component={SupplierScreen} />\n        <Route exact path={`/products/:id`} component={ProductScreen} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React, {useState} from 'react'\nimport LightScreen from '../components/LightScreen'\nimport CitySelect from '../components/CitySelect'\nimport CustomButton from '../components/CustomButton'\nimport {useSettings, ACTIONS} from '../contexts/Settings'\n\nexport default function SetCityScreen() {\n    const [city, setCity] = useState('');\n    const {dispatch} = useSettings()\n\n    const setCityValue = ()=>{\n        dispatch({type: ACTIONS.SETCITY, payload: city})\n    }\n\n    return (\n       <LightScreen>\n           <CitySelect value={city} setValue={(value)=>setCity(value)}/>\n           <CustomButton disabled={!Boolean(city)} onClick={setCityValue}> Set City </CustomButton>\n       </LightScreen>\n    )\n}\n","import React from 'react'\nimport Home from './Home'\n\n\nimport {useSettings} from '../contexts/Settings'\nimport SetCityScreen from '../screens/SetCityScreen'\n\nexport default function Main() {\n    const {settings} = useSettings()\n    if(settings.city_id) return <Home />\n    return <SetCityScreen />\n}\n","import React from \"react\";\nimport LoadingScreen from \"../components/LoadingScreen\";\nimport {\n  LoginInfo,\n  useLoading,\n  useIsLoggedIn,\n  useRole,\n  useContinueWithoutLogin,\n} from \"./contexts/LoginInfo\";\nimport { Cart } from \"./contexts/Cart\";\nimport { Settings } from \"./contexts/Settings\";\nimport ROLES from \"../defaults/roles.json\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport Main from \"./navigation/Main\";\n\n\nfunction Wrapper() {\n  const loading = useLoading();\n  const isLoggedIn = useIsLoggedIn();\n  const role = useRole();\n  const { continueWithoutLogin } = useContinueWithoutLogin();\n  if (loading) return <LoadingScreen />;\n  if ((isLoggedIn && role === ROLES.USER) || continueWithoutLogin)\n    return <Main />;\n  return <LoginScreen />;\n}\n\nfunction App() {\n  return (\n    <Settings>\n      <LoginInfo>\n        <Cart>\n          <Wrapper />\n        </Cart>\n      </LoginInfo>\n    </Settings>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}