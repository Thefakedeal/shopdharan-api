{"version":3,"sources":["shopdharan-white.png","shopdharan.png","hooks/useRefreshToken.js","hooks/useAccessToken.js","helperFunctions/fetchAccessToken.js","contexts/LoginInfo.js","components/LightScreen.js","components/Logo.js","components/ErrorText.js","screens/LoginScreen.js","components/RedScreen.js","components/LogoWhite.js","screens/LoadingScreen.js","components/NavigationBar.js","helperFunctions/validateAccessToken.js","helperFunctions/fetchWithCredentials.js","contexts/EmployeeInfo.js","components/CancelAndOkButton.js","components/DisplayLoading.js","components/DisplayErrors.js","components/CustomSwitch.js","components/EmployeeForm.js","components/DisplayEmployee.js","screens/EmployeeScreen.js","components/NavLinks.js","screens/NavScreen.js","hooks/useFetchWithAuth.js","components/DisplayEmployees.js","helperFunctions/inputValidations.js","contexts/AddEmployeeInfo.js","components/AddEmployeeForm.js","components/AddEmployees.js","screens/EmployeesScreen.js","hooks/useFetch.js","hooks/useFetchCities.js","helperFunctions/addCity.js","screens/CitiesScreen.js","components/DisplaySuppliers.js","hooks/useFetchSuppliers.js","helperFunctions/deleteCity.js","helperFunctions/updateCity.js","screens/CityScreen.js","navigation/City.js","hooks/useFetchCatagories.js","helperFunctions/addCatagory.js","screens/CatagoriesScreen.js","helperFunctions/deleteCatagory.js","helperFunctions/updateCatagory.js","screens/CatagoryScreen.js","navigation/Catagory.js","components/CustomSelect.js","contexts/AddSupplierInfo.js","helperFunctions/uploadFilesWithCredentials.js","components/AddImage.js","components/AddSupplierForm.js","components/AddSupplier.js","screens/SuppliersScreen.js","contexts/SupplierInfo.js","components/UpdatePhoto.js","components/SupplierForm.js","components/DisplaySupplier.js","components/DisplayProducts.js","hooks/useFetchProducts.js","screens/SupplierScreen.js","navigation/Supplier.js","components/CustomPagination.js","tables/OrdersTable.js","section/DisplayOrders.js","hooks/useFetchOrders.js","screens/OrdersScreen.js","components/CustomText.js","tables/OrderedItemsTable.js","section/DisplayUserInfo.js","section/DisplayAddress.js","section/DisplayOrder.js","hooks/useFetchOrder.js","screens/OrderScreen.js","navigation/Order.js","navigation/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useRefreshToken","useState","localStorage","getItem","refreshToken","setRefreshToken","useEffect","setItem","useAccessToken","sessionStorage","accessToken","setAccessToken","fetchAccessToken","a","data","fetch","method","headers","Accept","body","JSON","stringify","response","ok","statusText","json","loadingContext","React","createContext","isLoggedInContext","useIsLoggedIn","useContext","isLoggedIn","setIsLoggedIn","LoginInfo","children","loading","setLoading","then","catch","err","console","log","Provider","value","useStyles","makeStyles","fullscreen","display","flexDirection","backgroundColor","COLORS","PRIMARY_WHITE","flex","alignItems","minHeight","RedScreen","styles","className","logo","width","padding","objectFit","Logo","variant","props","toLowerCase","logoWhite","logoRed","src","ErrorText","Typography","color","fetchTokens","username","password","text","LoginScreen","setUsername","setPassword","setErr","handleLogin","ShowLoading","CircularProgress","ShowError","TextField","label","onChange","e","target","style","margin","required","type","Button","onClick","PRIMARY_RED","justifyContent","LogoWhite","LoadingScreen","nav","marginBottom","title","marginLeft","marginRight","fontSize","fontWeight","Navigation","history","useHistory","ArrowBack","goBack","valid","fetchWithCredentials","url","validateAccessToken","options","authorization","EmployeeContext","LoadingContext","ErrorContext","ACTIONS","reducer","state","action","payload","employee_name","email","is_admin","useEmployeeContext","dispatch","EmployeeInfo","employee_id","useReducer","getData","CancelAndOkButton","onClickOk","onClickCancel","okLabel","cancelLabel","DisplayLoading","DisplayErrors","errors","length","map","index","key","toString","CustomSwitch","checked","FormGroup","FormControlLabel","control","Switch","button","EmployeeForm","DisplayEmployee","Wrapper","useLoadingContext","useErrorContext","handleDelete","window","confirm","alert","handleUpdate","EmployeeScreen","id","useParams","NavLinks","to","NavScreen","useFetch","result","setResult","validations","newAccessToken","fetchItems","request","container","maxWidth","table","head","colors","validateEmail","test","String","validatePassword","wrapper","theme","backdrop","zIndex","drawer","useFetchCities","addCity","city_name","CitiesScreen","match","handleAddCity","prompt","CityTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","city","city_id","push","scope","Display","DisplaySuppliers","visible","catagory_id","supplier_name","searchParams","URLSearchParams","append","useFetchSuppliers","supplier","supplier_id","supplier_description","contact_number","deleteCity","updateCity","CityScreen","name","setName","setTitle","CityInfo","City","exact","path","useFetchCatagories","addCatagory","catagory_name","handleAddCatagory","Catagory","catagory","deleteCatagory","updateCatagory","CatagoriesScreen","CatagoryScreen","formControl","spacing","minWidth","CustomSelect","selection","setSelection","currentValue","setCurrentValue","FormControl","InputLabel","Select","labelId","MenuItem","option","SupplierContext","FileContext","email_id","repassword","useSupplier","useFile","file","setFile","SupplierInfo","uploadWithCredentials","object","FormData","values","AddImage","setDisplay","height","alt","justifyItems","for","accept","photo","files","URL","createObjectURL","hidden","paddingBottom","overflowY","fullcontainer","SupplierForm","catagoryloading","catagories","citiesloading","cities","multiline","rows","inside","addSupplier","uploadFilesWithCredentials","supplier_data","AddSupplier","handleClose","useLoading","useErrors","handleAddSupplier","supplier_added","flexWrap","gap","AddSuppliers","open","Backdrop","ACTION","SelectOptions","catagorieserr","citiesserr","search","setSearch","SuppliersScreen","setOpen","SETALL","SETSUPPLIER","SETCITY","SETEMAIL","TOGGLEVISIBILITY","SETCATAGORY","SETCONTACT","SETDESCRIPTION","image_id","UpdatePhoto","object_info","imageUrl","handleUpdatePhoto","UpdatePhotoContainer","SETCONTACTNUM","DisplaySupplier","Container","useError","overflow","DisplayProducts","available","useFetchProducts","product","product_id","product_name","product_description","price","SupplierScreen","Suppliers","CustomPagination","page","setPage","hasMore","KeyboardArrowLeft","KeyboardArrowRight","OrdersTable","orders","order","order_id","order_status","dateString","addZero","i","date","Date","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","ReturnDateTime","ordered_time","DisplayOrders","page_number","payed","useFetchWithAuth","useFetchOrder","setHasMore","OrdersScreen","input","CustomText","ordered_items","ordered_item","ordered_item_id","quantity","Number","DisplayUserInfo","user","defaultValue","user_name","InputProps","readOnly","mobile_number","DisplayAddress","address","street_name","details","rowsMax","GetTotal","total","reduce","item","cost","DisplayOrder","OrderScreen","Main","basename","Orders","App","Boolean","location","hostname","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uMAAAA,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,iOCE5B,SAASC,IAAmB,IAAD,EACEC,mBAASC,aAAaC,QAAQ,iBADhC,mBAC/BC,EAD+B,KACjBC,EADiB,KAMtC,OAJAC,qBAAU,WACNJ,aAAaK,QAAQ,eAAgBH,KACvC,CAACA,IAEI,CAACA,EAAaC,GCNV,SAASG,IAAkB,IAAD,EACCP,mBAASQ,eAAeN,QAAQ,gBADjC,mBAC9BO,EAD8B,KACjBC,EADiB,KAMrC,OAJAL,qBAAU,WACNG,eAAeF,QAAQ,cAAeG,KACxC,CAACA,IAEI,CAACA,EAAYC,GCRT,SAAeC,EAA9B,kC,4CAAe,WAAgCR,GAAhC,mBAAAS,EAAA,6DACLC,EAAO,CAACV,gBADH,SAGYW,MAAM,aAAc,CACvCC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KATd,WAGLQ,EAHK,QAWEC,GAXF,sBAWYD,EAASE,WAXrB,uBAYQF,EAASG,OAZjB,cAYLN,EAZK,yBAcJA,EAAKT,aAdD,6C,sBCKf,IAAMgB,EAAiBC,IAAMC,gBACvBC,EAAoBF,IAAMC,gBAOzB,SAASE,IAAgB,IAAD,EACQC,qBAAWF,GADnB,mBAE3B,MAAO,CAACG,WAFmB,KAERC,cAFQ,MAKxB,SAASC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAAW,EACJlC,oBAAS,GADL,mBAC3BmC,EAD2B,KAClBC,EADkB,OAECpC,oBAAS,GAFV,mBAE3B+B,EAF2B,KAEhBC,EAFgB,OAGMjC,IAHN,mBAG3BI,EAH2B,aAIII,KAJJ,mBAIdG,GAJc,WAyBlC,OAnBAL,qBAAU,WACL,GAAiB,MAAdF,EAGC,OAFAiC,GAAW,QACXJ,GAAc,GAGlBrB,EAAiBR,GACbkC,MAAK,SAAC5B,GACH2B,GAAW,GACXJ,GAAc,GACdtB,EAAeD,MAElB6B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZH,GAAW,GACXJ,GAAc,QAExB,IAGE,kBAACP,EAAeiB,SAAhB,CAAyBC,MAAOR,GAC5B,kBAACP,EAAkBc,SAAnB,CAA4BC,MAAO,CAACZ,EAAWC,IAC1CE,I,qBC1CXU,EAAYC,YAAW,CACzBC,WAAW,CACPC,QAAS,OACTC,cAAe,SACfC,gBAAiBC,EAAOC,cACxBC,KAAM,EACNC,WAAY,SACZC,UAAW,WAGJ,SAASC,EAAT,GAAgC,IAAZrB,EAAW,EAAXA,SACzBsB,EAASZ,IACf,OACI,yBAAKa,UAAWD,EAAOV,YACjBZ,G,8CCbRU,EAAYC,YAAW,CAC3Ba,KAAK,CACHC,MAAM,SACNC,QAAS,EACTC,UAAW,aAIA,SAASC,EAAT,GAA4C,IAAD,IAA5BC,eAA4B,MAApB,QAAoB,EAARC,EAAQ,2BAClDR,EAASZ,IACTc,EAA+B,SAAxBK,EAAQE,cAAwBC,IAAUC,IACvD,OAAO,uCAAKC,IAAKV,EAAMD,UAAWD,EAAOE,MAAUM,I,YCbtC,SAASK,EAAT,GAAgC,IAAZnC,EAAW,EAAXA,SAC/B,OACI,kBAACoC,EAAA,EAAD,CAAYC,MAAM,WACbrC,G,SCIEsC,E,gFAAf,WAA2BC,EAAUC,GAArC,iBAAA9D,EAAA,6DACQC,EAAO,CACX4D,SAAUA,EACVC,SAAUA,GAHd,SAMyB5D,MAAM,mBAAoB,CAC/CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAZzB,WAMQQ,EANR,QAcgBC,GAdhB,gCAegBD,EAASsD,OAfzB,4CAiBetD,EAASG,OAjBxB,sF,sBAoBe,SAASoD,IAAe,IAAD,EACJ5E,mBAAS,IADL,mBAC7ByE,EAD6B,KACnBI,EADmB,OAEJ7E,mBAAS,IAFL,mBAE7B0E,EAF6B,KAEnBI,EAFmB,OAGN9E,oBAAS,GAHH,mBAG7BmC,EAH6B,KAGpBC,EAHoB,OAIdpC,mBAAS,IAJK,mBAI7BuC,EAJ6B,KAIxBwC,EAJwB,OAKGhF,IALH,mBAKhBK,GALgB,aAMEG,IANF,mBAMhBG,GANgB,aAOAmB,IAAjBG,GAPiB,EAO7BD,WAP6B,EAOjBC,eAWbgD,EAAW,uCAAG,gCAAApE,EAAA,sEAEhBmE,EAAO,IACP3C,GAAW,GAHK,SAI2BoC,EAAYC,EAASC,GAJhD,gBAITjE,EAJS,EAITA,YAAaN,EAJJ,EAIIA,aACpBiC,GAAW,GACXhC,EAAgBD,GAChBO,EAAeD,GACfuB,GAAc,GARE,kDAUhBI,GAAW,GACX2C,EAAO,EAAD,IAXU,0DAAH,qDAeZE,EAAc,WACnB,OAAI9C,EAAgB,kBAAC+C,EAAA,EAAD,MACb,MAGFC,EAAY,WAClB,OAAG5C,EAAY,kBAAC8B,EAAD,KAAY9B,GACpB,MAGN,OACE,kBAAC,EAAD,KACE,kBAACuB,EAAD,MACA,kBAACmB,EAAD,MACA,kBAACE,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,MAAM,WACNtB,QAAQ,WACRpB,MAAO8B,EACPa,SA3CsB,SAACC,GAC3BV,EAAYU,EAAEC,OAAO7C,QA2CjB8C,MAAO,CAAEC,OAAQ,OAAQ/B,MAAO,UAChCgC,UAAQ,IAEV,kBAACP,EAAA,EAAD,CACEC,MAAM,WACNtB,QAAQ,WACR6B,KAAK,WACLjD,MAAO+B,EACPY,SAhDsB,SAACC,GAC3BT,EAAYS,EAAEC,OAAO7C,QAgDjB8C,MAAO,CAAEC,OAAQ,OAAQ/B,MAAO,UAChCgC,UAAQ,IAEV,kBAACE,EAAA,EAAD,CACEtB,MAAM,UACNR,QAAQ,YACR0B,MAAO,CAAEC,OAAQ,OAAQ/B,MAAO,UAChCmC,QAASd,GAJX,UC3FN,IAAMpC,EAAYC,YAAW,CACzBC,WAAW,CACPC,QAAS,OACTC,cAAe,SACfC,gBAAiBC,EAAO6C,YACxB3C,KAAM,EACNC,WAAY,SACZ2C,eAAgB,SAChB1C,UAAW,WAGJ,SAASC,EAAT,GAAgC,IAAZrB,EAAW,EAAXA,SACzBsB,EAASZ,IACf,OACI,yBAAKa,UAAWD,EAAOV,YACjBZ,GChBC,SAAS+D,IACtB,OAAO,yBAAK7B,IAAKV,IAAMD,UAAW,SCErB,SAASyC,IACpB,OACI,kBAAC,EAAD,KACI,kBAACD,EAAD,MACA,kBAACf,EAAA,EAAD,CAAkBX,MAAM,e,6BCJ9B3B,EAAYC,YAAW,CAC3BsD,IAAI,CACFpD,QAAS,OACTO,UAAW,MACXD,WAAY,SACZ2C,eAAgB,gBAChBI,aAAc,MACdnD,gBAAiBC,EAAO6C,YACxBpC,MAAO,QAET0C,MAAM,CACJC,WAAY,OACZC,YAAa,OACbhC,MAAOrB,EAAOC,cACdqD,SAAU,OACVC,WAAY,UAGD,SAASC,EAAT,GAA8C,IAAD,IAAvBL,aAAuB,MAAjB,cAAiB,EAClDM,EAAUC,cACVpD,EAASZ,IACf,OACA,yBAAKa,UAAWD,EAAO2C,KACtB,kBAACU,EAAA,EAAD,CAAWf,QAASa,EAAQG,OAAQvC,MAAM,YAAYiC,SAAS,UAC9D,yBAAK/C,UAAWD,EAAO6C,OAClBA,I,WC/BI,SAAe1F,EAA9B,kC,4CAAe,WAAgCF,GAAhC,mBAAAG,EAAA,6DACLC,EAAO,CAACJ,eADH,SAGYK,MAAM,gBAAiB,CAC1CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KATd,WAGLQ,EAHK,QAWEC,GAXF,sBAWYD,EAASE,WAXrB,uBAYQF,EAASG,OAZjB,cAYLN,EAZK,yBAcJA,EAAK6F,OAdD,6C,sBCGA,SAAeC,IAA9B,+B,4CAAe,kDAAApG,EAAA,6DAAoCG,EAApC,+BAA6C,OAAQkG,EAArD,uBAA0D/F,EAA1D,uBACTT,EAAcD,eAAeN,QAAQ,eACnCC,EAAeF,aAAaC,QAAQ,gBAF7B,SAISgH,EAAoBzG,GAJ7B,mDAMSE,EAAiBR,GAN1B,QAMXM,EANW,OAOXD,eAAeF,QAAQ,cAAeG,GAP3B,eAUT0G,EAAU,CACZpG,OAAQA,EACRC,QAAS,CACPoG,cAAc,UAAD,OAAY3G,GACzB,eAAgB,qBAIjBS,GAAmB,QAAXH,IACVoG,EAAO,2BAAOA,GAAP,IAAgBjG,KAAMC,KAAKC,UAAUF,MAnBhC,UAsBAJ,MAAMmG,EAAIE,GAtBV,sF,sBCAf,IAAME,EAAkB3F,IAAMC,gBACxB2F,EAAiB5F,IAAMC,gBACvB4F,GAAe7F,IAAMC,gBAEd6F,GACD,SADCA,GAEA,UAFAA,GAGI,cAHJA,GAIC,WAJDA,GAKI,cAGjB,SAASC,GAAQC,EAAOC,GACpB,OAAQA,EAAO/B,MACX,KAAK4B,GACD,OAAO,eAAKG,EAAOC,SACvB,KAAKJ,GACD,OAAO,2BAAKE,GAAZ,IAAmBG,cAAeF,EAAOC,UAC7C,KAAKJ,GACD,OAAO,2BAAKE,GAAZ,IAAmBjD,SAAUkD,EAAOC,UACxC,KAAKJ,GACD,OAAO,2BAAKE,GAAZ,IAAmBI,MAAOH,EAAOC,UACrC,KAAKJ,GACD,OAAO,2BAAKE,GAAZ,IAAmBK,UAAWL,EAAMK,WACxC,QACI,OAAOL,GAIZ,SAASM,KAAqB,IAAD,EACPlG,qBAAWuF,GADJ,mBAEhC,MAAO,CAACK,MAFwB,KAEjBO,SAFiB,MAe5B,SAASC,GAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,YAAajG,EAAY,EAAZA,SACnC+E,EAAG,yCAAqCkB,GADO,EAE3BC,qBAAWX,GAAS,CAC1CI,cAAe,GACfE,UAAU,EACVtD,SAAU,GACVqD,MAAO,KAN0C,mBAE9CJ,EAF8C,KAEvCO,EAFuC,OASvBjI,oBAAS,GATc,mBAS9CmC,EAT8C,KASrCC,EATqC,OAU/BpC,mBAAS,IAVsB,mBAU9CuC,EAV8C,KAUzCwC,EAVyC,KA6BrD,OAjBA1E,qBAAU,YACO,uCAAG,8BAAAO,EAAA,6DACZwB,GAAW,GADC,SAEW4E,EAAqB,MAAOC,GAFvC,WAEN5F,EAFM,QAGEC,GAHF,sBAGYD,EAASE,WAHrB,uBAIOF,EAASG,OAJhB,OAINX,EAJM,OAKZoH,EAAS,CAAErC,KAAM4B,GAAgBI,QAAS/G,IAC1CuB,GAAW,GANC,4CAAH,qDASbiG,GAAU/F,OAAM,SAACC,GACbH,GAAW,GACX2C,EAAOxC,QAEZ,CAAC0E,IAIA,kBAACI,EAAgB3E,SAAjB,CAA0BC,MAAO,CAAC+E,EAAMO,IACpC,kBAACX,EAAe5E,SAAhB,CAAyBC,MAAO,CAACR,EAAQC,IACrC,kBAACmF,GAAa7E,SAAd,CAAuBC,MAAO,CAACJ,EAAIwC,IAC9B7C,KC5EN,SAASoG,GAAT,GAKX,IAJFC,EAIC,EAJDA,UACAC,EAGC,EAHDA,cAGC,IAFDC,eAEC,MAFO,KAEP,MADDC,mBACC,MADa,SACb,EACD,OACE,yBAAKjF,UAAU,mBAAmBgC,MAAO,CAAC9B,MAAM,SAC9C,kBAACkC,EAAA,EAAD,CAAQtB,MAAM,UAAUR,QAAQ,OAAO+B,QAAS0C,GAC7CE,GAGH,kBAAC7C,EAAA,EAAD,CAAQtB,MAAM,UAAUR,QAAQ,YAAY+B,QAASyC,GAClDE,ICdM,SAASE,GAAT,GACX,OAD8C,EAAVxG,QACjB,kBAAC+C,EAAA,EAAD,CAAmBX,MAAM,YACrC,KCFI,SAASqE,GAAT,GAAqC,IAAD,IAAZC,cAAY,MAAL,GAAK,EAC/C,OAAGA,EAAOC,OAAO,EACND,EAAOE,KAAI,SAACxG,EAAKyG,GAAN,OACd,kBAAC3E,EAAD,CAAW4E,IAAKD,GACXzG,EAAI2G,eAIV,K,kCCNI,SAASC,GAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,QAAS9D,EAAkB,EAAlBA,SAAUD,EAAQ,EAARA,MAEvD,OACE,kBAACgE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAQJ,QAASA,EAAS9D,SAAUA,EAAUf,MAAM,YAC7Dc,MAAOA,KCLf,IAAMzC,GAAYC,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,YAGpB,SAAS+F,KACtB,IAAMlG,EAASZ,KADsB,EAEToF,KAApBN,EAF6B,EAE7BA,MAAOO,EAFsB,EAEtBA,SACf,OACE,oCACE,kBAAC7C,EAAA,EAAD,CACEC,MAAM,OACNtB,QAAQ,WACRN,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMG,cACbvC,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAiBI,QAASrC,EAAEC,OAAO7C,SAEtDgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,WACNtB,QAAQ,WACRN,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMjD,SACba,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAqBI,QAASrC,EAAEC,OAAO7C,SAE1DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,QACNtB,QAAQ,WACR6B,KAAK,QACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMI,MACbxC,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAkBI,QAASrC,EAAEC,OAAO7C,SAEvDgD,UAAQ,IAGV,kBAACwD,GAAD,CACE9D,MAAM,QACN+D,QAAS1B,EAAMK,SACfzC,SAAU,SAACC,GAAD,OAAO0C,EAAS,CAAErC,KAAM4B,SClC3B,SAASmC,GAAT,GAA2C,IAAhBxB,EAAe,EAAfA,YACxC,OACE,kBAACD,GAAD,CAAcC,YAAaA,GACzB,kBAACyB,GAAD,CAASzB,YAAaA,KAK5B,SAASyB,GAAT,GAAmC,IAAhBzB,EAAe,EAAfA,YACThG,ENUH,WAA6B,IAAD,EACDL,qBAAWwF,GADV,mBAE/B,MAAO,CAACnF,QAFuB,KAEdC,WAFc,MMVbyH,GAAZ1H,QACAI,ENcH,WAA2B,IAAD,EACRT,qBAAWyF,IADH,mBAE7B,MAAO,CAAChF,IAFqB,KAEjBwC,OAFiB,MMdf+E,GAARvH,IACAmF,EAAUM,KAAVN,MACFf,EAAUC,cAEVmD,EAAY,uCAAG,4BAAAnJ,EAAA,yDACDoJ,OAAOC,QACvB,iDAFiB,+EAMbpJ,EAAO,CAAEsH,eANI,SAOInB,EAAqB,SAPzB,wBAOwCnG,GAPxC,kBAQNS,GARM,wBASjB4I,MAAM,oBACNvD,EAAQG,SAVS,2BAanBoD,MAAM,oBAba,4CAAH,qDAgBZC,EAAY,uCAAG,4BAAAvJ,EAAA,yDACDoJ,OAAOC,QAAQ,mCADd,wDAGbpJ,EAHa,2BAId6G,GAJc,IAKjBS,gBALiB,iCAQInB,EAAqB,MARzB,wBAQqCnG,GARrC,kBASNS,GATM,wBAUjB4I,MAAM,oBAVW,2BAanBA,MAAM,oBAba,4CAAH,qDAgBlB,OAAI/H,EAAgB,kBAACwG,GAAD,CAAgBxG,SAAS,IACzCI,EAAY,kBAACqG,GAAD,CAAeC,OAAQ,CAACtG,KAGtC,oCACE,kBAAC+F,GAAD,CACEC,UAAW4B,EACX1B,QAAQ,SACRD,cAAeuB,EACfrB,YAAY,WAEd,kBAACgB,GAAD,OClES,SAASU,KAAkB,IAChCC,EAAOC,cAAPD,GACR,OACE,kBAAC,EAAD,KACI,kBAAC3D,EAAD,CAAeL,MAAO,aACtB,kBAACsD,GAAD,CAAiBxB,YAAakC,KCXvB,SAASE,KACpB,OACI,oCACI,kBAAC,IAAD,CAAMC,GAAG,aAAa/G,UAAU,mBAAhC,cACA,kBAAC,IAAD,CAAM+G,GAAG,UAAU/G,UAAU,mBAA7B,WACA,kBAAC,IAAD,CAAM+G,GAAG,cAAc/G,UAAU,mBAAjC,eACA,kBAAC,IAAD,CAAM+G,GAAG,aAAa/G,UAAU,mBAAhC,cACA,kBAAC,IAAD,CAAM+G,GAAG,UAAU/G,UAAU,mBAA7B,YCJG,SAASgH,KACpB,OACI,kBAAC,EAAD,KACI,kBAACxE,EAAD,MACA,kBAACsE,GAAD,O,oFCHG,SAASG,KAAqC,IAA5B3J,EAA2B,uDAAlB,MAAOkG,EAAW,uCAAN/F,EAAM,yCAC5BlB,oBAAS,GADmB,mBACnDmC,EADmD,KAC1CC,EAD0C,OAE9BpC,qBAF8B,mBAEnD2K,EAFmD,KAE3CC,EAF2C,OAGpC5K,mBAAS,IAH2B,mBAGnDuC,EAHmD,KAG9CwC,EAH8C,OAIpBxE,IAJoB,mBAInDE,EAJmD,KAItCC,EAJsC,OAKnCX,IALmC,mBAKnDI,EALmD,KAiD1D,OA1CAE,qBAAU,WACR,IAAMwK,EAAW,uCAAG,4BAAAjK,EAAA,sEACIsG,EAAoBzG,GADxB,mFAGWE,EAAiBR,GAH5B,OAGZ2K,EAHY,OAIlBpK,EAAeoK,GAJG,2CAAH,qDAOXC,EAAU,uCAAG,gCAAAnK,EAAA,6DACbuG,EAAU,CACZpG,OAAQA,EACRC,QAAS,CACPoG,cAAc,UAAD,OAAY3G,GACzB,eAAgB,qBAGhBS,IACFiG,EAAO,2BAAQA,GAAR,IAAiBjG,KAAMC,KAAKC,UAAUF,MAT9B,SAWKJ,MAAMmG,EAAKE,GAXhB,WAWX6D,EAXW,QAYL1J,GAZK,uBAafyD,EAAOiG,EAAQzJ,YACfa,GAAW,GAdI,2CAiBI4I,EAAQxJ,OAjBZ,QAiBXmJ,EAjBW,OAmBjBC,EAAUD,GACVvI,GAAW,GApBM,4CAAH,qDAuBhBA,GAAW,GACXyI,IACGxI,MAAK,WACJ0I,OAEDzI,OAAM,SAACC,GACNwC,EAAOxC,GACPH,GAAW,QAEd,CAAC6E,EAAK/F,IAEF,CAAEiB,UAASwI,SAAQpI,OCtCVM,YAAW,CACzBoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,QAETyH,KAAM,CACJnI,gBAAiBoI,EAAOtF,YACxBxB,MAAO8G,EAAOlI,cACdsD,WAAY,Y,aC9BX,SAAS6E,GAAcxD,GAE1B,MADW,0JACDyD,KAAKC,OAAO1D,GAAO7D,eAG1B,SAASwH,GAAiB/G,GAC7B,OAASA,EAAUoE,QAAU,ECJTpH,IAAMC,gBACRD,IAAMC,gBACLD,IAAMC,gBCGXkB,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTP,WAAY,YCIER,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTP,WAAY,YCRER,aAAW,SAAC8I,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BvH,MAAO,YChBI,SAASmG,KAAqC,IAA5B3J,EAA2B,uDAAlB,MAAOkG,EAAW,uCAAN/F,EAAM,yCAC5BlB,oBAAS,GADmB,mBACnDmC,EADmD,KAC1CC,EAD0C,OAE9BpC,qBAF8B,mBAEnD2K,EAFmD,KAE3CC,EAF2C,OAGpC5K,mBAAS,IAH2B,mBAGnDuC,EAHmD,KAG9CwC,EAH8C,KAmC1D,OA9BA1E,qBAAU,WACR,IAAM0K,EAAU,uCAAG,gCAAAnK,EAAA,6DACbuG,EAAU,CACZpG,OAAQA,EACRC,QAAS,CACP,eAAgB,qBAGhBE,IACFiG,EAAO,2BAAQA,GAAR,IAAiBjG,KAAMC,KAAKC,UAAUF,MAR9B,SAUKJ,MAAMmG,EAAKE,GAVhB,WAUX6D,EAVW,QAWJ1J,GAXI,uBAYfyD,EAAOiG,EAAQzJ,YACfa,GAAW,GAbI,2CAgBI4I,EAAQxJ,OAhBZ,QAgBXmJ,EAhBW,OAkBjBC,EAAUD,GACVvI,GAAW,GAnBM,4CAAH,qDAsBhBA,GAAW,GACX2I,IAAazI,OAAM,SAACC,GAClBwC,EAAOxC,GACPH,GAAW,QAEZ,CAAC6E,EAAK/F,IAEF,CAAEiB,UAASwI,SAAQpI,OClCb,SAASwJ,KACpB,IADqC,EAEJrB,GAAS,MADjC,sBAGT,MAAO,CAACvI,QAJ6B,EAE7BA,QAESwI,OAJoB,EAEpBA,OAEQpI,IAJY,EAEZA,KCHd,SAAgByJ,GAA/B,mC,8CAAgB,WAAuBC,GAAvB,eAAArL,EAAA,uFAEWoG,EAAqB,OAFhC,kBAE2C,CAACiF,cAF5C,cAEN5K,EAFM,yBAGLA,EAASC,IAHJ,4C,sBCoBhB,IAAMsB,GAAYC,YAAW,CAC3BoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,QAETyH,KAAM,CACJnI,gBAAiBoI,EAAOtF,YACxBxB,MAAO8G,EAAOlI,cACdsD,WAAY,YAID,SAASyF,GAAT,GAAgC,IAATC,EAAQ,EAARA,MAAQ,EACXJ,KAAzB5J,EADoC,EACpCA,QAASwI,EAD2B,EAC3BA,OAAQpI,EADmB,EACnBA,IACnBiB,EAASZ,KACT+D,EAAUC,cAEVwF,EAAa,uCAAG,4BAAAxL,EAAA,yDACdqL,EAAYjC,OAAOqC,OAAO,aADZ,iEAGEL,GAAQC,GAHV,yCAKlB/B,MAAM,cALY,0BAQpBA,MAAM,sBARc,4CAAH,qDAWboC,EAAY,WAChB,OACE,kBAACC,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WAClD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,OAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,eAKJ,kBAAC4B,GAAA,EAAD,KACGrC,EAAO5B,KAAI,SAACkE,EAAMjE,GAAP,OACV,kBAAC6D,GAAA,EAAD,CACE5D,IAAKgE,EAAKC,QACVpH,QAAS,WACPa,EAAQwG,KAAR,UAAgBhB,EAAMlF,IAAtB,YAA6BgG,EAAKC,YAGpC,kBAACJ,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzC/D,EAAM,GAET,kBAAC8D,GAAA,EAAD,CAAWC,MAAM,UAAUE,EAAKhB,mBASxCoB,EAAU,WACd,OAAIlL,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KACT,kBAAC+J,EAAD,OAET,OACE,kBAAC,EAAD,KACE,kBAAC5F,EAAD,CAAeL,MAAM,WACrB,kBAACR,EAAA,EAAD,CAAQtB,MAAM,UACZuB,QAASsG,GADX,cAGA,kBAACiB,EAAD,O,aCjFN,IAAMzK,GAAYC,YAAW,CACzBoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,QAETyH,KAAM,CACJnI,gBAAiBoI,EAAOtF,YACxBxB,MAAO8G,EAAOlI,cACdsD,WAAY,YAIH,SAAS6G,GAAT,GAAyE,IAAD,EChCxE,YAKX,IAJAC,EAID,EAJCA,QACAL,EAGD,EAHCA,QACAM,EAED,EAFCA,YACAC,EACD,EADCA,cAGMC,EAAc,IAAIC,gBACrBT,GAASQ,EAAaE,OAAO,UAAUV,GAC5B,MAAXK,GAA8BG,EAAaE,OAAO,UAAWL,GAC7DC,GAAaE,EAAaE,OAAO,cAAeJ,GAChDC,GAAeC,EAAaE,OAAO,gBAAiBH,GAEvD,IARD,EAU8B/C,GAAS,MAF7B,gCAA4BgD,IAIrC,MAAO,CAACnL,IAZT,EAUQA,IAEKJ,QAZb,EAUYA,QAESwI,OAZrB,EAUoBA,QDkBUkD,CAAkB,CAACN,QADmC,EAA7CA,QACkBE,cAD2B,EAArCA,cACwBD,YADa,EAAtBA,YACqBN,QADC,EAAVA,UAClE3K,EAD4E,EAC5EA,IAAIJ,EADwE,EACxEA,QAAQwI,EADgE,EAChEA,OACbnH,EAASZ,KACT+D,EAAUC,cAEhB,OAAGzE,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KAEX,kBAACgK,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WACpD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,QAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,eAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,UAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,aAKJ,kBAAC4B,GAAA,EAAD,KACGrC,EAAO5B,KAAI,SAAC+E,GAAD,OACV,kBAACjB,GAAA,EAAD,CAAU5D,IAAK6E,EAASC,YACtBjI,QAAU,WACRa,EAAQwG,KAAR,qBAA2BW,EAASC,gBAGtC,kBAACjB,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzCe,EAASL,eAEZ,kBAACX,GAAA,EAAD,CAAWC,MAAM,UAAUe,EAASE,sBACpC,kBAAClB,GAAA,EAAD,CAAWC,MAAM,UAAUe,EAASG,gBACpC,kBAACnB,GAAA,EAAD,CAAWC,MAAM,UACde,EAASP,QAAU,OAAS,gBEvEhC,SAAeW,GAA9B,mC,8CAAe,WAA0BhB,GAA1B,eAAAtM,EAAA,0FAEYoG,EAAqB,SAFjC,qBAEgD,CAACkG,YAFjD,cAEL7L,EAFK,yBAGJA,EAASC,IAHL,4C,sBCAA,SAAe6M,GAA9B,qC,8CAAe,WAA0BjB,EAASjB,GAAnC,eAAArL,EAAA,4DACC,qBADD,SAEYoG,EAAqB,MADhC,qBAC0C,CAACkG,UAAQjB,cAFpD,cAEL5K,EAFK,yBAGJA,EAASC,IAHL,4C,sBCUf,IAAMsB,GAAYC,YAAW,CACzB4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,YAGtB,SAASyK,KAAc,IAC3B/D,EAAMC,cAAND,GACDpD,EAAG,kCAA8BoD,GACjC7G,EAASZ,KAHkB,EAKH5C,oBAAS,GALN,mBAK1BmC,EAL0B,KAKjBC,EALiB,OAMXpC,mBAAS,IANE,mBAM1BuC,EAN0B,KAMrBwC,EANqB,OAOT/E,mBAAS,IAPA,mBAO1BqO,EAP0B,KAOpBC,EAPoB,OAQPtO,mBAAS,QARF,mBAQ1BqG,EAR0B,KAQnBkI,EARmB,KAS3B5H,EAAUC,cAEhBvG,qBAAU,YACO,uCAAI,8BAAAO,EAAA,6DACbwB,GAAW,GADE,SAEU4E,EAAqB,MAAOC,GAFtC,cAEP5F,EAFO,gBAGMA,EAASG,OAHf,OAGPX,EAHO,OAIbyN,EAAQzN,EAAKoL,WACb7J,GAAW,GACXmM,EAAS1N,EAAKoL,WAND,4CAAJ,qDASb5D,GACK/F,OAAM,SAAAC,GAAG,OAAGwC,EAAOxC,QAC1B,IAEF,IAAMiM,EAAW,WAAK,IAAD,EAKXzE,EAAY,uCAAG,sBAAAnJ,EAAA,yDACCoJ,OAAOC,QAAQ,8CADhB,iEAGKiE,GAAW7D,GAHhB,0CAKbL,OAAOE,MAAM,gBACbvD,EAAQG,SANK,2BASjBkD,OAAOE,MAAM,oBATI,4CAAH,qDAYZC,EAAY,uCAAG,sBAAAvJ,EAAA,yDACCoJ,OAAOC,QAAQ,mCADhB,iEAGKkE,GAAW9D,EAAGgE,GAHnB,0CAKbrE,OAAOE,MAAM,gBACbvD,EAAQG,SANK,2BASjBkD,OAAOE,MAAM,oBATI,4CAAH,qDAWlB,OAEI,yBAAKzG,UAAU,oBAEf,kBAACoC,EAAA,EAAD,CAAQtB,MAAM,UACVuB,QAASiE,GADb,UAMA,kBAAC3E,EAAA,GAAD,GAAWzC,MAAO0L,EAClBhJ,MAAM,OACNtB,QAAQ,WACRN,UAAWD,EAAOiG,QAHlB,uBAIO4E,GAJP,4BAKW,GALX,2BArCe,SAAC9I,GAChB+I,EAAQ/I,EAAEC,OAAO7C,UAoCjB,kCAUA,kBAACkD,EAAA,EAAD,CAAQtB,MAAM,UAAUR,QAAQ,YAC5B+B,QAAWqE,GADf,YASFkD,EAAU,WACZ,OAAGlL,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KACR,kBAACiM,EAAD,OAGX,OACI,kBAAC,EAAD,KACI,kBAAC9H,EAAD,CAAeL,MAAOA,IACtB,kBAACgH,EAAD,MACA,2CACA,kBAACC,GAAD,CAAkBJ,QAAS7C,KCxGxB,SAASoE,GAAT,GAAwB,IAATtC,EAAQ,EAARA,MAC1B,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,KAAmBuF,UAAWN,KAC/C,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,QAAsBuF,UAAW4B,OCR9C,SAASQ,KACpB,IADwC,EAEPlE,GAAS,MADjC,0BAET,MAAO,CAACvI,QAHgC,EAEhCA,QACSwI,OAHuB,EAEvBA,OACQpI,IAHe,EAEfA,KCFd,SAAgBsM,GAA/B,mC,8CAAgB,WAA2BC,GAA3B,eAAAlO,EAAA,2FAEWoG,EAAqB,OAFhC,sBAE2C,CAAC8H,kBAF5C,cAENzN,EAFM,yBAGLA,EAASC,IAHJ,4C,sBCoBhB,IAAMsB,GAAYC,YAAW,CAC3BoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,QAETyH,KAAM,CACJnI,gBAAiBoI,EAAOtF,YACxBxB,MAAO8G,EAAOlI,cACdsD,WAAY,YAID,SAASyF,GAAT,GAAgC,IAATC,EAAQ,EAARA,MAAQ,EACXyC,KAAzBzM,EADoC,EACpCA,QAASwI,EAD2B,EAC3BA,OAAQpI,EADmB,EACnBA,IACnBiB,EAASZ,KACT+D,EAAUC,cAEVmI,EAAiB,uCAAG,4BAAAnO,EAAA,yDAClBkO,EAAgB9E,OAAOqC,OAAO,iBADZ,iEAGFwC,GAAYC,GAHV,yCAKtB5E,MAAM,kBALgB,0BAQxBA,MAAM,0BARkB,4CAAH,qDAWjB8E,EAAW,WACf,OACE,kBAACzC,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WAClD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,OAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,mBAKJ,kBAAC4B,GAAA,EAAD,KACGrC,EAAO5B,KAAI,SAACkG,EAAUjG,GAAX,OACV,kBAAC6D,GAAA,EAAD,CACE5D,IAAKgG,EAASzB,YACd1H,QAAS,WACPa,EAAQwG,KAAR,UAAgBhB,EAAMlF,IAAtB,YAA6BgI,EAASzB,gBAGxC,kBAACV,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzC/D,EAAM,GAET,kBAAC8D,GAAA,EAAD,CAAWC,MAAM,UAAUkC,EAASH,uBAS5CzB,EAAU,WACd,OAAIlL,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KACT,kBAACyM,EAAD,OAET,OACE,kBAAC,EAAD,KACE,kBAACtI,EAAD,CAAeL,MAAM,eACrB,kBAACR,EAAA,EAAD,CAAQtB,MAAM,UACZuB,QAASiJ,GADX,kBAGA,kBAAC1B,EAAD,OCjGS,SAAea,GAA9B,mC,8CAAe,WAA0BV,GAA1B,eAAA5M,EAAA,8FAEYoG,EAAqB,SAFjC,yBAEgD,CAACwG,gBAFjD,cAELnM,EAFK,yBAGJA,EAASC,IAHL,4C,sBCAA,SAAe6M,GAA9B,qC,8CAAe,WAA0BX,EAAasB,GAAvC,eAAAlO,EAAA,4DACC,yBADD,SAEYoG,EAAqB,MADhC,yBAC0C,CAACwG,cAAYsB,kBAFxD,cAELzN,EAFK,yBAGJA,EAASC,IAHL,4C,sBCUf,IAAMsB,GAAYC,YAAW,CACzB4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,YAGtB,SAASyK,KAAc,IAC3B/D,EAAMC,cAAND,GACDpD,EAAG,0CAAsCoD,GACzC7G,EAASZ,KAHkB,EAKH5C,oBAAS,GALN,mBAK1BmC,EAL0B,KAKjBC,EALiB,OAMXpC,mBAAS,IANE,mBAM1BuC,EAN0B,KAMrBwC,EANqB,OAOT/E,mBAAS,IAPA,mBAO1BqO,EAP0B,KAOpBC,EAPoB,OAQPtO,mBAAS,YARF,mBAQ1BqG,EAR0B,KAQnBkI,EARmB,KAS3B5H,EAAUC,cAEhBvG,qBAAU,YACO,uCAAI,8BAAAO,EAAA,6DACbwB,GAAW,GADE,SAEU4E,EAAqB,MAAOC,GAFtC,cAEP5F,EAFO,gBAGMA,EAASG,OAHf,OAGPX,EAHO,OAIbyN,EAAQzN,EAAKiO,eACb1M,GAAW,GACXmM,EAAS1N,EAAKiO,eAND,4CAAJ,qDASbzG,GACK/F,OAAM,SAAAC,GAAG,OAAGwC,EAAOxC,QAC1B,IAEF,IAAMiM,EAAW,WAAK,IAAD,EAKXzE,EAAY,uCAAG,sBAAAnJ,EAAA,yDACCoJ,OAAOC,QAAQ,kDADhB,iEAGKiF,GAAe7E,GAHpB,0CAKbL,OAAOE,MAAM,oBACbvD,EAAQG,SANK,2BASjBkD,OAAOE,MAAM,oBATI,4CAAH,qDAYZC,EAAY,uCAAG,sBAAAvJ,EAAA,yDACCoJ,OAAOC,QAAQ,mCADhB,iEAGKkF,GAAe9E,EAAGgE,GAHvB,0CAKbrE,OAAOE,MAAM,oBACbvD,EAAQG,SANK,2BASjBkD,OAAOE,MAAM,oBATI,4CAAH,qDAWlB,OAEI,yBAAKzG,UAAU,oBAEf,kBAACoC,EAAA,EAAD,CAAQtB,MAAM,UACVuB,QAASiE,GADb,UAMA,kBAAC3E,EAAA,GAAD,GAAWzC,MAAO0L,EAClBhJ,MAAM,OACNtB,QAAQ,WACRN,UAAWD,EAAOiG,QAHlB,uBAIO4E,GAJP,4BAKW,GALX,2BArCe,SAAC9I,GAChB+I,EAAQ/I,EAAEC,OAAO7C,UAoCjB,kCAUA,kBAACkD,EAAA,EAAD,CAAQtB,MAAM,UAAUR,QAAQ,YAC5B+B,QAAWqE,GADf,YASFkD,EAAU,WACZ,OAAGlL,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KACR,kBAACiM,EAAD,OAGX,OACI,kBAAC,EAAD,KACI,kBAAC9H,EAAD,CAAeL,MAAOA,IACtB,kBAACgH,EAAD,MACA,2CACA,kBAACC,GAAD,CAAkBE,YAAanD,KCxG5B,SAAS2E,GAAT,GAA4B,IAAT7C,EAAQ,EAARA,MAC9B,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,KAAmBuF,UAAW4C,KAC/C,kBAAC,IAAD,CAAOV,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,QAAsBuF,UAAW6C,O,4CCDvDzM,GAAYC,aAAW,SAAC8I,GAAD,MAAY,CACvC2D,YAAa,CACX5J,OAAQiG,EAAM4D,QAAQ,GACtBC,SAAU,SAIC,SAASC,GAAT,GAKX,IAJFpK,EAIC,EAJDA,MAIC,IAHD8B,eAGC,MAHS,GAGT,MAFDuI,iBAEC,MAFW,CAAC/M,MAAO,OAEnB,EADDgN,EACC,EADDA,aAEMnM,EAASZ,KADd,EAEuC5C,mBAAS0P,EAAUrF,IAF1D,mBAEMuF,EAFN,KAEoBC,EAFpB,KAMD,OAHAxP,qBAAU,WACRsP,EAAaD,EAAUrF,MACvB,IAEA,kBAACyF,GAAA,EAAD,CAAarM,UAAWD,EAAO8L,aAC7B,kBAACS,GAAA,EAAD,CAAY1F,GAAG,4BAA4BhF,GAC3C,kBAAC2K,GAAA,EAAD,CACEC,QAAS5K,EACT1C,MAAOiN,EACPtK,SAAU,SAACC,GACTsK,EAAgBtK,EAAEC,OAAO7C,OACzBgN,EAAapK,EAAEC,OAAO7C,SAGvB+M,EAAUrF,GAAG,KAAK,kBAAC6F,GAAA,EAAD,CAAUvN,MAAO+M,EAAUrF,IAAKmB,OAAOkE,EAAU/M,QACnEwE,EAAQ4B,KAAI,SAACoH,GAAD,OACX,kBAACD,GAAA,EAAD,CAAUjH,IAAKkH,EAAO9F,GAAI1H,MAAOwN,EAAO9F,IAAKmB,OAAO2E,EAAOxN,aCtCrE,IAAMyN,GAAkB1O,IAAMC,gBACxB0O,GAAc3O,IAAMC,gBACpB2F,GAAiB5F,IAAMC,gBACvB4F,GAAe7F,IAAMC,gBAEd6F,GACE,WADFA,GAEF,OAFEA,GAGD,QAHCA,GAIK,cAJLA,GAKM,mBALNA,GAME,WANFA,GAOI,aAPJA,GAQE,WARFA,GASI,UAGjB,SAASC,GAAQC,EAAOC,GACtB,OAAQA,EAAO/B,MACb,KAAK4B,GACH,OAAO,2BAAKE,GAAZ,IAAmB+F,cAAe9F,EAAOC,UAC3C,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmBwF,QAASvF,EAAOC,UACrC,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmB4I,SAAU3I,EAAOC,UACtC,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmB6F,SAAU7F,EAAM6F,UACrC,KAAK/F,GACH,OAAO,2BAAKE,GAAZ,IAAmBhD,SAAUiD,EAAOC,UACtC,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmBsG,qBAAsBrG,EAAOC,UAClD,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmB6I,WAAY5I,EAAOC,UACxC,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmB8F,YAAa7F,EAAOC,UACzC,KAAKJ,GACH,OAAO,2BAAKE,GAAZ,IAAmBuG,eAAgBtG,EAAOC,UAC5C,QACE,OAAOF,GAKN,SAAS8I,KAAc,IAAD,EACA1O,qBAAWsO,IADX,mBAEzB,MAAO,CAAC1I,MAFiB,KAEXO,SAFW,MAetB,SAASwI,KAAU,IAAD,EACA3O,qBAAWuO,IADX,mBAEvB,MAAO,CAACK,KAFe,KAETC,QAFS,MAKlB,SAASC,GAAT,GAAmC,IAAZ1O,EAAW,EAAXA,SAAW,EACbkG,qBAAWX,GAAS,CAC5CgG,cAAe,GACfP,QAAS,GACToD,SAAU,GACVtC,qBAAsB,GACtBT,SAAS,EACT7I,SAAU,GACV6L,WAAY,GACZ/C,YAAa,GACbS,eAAgB,KAVqB,mBAChCvG,EADgC,KACzBO,EADyB,OAaTjI,oBAAS,GAbA,mBAahCmC,EAbgC,KAavBC,EAbuB,OAcjBpC,mBAAS,IAdQ,mBAchCuC,EAdgC,KAc3BwC,EAd2B,OAehB/E,qBAfgB,mBAehC0Q,EAfgC,KAe3BC,EAf2B,KAgBvC,OACI,kBAACP,GAAgB1N,SAAjB,CAA0BC,MAAO,CAAC+E,EAAMO,IACtC,kBAAC,GAAavF,SAAd,CAAuBC,MAAO,CAACJ,EAAIwC,IAC/B,kBAAC,GAAerC,SAAhB,CAAyBC,MAAO,CAACR,EAAQC,IACvC,kBAACiO,GAAY3N,SAAb,CAAsBC,MAAO,CAAC+N,EAAKC,IAChCzO,M,aCnFF,SAAe2O,KAA9B,gC,8CAAe,0DAAAjQ,EAAA,6DAAqCG,EAArC,+BAA4C,OAAQkG,EAApD,uBAAyD6J,EAAzD,uBACPrQ,EAAcD,eAAeN,QAAQ,eACnCC,EAAeF,aAAaC,QAAQ,gBAF/B,SAIWgH,EAAoBzG,GAJ/B,mDAMWE,EAAiBR,GAN5B,QAMTM,EANS,OAOTD,eAAeF,QAAQ,cAAeG,GAP7B,QAYX,IAAUwI,KAFN/H,EAAO,IAAI6P,SAEED,EACb5P,EAAK0M,OAAO3E,EAAIC,WAAY4H,EAAO7H,IAb5B,eAgBS/H,EAAK8P,UAhBd,IAgBX,2BAAWrO,EAAwB,QAC/BH,QAAQC,IAAIE,GAjBL,+CAoBE7B,MAAMmG,EAAI,CACnBlG,OAAQA,EACRC,QAAS,CACPoG,cAAc,UAAD,OAAY3G,IAG3BS,KAAMA,IA1BC,sF,sBCAA,SAAS+P,GAAT,GAAqC,IAAjBhK,EAAgB,EAAhBA,IAAK0J,EAAW,EAAXA,QAAW,EACnB3Q,mBAASiH,GADU,mBAC1ClE,EAD0C,KACjCmO,EADiC,KAOjD,OACE,oCACGnO,GACC,yBACEqB,IAAKrB,EACL0C,MAAO,CAAE0L,OAAQ,IAAKxN,MAAO,IAAKE,UAAW,SAC7CuN,IAAI,SAIR,yBACE3L,MAAO,CACL1C,QAAS,OACTM,WAAY,SACZgO,aAAc,SACdrL,eAAgB,eAChBrC,MAAO,QAGRZ,GACC,kBAAC8C,EAAA,EAAD,CAAQC,QAxBK,WACnBoL,IACAP,KAsBqCpM,MAAM,WAArC,UAIF,kBAACsB,EAAA,EAAD,CAAQ9B,QAAQ,YAAYQ,MAAM,WAChC,2BAAO+M,IAAI,OAAOjH,GAAG,UAArB,cAIF,2BACEzE,KAAK,OACLyE,GAAG,OACHkH,OAAO,wBACPjM,SAAU,SAACC,GACT,IAAMiM,EAAQjM,EAAEC,OAAOiM,MAAM,GAC7BP,EAAWQ,IAAIC,gBAAgBH,IAC/Bb,EAAQa,IAEVI,QAAM,MCpChB,IAAMhP,GAAYC,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTiO,cAAe,MACfV,OAAQ,MACR9N,WAAY,SACZyO,UAAW,UAEbC,cAAc,CACZhP,QAAS,OACTY,MAAO,OACPqC,eAAgB,kBAIL,SAASgM,KACtB,IAAMxO,EAASZ,KADsB,EAET4N,KAApB9I,EAF6B,EAE7BA,MAAOO,EAFsB,EAEtBA,SAFsB,EAGdwI,KAAhBC,EAH8B,EAG9BA,KAAKC,EAHyB,EAGzBA,QAHyB,EAQjC/B,KAHOqD,EAL0B,EAKnC9P,QACQ+P,EAN2B,EAMnCvH,OANmC,KAOnCpI,IAOEwJ,MAHOoG,EAX0B,EAWnChQ,QACQiQ,EAZ2B,EAYnCzH,OAZmC,EAanCpI,IAGF,OAAI4P,GAAiBF,EAAwB,kBAACtJ,GAAD,CAAgBxG,SAAS,IAGpE,oCACE,kBAACgH,GAAD,CACEC,QAAS1B,EAAM6F,QACfjI,SAAU,SAACC,GAAD,OAAO0C,EAAS,CAAErC,KAAM4B,MAClCnC,MAAM,YAER,kBAAC4L,GAAD,CACEP,KAAOA,EACPC,QAASA,IAEX,kBAACvL,EAAA,EAAD,CACEC,MAAM,OACNtB,QAAQ,WACRN,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAM+F,cACbnI,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAqBI,QAASrC,EAAEC,OAAO7C,SAE1DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,QACNtB,QAAQ,WACR6B,KAAK,QACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAM4I,SACbhL,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAkBI,QAASrC,EAAEC,OAAO7C,SAEvDgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,cACNtB,QAAQ,WACRsO,WAAS,EACTC,KAAM,EACN7O,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMsG,qBACb1I,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAwBI,QAASrC,EAAEC,OAAO7C,SAE7DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,WACNtB,QAAQ,WACR6B,KAAK,WACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMhD,SACbY,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAqBI,QAASrC,EAAEC,OAAO7C,SAE1DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,kBACNtB,QAAQ,WACR6B,KAAK,WACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAM6I,WACbjL,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAuBI,QAASrC,EAAEC,OAAO7C,SAE5DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,iBACNtB,QAAQ,WACR6B,KAAK,MACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMuG,eACb3I,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAuBI,QAASrC,EAAEC,OAAO7C,SAE5DgD,UAAQ,IAGZ,yBAAKlC,UAAWD,EAAOuO,eACrB,kBAACtC,GAAD,CACEpK,MAAO,OACPsK,aAAc,SAAChN,GACbsF,EAAS,CAAErC,KAAM4B,GAAiBI,QAASjF,KAE7CwE,QAASiL,EAAOrJ,KAAI,SAACkE,GAAD,MAAW,CAC7B5C,GAAI4C,EAAKC,QACTvK,MAAOsK,EAAKhB,cAEdyD,UAAW,CAAErF,GAAI+H,EAAO,GAAGlF,QAASvK,MAAOyP,EAAO,GAAGnG,aAGvD,kBAACwD,GAAD,CACEpK,MAAO,WACPsK,aAAc,SAAChN,GACbsF,EAAS,CAAErC,KAAM4B,GAAqBI,QAASjF,KAEjDwE,QAAS+K,EAAWnJ,KAAI,SAACkG,GAAD,MAAe,CACrC5E,GAAI4E,EAASzB,YACb7K,MAAOsM,EAASH,kBAElBY,UAAW,CACTrF,GAAI6H,EAAW,GAAG1E,YAClB7K,MAAOuP,EAAW,GAAGpD,mBCpI/B,IAAMlM,GAAYC,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTuN,OAAQ,MACR9N,WAAY,SACZyO,UAAW,UAEbS,OAAQ,CACNxP,QAAS,OACTC,cAAe,SACf0C,OAAQ,QACRrC,WAAY,SACZO,QAAS,W,SAIE4O,G,iFAAf,WAA2B9K,GAA3B,iBAAA9G,EAAA,iFAEQM,EAFR,eAEoBwG,GAFpB,SAIyB+K,GAA2B,OAJpD,qBAI+DvR,GAJ/D,YAIQG,EAJR,QAKeC,GALf,yCAMWD,EAASC,IANpB,uBAQcD,EAASsD,OARvB,iE,sBAWA,SAASkG,GAAY6H,GACnB,IAAI7J,EAAS,GAOb,OANKyC,GAAcoH,EAAcpC,YAC/BzH,EAAM,uBAAOA,GAAP,CAAe,mBAClB4C,GAAiBiH,EAAchO,YAClCmE,EAAM,uBAAOA,GAAP,CAAe,6CACnB6J,EAAchO,WAAagO,EAAcnC,aAC3C1H,EAAM,uBAAOA,GAAP,CAAe,2BAChBA,EAGM,SAAS8J,GAAT,GAAuC,IAAhBC,EAAe,EAAfA,YACpC,OACE,kBAAChC,GAAD,KACE,kBAAC,GAAD,CAASgC,YAAaA,KAK5B,SAAShJ,GAAT,GAAmC,IAAhBgJ,EAAe,EAAfA,YACXpP,EAASZ,KACP8E,EAAU8I,KAAV9I,MAFwB,EJjB3B,WAAuB,IAAD,EACK5F,qBAAWwF,IADhB,mBAEzB,MAAO,CAACnF,QAFiB,KAETC,WAFS,MIoBKyQ,GAAxB1Q,EAHwB,EAGxBA,QAASC,EAHe,EAGfA,WAHe,EJtB3B,WAAqB,IAAD,EACDN,qBAAWyF,IADV,mBAEvB,MAAO,CAAChF,IAFe,KAEVwC,OAFU,MI0BD+N,GAAhBvQ,EAJwB,EAIxBA,IAAKwC,EAJmB,EAInBA,OACN2L,EAAQD,KAARC,KACDqC,EAAiB,uCAAG,8BAAAnS,EAAA,yDACxBmE,EAAO,OACD8D,EAASgC,GAAYnD,IAChBoB,OAAS,GAHI,uBAItB/D,EAAO,aAAI8D,IAJW,0CAQtBzG,GAAW,GARW,SASOoQ,GAAY,2BAAI9K,GAAL,IAAWgJ,UAT7B,UAShBsC,EATgB,OAUtB5Q,GAAW,IACP4Q,EAXkB,wBAYpBJ,IAZoB,kBAab1I,MAAM,oBAbO,aAehB,0BAfgB,kCAiBtB9H,GAAW,GACX2C,EAAO,CAACyG,OAAO,EAAD,MAlBQ,0DAAH,qDAsBvB,OACE,kBAACiB,GAAA,EAAD,CAAOhJ,UAAWD,EAAOkI,SACvB,yBAAKjI,UAAWD,EAAO+O,QACrB,kBAAC5J,GAAD,CAAgBxG,QAASA,IACzB,kBAACyG,GAAD,CAAeC,OAAQtG,IACvB,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEkG,QAAS,eACTF,UAAWwK,EACXrK,YAAa,SACbF,cAAeoK,MC3FzB,IAAMhQ,GAAYC,aAAW,SAAC8I,GAAD,MAAY,CACvCD,QAAS,CACP3I,QAAS,OACTC,cAAe,MACfK,WAAY,SACZ2C,eAAgB,SAChBiN,SAAU,OACVC,IAAK,OAEPtH,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BvH,MAAO,YAIX,SAAS4O,GAAT,GAA8C,IAAtBC,EAAqB,EAArBA,KAAMR,EAAe,EAAfA,YACtBpP,EAASZ,KACf,OACE,kBAACyQ,GAAA,EAAD,CAAUD,KAAMA,EAAM3P,UAAWD,EAAOoI,UACtC,kBAAC+G,GAAD,CAAaC,YAAaA,KAKhC,IAAMU,GACW,gBADXA,GAEa,kBAFbA,GAGS,cAHTA,GAIK,UAGX,SAAS7L,GAAQC,EAAOC,GACtB,OAAQA,EAAO/B,MACb,KAAK0N,GACH,OAAO,2BAAK5L,GAAZ,IAAmB6F,QAAS5F,EAAOC,UACrC,KAAK0L,GACH,OAAO,2BAAK5L,GAAZ,IAAmB+F,cAAe9F,EAAOC,UAC3C,KAAK0L,GACH,OAAO,2BAAK5L,GAAZ,IAAmB8F,YAAa7F,EAAOC,UACzC,KAAK0L,GACH,OAAO,2BAAK5L,GAAZ,IAAmBwF,QAASvF,EAAOC,UACrC,QACE,OAAOF,GAIb,SAAS6L,GAAT,GAA4C,EAAnB7L,MAAoB,IAAbO,EAAY,EAAZA,SACxBzE,EAASZ,KAD2B,EAMtCgM,KAHOqD,EAH+B,EAGxC9P,QACQ+P,EAJgC,EAIxCvH,OACK6I,EALmC,EAKxCjR,IALwC,EAYtCwJ,KAHOoG,EAT+B,EASxChQ,QACQiQ,EAVgC,EAUxCzH,OACK8I,EAXmC,EAWxClR,IAXwC,EAcdvC,mBAAS,IAdK,mBAcnC0T,EAdmC,KAc3BC,EAd2B,KAgB1C,OAAI1B,GAAmBE,EACd,kBAACjN,EAAA,EAAD,CAAkBX,MAAM,YAC7BiP,GAAiBC,EACZ,kBAACpP,EAAD,+BAGP,yBAAKZ,UAAWD,EAAOkI,SACrB,kBAAC+D,GAAD,CACEpK,MAAM,OACN8B,QAAwBiL,EAAOrJ,KAAI,SAACkE,GAAD,MAAW,CAC5C5C,GAAI4C,EAAKC,QACTvK,MAAOsK,EAAKhB,cAEd0D,aAAc,SAAChN,GAAD,OACZsF,EAAS,CAAErC,KAAM0N,GAAgB1L,QAASjF,OAG9C,kBAAC8M,GAAD,CACEpK,MAAM,WACN8B,QAAwB+K,EAAWnJ,KAAI,SAACkG,GAAD,MAAe,CACpD5E,GAAI4E,EAASzB,YACb7K,MAAOsM,EAASH,kBAElBa,aAAc,SAAChN,GAAD,OACZsF,EAAS,CAAErC,KAAM0N,GAAoB1L,QAASjF,OAGlD,kBAAC8M,GAAD,CACEpK,MAAM,UACN8B,QAAS,CACP,CAAEkD,IAAI,EAAM1H,MAAO,QACnB,CAAE0H,IAAI,EAAO1H,MAAO,UAEtBgN,aAAc,SAAChN,GAAD,OACZsF,EAAS,CAAErC,KAAM0N,GAAsB1L,QAASjF,OAGpD,yBAAKc,UAAWD,EAAOkI,SACrB,kBAACtG,EAAA,EAAD,CACErB,QAAQ,WACRpB,MAAO+Q,EACPrO,MAAM,OACNC,SAAU,SAACC,GAAD,OAERoO,EAAUpO,EAAEC,OAAO7C,QAErBiD,KAAK,WAEP,kBAACC,EAAA,EAAD,CACEtB,MAAM,UACNuB,QAAS,kBACPmC,EAAS,CAAErC,KAAM0N,GAAwB1L,QAAS8L,MAHtD,YAaO,SAASE,KAAmB,IAAD,EACdxL,qBAAWX,GAAS,CAC5C8F,QAAS,KACTE,cAAe,GACfD,YAAa,GACbN,QAAS,KAL6B,mBACjCxF,EADiC,KAC1BO,EAD0B,OAQhBjI,oBAAS,GARO,mBAQjCoT,EARiC,KAQ3BS,EAR2B,KAiBxC,OACE,kBAAC,EAAD,KACE,kBAACnN,EAAD,MACA,kBAAC6M,GAAD,CAAe7L,MAAOA,EAAOO,SAAUA,IACvC,kBAACkL,GAAD,CAAcC,KAAMA,EAAMR,YARV,WAClBiB,GAAQ,MAQN,kBAAChO,EAAA,EAAD,CAAQtB,MAAM,UAAUuB,QAZT,WACjB+N,GAAQ,KAWN,WAGA,kBAACvG,GAAD,CACEC,QAAS7F,EAAM6F,QACfE,cAAe/F,EAAM+F,cACrBD,YAAa9F,EAAM8F,YACnBN,QAASxF,EAAMwF,WCvKvB,IAAMkD,GAAkB1O,IAAMC,gBACxB2F,GAAiB5F,IAAMC,gBACvB4F,GAAe7F,IAAMC,gBAGd6F,GAAU,CACrBsM,OAAQ,SACRC,YAAa,cACbC,QAAS,UACTC,SAAU,WACVC,iBAAkB,gBAClBC,YAAa,cACbC,WAAY,aACZC,eAAgB,kBAGlB,SAAS5M,GAAQC,EAAOC,GACtB,OAAQA,EAAO/B,MACb,KAAK4B,GAAQsM,OACX,OAAO,eAAKnM,EAAOC,SACrB,KAAKJ,GAAQuM,YACT,OAAO,2BAAIrM,GAAX,IAAkB+F,cAAe9F,EAAOC,UAC5C,KAAKJ,GAAQwM,QACT,OAAO,2BAAItM,GAAX,IAAiBwF,QAASvF,EAAOC,UACrC,KAAKJ,GAAQyM,SACT,OAAO,2BAAIvM,GAAX,IAAkB4I,SAAU3I,EAAOC,UACvC,KAAKJ,GAAQ0M,iBACT,OAAO,2BAAIxM,GAAX,IAAkB6F,SAAU7F,EAAM6F,UACtC,KAAK/F,GAAQ6M,eACT,kCAAU3M,GAAV,IAAiBsG,qBAAsBrG,EAAOC,UAClD,KAAKJ,GAAQ2M,YACT,OAAO,2BAAIzM,GAAX,IAAkB8F,YAAa7F,EAAOC,UAC1C,KAAKJ,GAAQ4M,WACT,OAAO,2BAAI1M,GAAX,IAAkBuG,eAAgBtG,EAAOC,UAC7C,QACI,OAAOF,GAIR,SAAS8I,KAAc,IAAD,EACC1O,qBAAWsO,IADZ,mBAEzB,MAAO,CAAC1I,MAFiB,KAEVO,SAFU,MAetB,SAAS2I,GAAT,GAAkD,IAA1B7C,EAAyB,EAAzBA,YAAa7L,EAAY,EAAZA,SACpC+E,EAAG,yCAAqC8G,GADQ,EAE5B3F,qBAAWX,GAAS,CAC5CgG,cAAe,GACf6G,SAAU,GACVpH,QAAS,GACToD,SAAU,GACVtC,qBAAsB,GACtBT,SAAS,EACTC,YAAa,GACbS,eAAgB,KAVoC,mBAE/CvG,EAF+C,KAExCO,EAFwC,OAaxBjI,oBAAS,GAbe,mBAa/CmC,EAb+C,KAatCC,EAbsC,OAchCpC,mBAAS,IAduB,mBAc/CuC,EAd+C,KAc1CwC,EAd0C,KAgCtD,OAhBA1E,qBAAU,YACK,uCAAG,8BAAAO,EAAA,6DACdwB,GAAW,GADG,SAES4E,EAAqB,MAAOC,GAFrC,WAER5F,EAFQ,QAGDC,GAHC,sBAGSD,EAASE,WAHlB,uBAIKF,EAASG,OAJd,OAIRX,EAJQ,OAKdoH,EAAS,CAAErC,KAAM4B,GAAQsM,OAAQlM,QAAS/G,IAC1CuB,GAAW,GANG,4CAAH,qDASbiG,GAAU/F,OAAM,SAACC,GACfH,GAAW,GACX2C,EAAOxC,QAET,CAACwL,IAGC,kBAAC,GAAgBrL,SAAjB,CAA0BC,MAAO,CAAC+E,EAAMO,IACtC,kBAAC,GAAevF,SAAhB,CAAyBC,MAAO,CAACR,EAAQC,IACrC,kBAAC,GAAaM,SAAd,CAAuBC,MAAO,CAACJ,EAAIwC,IAC9B7C,KCvFjB,IAAMU,GAAYC,YAAW,CAC3B4G,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTP,WAAY,SACZ6P,IAAK,SAKM,SAASqB,GAAT,GAKX,IAJFtN,EAIC,EAJDA,IAIC,IAHD2L,mBAGC,MAHa,aAGb,MAFD4B,mBAEC,MAFa,GAEb,EADDF,EACC,EADDA,SAEM9Q,EAASZ,KADd,EAEuB5C,qBAFvB,mBAEM0Q,EAFN,KAEYC,EAFZ,KAGK8D,EAAQ,kBAAcH,GACtBI,EAAiB,uCAAG,4BAAA9T,EAAA,sEACD6R,GAA2B,MAAOxL,EAAR,aAC/CyJ,QACG8D,IAHmB,WAClBnT,EADkB,QAKVC,GALU,4BAKC4I,MALD,SAKa7I,EAASsD,OALtB,mEAMxBuF,MAAM,iBACN0I,IAPwB,4CAAH,qDAUvB,OACE,kBAACnG,GAAA,EAAD,CAAOhJ,UAAWD,EAAOkI,SACvB,kBAAC,GAAD,CAAUiF,QAASA,EAAS1J,IAAKwN,IACjC,kBAACnM,GAAD,CACEG,QAAS,SACTF,UAAWmM,EACXhM,YAAa,SACbF,cAAeoK,KCjCvB,IAAMhQ,GAAYC,aAAW,SAAC8I,GAAD,MAAa,CACxClC,OAAQ,CAAE/D,OAAQ,OAAQ/B,MAAO,UACjC+H,QAAS,CACP3I,QAAS,OACTC,cAAe,SACfY,QAAS,MACTiO,cAAe,MACfV,OAAQ,MACR9N,WAAY,SACZyO,UAAW,UAEbC,cAAe,CACbhP,QAAS,OACTY,MAAO,OACPqC,eAAgB,gBAElB4F,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BvH,MAAO,YAIX,SAASoQ,GAAT,GAAuF,IAAvDvB,EAAsD,EAAtDA,KAAMR,EAAgD,EAAhDA,YAAa7E,EAAmC,EAAnCA,YAAauG,EAAsB,EAAtBA,SAAatQ,EAAS,+DAC9ER,EAASZ,KACf,OACE,kBAACyQ,GAAA,EAAD,eAAUD,KAAMA,EAAM3P,UAAWD,EAAOoI,UAAc5H,GACpD,kBAACuQ,GAAD,CAAa3B,YAAaA,EAC1B3L,IAAK,8BACLuN,YAAa,CAACzG,eAAcuG,SAAUA,KAK7B,SAAStC,GAAT,GAAsC,IAAfjE,EAAc,EAAdA,YAC9BvK,EAASZ,KADmC,EAEtB4N,KAApB9I,EAF0C,EAE1CA,MAAOO,EAFmC,EAEnCA,SAFmC,EAI1BjI,oBAAS,GAJiB,mBAI3CoT,EAJ2C,KAIrCS,EAJqC,OAU9CjF,KAHOqD,EAPuC,EAOhD9P,QACQ+P,EARwC,EAQhDvH,OARgD,KAShDpI,IAOEwJ,MAHOoG,EAbuC,EAahDhQ,QACQiQ,EAdwC,EAchDzH,OAdgD,EAehDpI,IAGF,GAAI4P,GAAiBF,EACnB,OAAO,kBAACtJ,GAAD,CAAgBxG,SAAS,IAKlC,OACE,yBACEsD,MAAO,CACLpC,WAAY,SACZN,QAAS,OACTC,cAAe,WAGjB,yBAAKoB,IAAG,kBAAasD,EAAM4M,UAAY7O,MAAO,CAAC0L,OAAO,IAAIxN,MAAM,IAAKE,UAAU,aAE/E,kBAACgC,EAAA,EAAD,CAAQtB,MAAM,UAAUuB,QAbT,kBAAM+N,GAAQ,KAa7B,gBAIA,kBAACc,GAAD,CAAsBvB,KAAMA,EAAMR,YAhBlB,kBAAMiB,GAAQ,IAiB5B9F,YAAaA,EAAauG,SAAU5M,EAAM4M,WAE5C,kBAAClP,EAAA,EAAD,CACEC,MAAM,OACNtB,QAAQ,WACRN,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAM+F,cACbnI,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAQuM,YAAanM,QAASrC,EAAEC,OAAO7C,SAE1DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,QACNtB,QAAQ,WACR6B,KAAK,QACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAM4I,SACbhL,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAQyM,SAAUrM,QAASrC,EAAEC,OAAO7C,SAEvDgD,UAAQ,IAGV,kBAACwD,GAAD,CACEC,QAAS1B,EAAM6F,QACfjI,SAAU,SAACC,GAAD,OAAO0C,EAAS,CAAErC,KAAM4B,GAAQ0M,oBAC1C7O,MAAM,YAGR,kBAACD,EAAA,EAAD,CACEC,MAAM,cACNtB,QAAQ,WACRsO,WAAS,EACTC,KAAM,EACN7O,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMsG,qBACb1I,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAQ6M,eAAgBzM,QAASrC,EAAEC,OAAO7C,SAE7DgD,UAAQ,IAGV,kBAACP,EAAA,EAAD,CACEC,MAAM,iBACNtB,QAAQ,WACR6B,KAAK,MACLnC,UAAWD,EAAOiG,OAClB9G,MAAO+E,EAAMuG,eACb3I,SAAU,SAACC,GAAD,OACR0C,EAAS,CAAErC,KAAM4B,GAAQoN,cAAehN,QAASrC,EAAEC,OAAO7C,SAE5DgD,UAAQ,IAGV,yBAAKlC,UAAWD,EAAOuO,eACrB,kBAACtC,GAAD,CACEpK,MAAO,OACPsK,aAAc,SAAChN,GACbsF,EAAS,CAAErC,KAAM4B,GAAQwM,QAASpM,QAASjF,KAE7CwE,QAASiL,EAAOrJ,KAAI,SAACkE,GAAD,MAAW,CAC7B5C,GAAI4C,EAAKC,QACTvK,MAAOsK,EAAKhB,cAEdyD,UAAW,CAAErF,GAAI3C,EAAMwF,WAGzB,kBAACuC,GAAD,CACEpK,MAAO,WACPsK,aAAc,SAAChN,GACbsF,EAAS,CAAErC,KAAM4B,GAAQ2M,YAAavM,QAASjF,KAEjDwE,QAAS+K,EAAWnJ,KAAI,SAACkG,GAAD,MAAe,CACrC5E,GAAI4E,EAASzB,YACb7K,MAAOsM,EAASH,kBAElBY,UAAW,CACTrF,GAAI3C,EAAM8F,iBC1JP,SAASqH,GAAT,GAA2C,IAAhB9G,EAAe,EAAfA,YACxC,OACE,kBAAC,GAAD,CAAcA,YAAaA,GACzB,kBAAC+G,GAAD,CAAW/G,YAAaA,KAK9B,SAAS+G,GAAT,GAAmC,IAAf/G,EAAc,EAAdA,YACZpH,EAAUC,cACTc,EAAS8I,KAAT9I,MACDqC,EAAY,uCAAG,4BAAAnJ,EAAA,yDACDoJ,OAAOC,QACvB,iDAFiB,+EAMbpJ,EAAO,CAAEkN,eANI,SAOI/G,EAAqB,SAPzB,wBAOwCnG,GAPxC,kBAQNS,GARM,wBASjB4I,MAAM,oBACNvD,EAAQG,SAVS,2BAanBoD,MAAM,oBAba,4CAAH,qDAgBZC,EAAY,uCAAG,4BAAAvJ,EAAA,yDACDoJ,OAAOC,QAAQ,mCADd,wDAGbpJ,EAHa,2BAId6G,GAJc,IAKjBqG,gBALiB,iCAQI/G,EAAqB,MARzB,wBAQqCnG,GARrC,kBASNS,GATM,wBAUjB4I,MAAM,oBAVW,2BAanBA,MAAM,oBAba,4CAAH,qDAgBV/H,EHJH,WAAsB,IAAD,EACML,qBAAWwF,IADjB,mBAExB,MAAO,CAAEnF,QAFe,KAENC,WAFM,MGINyQ,GAAZ1Q,QACAI,EHAH,WAAoB,IAAD,EACAT,qBAAWyF,IADX,mBAEtB,MAAO,CAAChF,IAFc,KAETwC,OAFS,MGARgQ,GAARxS,IACR,OAAIJ,EAAgB,kBAACwG,GAAD,CAAgBxG,SAAS,IACzCI,EAAY,kBAACqG,GAAD,CAAeC,OAAQ,CAACtG,KAEtC,oCACE,kBAAC,GAAD,CAAcwL,YAAaA,IAC3B,kBAACzF,GAAD,CAAmBG,QAAQ,SAASC,YAAY,SAC9CH,UAAW4B,EAAc3B,cAAeuB,KC1ChD,IAAMnH,GAAYC,YAAW,CACzBoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,OACPqR,SAAU,UAEZ5J,KAAM,CACJnI,gBAAiBoI,EAAOtF,YACxBxB,MAAO8G,EAAOlI,cACdsD,WAAY,YAIH,SAASwO,GAAT,GAAmD,IAAD,ECjClD,YAGX,IAFAlH,EAED,EAFCA,YACAmH,EACD,EADCA,UAGMxH,EAAc,IAAIC,gBACrBI,GAAaL,EAAaE,OAAO,cAAcG,GAClC,MAAbmH,GAAgCxH,EAAaE,OAAO,YAAasH,GAEpE,IAND,EAQ8BxK,GAAS,MAF7B,+BAA2BgD,IAIpC,MAAO,CAACnL,IAVT,EAQQA,IAEKJ,QAVb,EAQYA,QAESwI,OAVrB,EAQoBA,QDuBUwK,CAAiB,CAACpH,YADc,EAAxBA,YACsBmH,UADE,EAAZA,YAC1C3S,EADsD,EACtDA,IAAIJ,EADkD,EAClDA,QAAQwI,EAD0C,EAC1CA,OACbnH,EAASZ,KACT+D,EAAUC,cAEhB,OAAGzE,EAAgB,kBAAC+C,EAAA,EAAD,CAAkBX,MAAM,YACxChC,EAAY,kBAAC8B,EAAD,SAAa9B,EAAb,KAEX,kBAACgK,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WACpD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,QAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,eAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,aAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,WAKJ,kBAAC4B,GAAA,EAAD,KACGrC,EAAO5B,KAAI,SAACqM,GAAD,OACV,kBAACvI,GAAA,EAAD,CAAU5D,IAAKmM,EAAQC,WACrBvP,QAAU,WACRa,EAAQwG,KAAR,oBAA0BiI,EAAQC,eAGpC,kBAACvI,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzCqI,EAAQE,cAEX,kBAACxI,GAAA,EAAD,CAAWC,MAAM,UAAUqI,EAAQG,qBACnC,kBAACzI,GAAA,EAAD,CAAWC,MAAM,UAAUqI,EAAQF,UAAU,MAAM,MACnD,kBAACpI,GAAA,EAAD,CAAWC,MAAM,UACdqI,EAAQI,cE1DZ,SAASC,KAAkB,IAChCpL,EAAOC,cAAPD,GACR,OACE,kBAAC,EAAD,KACI,kBAAC3D,EAAD,CAAeL,MAAO,aACtB,kBAACwO,GAAD,CAAiB9G,YAAa1D,IAC9B,kBAAC4K,GAAD,CAAiBlH,YAAa1D,KCjBvB,SAASqL,GAAT,GAA6B,IAATvJ,EAAQ,EAARA,MAC/B,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,KAAmBuF,UAAWoH,KAC/C,kBAAC,IAAD,CAAOlF,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,QAAsBuF,UAAWiJ,O,wBCDvD7S,GAAYC,YAAW,CAC3BoI,UAAW,CACTuE,SAAU,IACVzM,QAAS,OACTmQ,IAAK,GACL7P,WAAY,SACZ2C,eAAgB,YAIL,SAAS2P,GAAT,GAIX,IAAD,IAHDC,YAGC,MAHM,EAGN,EAFDC,EAEC,EAFDA,QAEC,IADDC,eACC,SACKtS,EAASZ,KASf,OACE,kBAAC6J,GAAA,EAAD,CAAOhJ,UAAWD,EAAOyH,WACtB2K,EAAO,GACN,kBAAC/P,EAAA,EAAD,CAAQC,QAPQ,WACpB+P,GAAQ,SAACD,GAAD,OAAWA,EAAO,EAAIA,EAAO,EAAI,OAOnC,kBAACG,GAAA,EAAD,CAAmBvP,SAAS,WAGhC,kBAAClC,EAAA,EAAD,CAAYP,QAAQ,MAApB,IAA2B6R,EAAO,GACjCE,GACC,kBAACjQ,EAAA,EAAD,CAAQC,QAhBQ,WACpB+P,GAAQ,SAACD,GAAD,OAAWE,EAAUF,EAAO,EAAIA,OAgBlC,kBAACI,GAAA,EAAD,CAAoBxP,SAAS,YC5BvC,IAAM5D,GAAYC,YAAW,CAC3BoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,OACPqR,SAAU,UAEZ5J,KAAM,CACJnI,gBAAiBC,EAAO6C,YACxBxB,MAAOrB,EAAOC,cACdsD,WAAY,YAmBD,SAASwP,GAAT,GAAuC,IAAD,IAAfC,cAAe,MAAN,GAAM,EAC7C1S,EAASZ,KACT+D,EAAUC,cAEhB,OACE,kBAAC2F,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WAClD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,SAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,UAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,UAKJ,kBAAC4B,GAAA,EAAD,KACGkJ,EAAOnN,KAAI,SAACoN,EAAOnN,GAAR,OACV,kBAAC6D,GAAA,EAAD,CACE5D,IAAKkN,EAAMC,SACXtQ,QAAS,WACPa,EAAQwG,KAAR,kBAAwBgJ,EAAMC,aAGhC,kBAACtJ,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzC/D,EAAQ,GAEX,kBAAC8D,GAAA,EAAD,CAAWC,MAAM,UAAUoJ,EAAME,cACjC,kBAACvJ,GAAA,EAAD,CAAWC,MAAM,UA/C/B,SAAwBuJ,GACtB,SAASC,EAAQC,GACf,OAAIA,EAAI,GAAU,IAAN,OAAWA,GACjB,GAAN,OAAUA,GAGZ,IAAMC,EAAO,IAAIC,KAAKJ,GAChBK,EAAQJ,EAAQE,EAAKG,WAAa,GAClCC,EAAMN,EAAQE,EAAKK,WACnBC,EAAOR,EAAQE,EAAKO,YACpBC,EAAUV,EAAQE,EAAKS,cAE7B,MAAM,GAAN,OAAUH,EAAV,YAAkBE,EAAlB,YAA6BJ,EAA7B,YAAoCF,GAoCrBQ,CAAehB,EAAMiB,sBCxEvB,SAASC,KAAiB,IAAD,EACbrX,mBAAS,GADI,mBAC7B4V,EAD6B,KACxBC,EADwB,OCNzB,YAA+D,IAAtCQ,EAAqC,EAArCA,aAAqC,IAAvBiB,mBAAuB,MAAX,EAAW,EAEnE5J,GAFmE,EAAR6J,MAE7C,IAAI5J,iBACrB0I,GAAc3I,EAAaE,OAAO,eAAeyI,GACjDiB,GAAa5J,EAAaE,OAAO,cAAe0J,GACnD,IALyE,EAMvCE,GAAiB,MAD1C,mCAA+B9J,IACjCnL,EANkE,EAMlEA,IAAIJ,EAN8D,EAM9DA,QAN8D,IAMtDwI,OACnB,MAAO,CAACpI,MAAIJ,UAASwI,YAPoD,MAM7C,GAN6C,GDQvC8M,CAAc,CAACH,YAAa1B,IAAvDrT,EAF6B,EAE7BA,IAAKJ,EAFwB,EAExBA,QAFwB,IAEfwI,cAFe,MAER,GAFQ,IAGN3K,oBAAS,GAHH,mBAG7B8V,EAH6B,KAGpB4B,EAHoB,KASpC,OAJArX,qBAAU,WACN,GAAGsK,EAAO7B,OAAO,GAAI,OAAO4O,GAAW,GACvCA,GAAW,KACZ,CAAC/M,IAEA,oCACI,kBAACgL,GAAD,CAAkBC,KAAMA,EAAMC,QAASA,EAASC,QAASA,IACzD,kBAACnN,GAAD,CAAgBxG,QAASA,IACzB,kBAACyG,GAAD,CAAeC,OAAQ,CAACtG,KACxB,kBAAC0T,GAAD,CAAaC,OAAQvL,KEhBlB,SAASgN,KACpB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQtR,MAAM,WACd,kBAACgR,GAAD,OCPZ,IAAMzU,GAAYC,YAAW,CAC3B+U,MAAO,CAAElS,OAAQ,OAAQ/B,MAAO,YAGnB,SAASkU,GAAT,GAOX,IANFxS,EAMC,EANDA,MACAO,EAKC,EALDA,KACAjD,EAIC,EAJDA,MACA2C,EAGC,EAHDA,SACAK,EAEC,EAFDA,SACG3B,EACF,8DACKR,EAASZ,KAEf,OACE,kBAACkN,GAAA,EAAD,KACE,kBAAC1K,EAAA,EAAD,eACEC,MAAOA,EACPtB,QAAQ,WACR6B,KAAMA,EACNnC,UAAWD,EAAOoU,MAClBjV,MAAOA,EACP2C,SAAUA,EACVK,SAAUA,GACN3B,KCZZ,IAAMpB,GAAYC,YAAW,CAC3BoI,UAAW,CACTC,SAAU,IACVvH,MAAO,MACP+B,OAAQ,IAEVyF,MAAO,CACLxH,MAAO,OACPqR,SAAU,UAEZ5J,KAAM,CACJnI,gBAAiBC,EAAO6C,YACxBxB,MAAOrB,EAAOC,cACdsD,WAAY,YAKD,SAASwP,GAAT,GAA8C,IAAD,IAAtB6B,qBAAsB,MAAN,GAAM,EACpDtU,EAASZ,KACT+D,EAAUC,cAEhB,OACE,kBAAC2F,GAAA,EAAD,CAAgBC,UAAWC,KAAOhJ,UAAWD,EAAOyH,WAClD,kBAACyB,GAAA,EAAD,CAAOC,aAAW,iBAAiBlJ,UAAWD,EAAO2H,OACnD,kBAACyB,GAAA,EAAD,CAAWnJ,UAAWD,EAAO4H,MAC3B,kBAACyB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,SAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,QAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,SAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,YAGA,kBAAC0B,GAAA,EAAD,CAAWC,MAAM,SAAStJ,UAAWD,EAAO4H,MAA5C,WAKJ,kBAAC4B,GAAA,EAAD,KACG8K,EAAc/O,KAAI,SAACgP,EAAc/O,GAAf,OACjB,kBAAC6D,GAAA,EAAD,CACE5D,IAAK8O,EAAaC,gBAClBlS,QAAS,WACPa,EAAQwG,KAAR,oBAA0B4K,EAAa1C,eAGzC,kBAACvI,GAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,MAAML,MAAM,UACzC/D,EAAQ,GAEX,kBAAC8D,GAAA,EAAD,CAAWC,MAAM,UAAUgL,EAAazC,cACxC,kBAACxI,GAAA,EAAD,CAAWC,MAAM,UAAUgL,EAAavC,OACxC,kBAAC1I,GAAA,EAAD,CAAWC,MAAM,UACdgL,EAAaE,UAEhB,kBAACnL,GAAA,EAAD,CAAWC,MAAM,UACdmL,OAAOH,EAAaE,UAAYC,OAAOH,EAAavC,eCxEtD,SAAS2C,GAAT,GAAoC,IAATC,EAAQ,EAARA,KACxC,OACE,oCACE,sCACA,kBAACP,GAAD,CACExS,MAAM,OACNgT,aAAcD,EAAKE,UACnBC,WAAY,CACVC,UAAU,KAGd,kBAACX,GAAD,CACExS,MAAM,aACNgT,aAAcD,EAAKK,cACnBF,WAAY,CACVC,UAAU,KAGd,kBAACX,GAAD,CACExS,MAAM,QACNgT,aAAcD,EAAK9H,SACnBiI,WAAY,CACVC,UAAU,MCvBL,SAASE,GAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,oCACE,yCACA,kBAACd,GAAD,CACEQ,aAAcM,EAAQ1M,UACtB5G,MAAM,OACNkT,WAAY,CACVC,UAAU,KAGd,kBAACX,GAAD,CACEQ,aAAcM,EAAQC,YACtBvT,MAAM,SACNkT,WAAY,CACVC,UAAU,KAGd,kBAACX,GAAD,CACEQ,aAAcM,EAAQE,QACtBxT,MAAM,UACNgN,WAAS,EACTyG,QAAS,EACTP,WAAY,CACVC,UAAU,MChBpB,SAASO,KAA4B,IAAnBjB,EAAkB,uDAAJ,GACtBkB,EAAQlB,EAAcmB,QAAO,SAACD,EAAME,GACvC,IAEMC,EAFQjB,OAAOgB,EAAK1D,OACV0C,OAAOgB,EAAKjB,UAG5B,OADqBC,OAAOc,GACNG,IACvB,GACF,OAAOjB,OAAOc,GAGH,SAASI,GAAT,GAAqC,IAAD,ECpBpC,YAAoC,IAAZhD,EAAW,EAAXA,SAAW,EAEjBoB,GAAiB,MADrC,yCAAqCpB,IAE9C,MAAO,CAAC7T,IAHsC,EAEvCA,IACKJ,QAHkC,EAEnCA,QACUwI,OAHyB,EAE3BA,QDmBY8M,CAAc,CAAErB,SADA,EAAZA,WAC7B7T,EADyC,EACzCA,IAAKJ,EADoC,EACpCA,QAASwI,EAD2B,EAC3BA,OAEtB,OAAIxI,EAAgB,kBAACwG,GAAD,CAAgBxG,QAASA,IACzCI,EAAY,kBAACqG,GAAD,CAAeC,OAAQ,CAACtG,KAGtC,oCACE,kBAAC4V,GAAD,CAAiBC,KAAMzN,EAAOyN,OAC9B,kBAAC,GAAD,CAAmBN,cAAenN,EAAOmN,gBACzC,kBAACD,GAAD,CAAYlV,MAAOoW,GAASpO,EAAOmN,eAAgBzS,MAAM,UACzD,kBAACqT,GAAD,CAAgBC,QAAShO,EAAOgO,WExBvB,SAASU,KAAe,IAC7BhP,EAAOC,cAAPD,GACR,OACE,kBAAC,EAAD,KACI,kBAAC3D,EAAD,CAAeL,MAAO,UACtB,kBAAC+S,GAAD,CAAchD,SAAU/L,KCTjB,SAAS2E,GAAT,GAA4B,IAAT7C,EAAQ,EAARA,MAC9B,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,KAAmBuF,UAAWmL,KAC/C,kBAAC,IAAD,CAAOjJ,OAAK,EAACC,KAAI,UAAKxC,EAAMlF,IAAX,QAAsBuF,UAAW6M,OCA9C,SAASC,KACpB,OAEI,kBAAC,IAAD,CAAQC,SAAS,UACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO7K,OAAK,EAACC,KAAK,IAAInC,UAAW/B,KACjC,kBAAC,IAAD,CAAOkE,KAAM,aAAanC,UAAWpC,KACrC,kBAAC,IAAD,CAAOuE,KAAK,UAAUnC,UAAWiC,KACjC,kBAAC,IAAD,CAAOE,KAAK,UAAUnC,UAAWiC,KACjC,kBAAC,IAAD,CAAOE,KAAK,cAAcnC,UAAWwC,KACrC,kBAAC,IAAD,CAAOL,KAAK,aAAanC,UAAWkJ,KACpC,kBAAC,IAAD,CAAO/G,KAAK,UAAUnC,UAAYgN,OCblD,SAAS5P,KACP,IAAMzH,E1EAGL,qBAAWL,G0ECbM,EAAeF,IAAfE,WAEP,OAAGI,EAAgB,kBAAC+D,EAAD,MACfnE,EACG,kBAACuX,GAAD,MADgB,kBAAC1U,EAAD,MAaV6U,OATf,WACE,OACE,yBAAKhW,UAAW,OACd,kBAAC,GAAD,QCRciW,QACW,cAA7B1P,OAAO2P,SAASC,UAEe,UAA7B5P,OAAO2P,SAASC,UAEhB5P,OAAO2P,SAASC,SAASzN,MACvB,2D,uBCPAR,GAAQkO,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM3O,EAAOtF,aAEfkU,UAAW,CACTD,KAAM3O,EAAOlI,kBAMnB+W,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAA,EAAD,CAAe1O,MAAOA,IACpB,kBAAC1J,EAAD,KACE,kBAAC,GAAD,SAINqY,SAASC,eAAe,SDoGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrY,MAAK,SAAAsY,GACJA,EAAaC,gBAEdtY,OAAM,SAAAuY,GACLrY,QAAQqY,MAAMA,EAAMC,c","file":"static/js/main.9429d5ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopdharan-white.24657495.png\";","module.exports = __webpack_public_path__ + \"static/media/shopdharan.f6198331.png\";","import { useState, useEffect} from 'react'\n\nexport default function useRefreshToken() {\n    const [refreshToken, setRefreshToken] = useState(localStorage.getItem('refreshToken'));\n    useEffect(()=>{\n        localStorage.setItem('refreshToken', refreshToken)\n    },[refreshToken])\n    \n    return [refreshToken,setRefreshToken]\n}\n","import { useState, useEffect} from 'react'\n\nexport default function useAccessToken() {\n    const [accessToken, setAccessToken] = useState(sessionStorage.getItem('accessToken'));\n    useEffect(()=>{\n        sessionStorage.setItem('accessToken', accessToken)\n    },[accessToken])\n    \n    return [accessToken,setAccessToken]\n}\n","export default async function fetchAccessToken(refreshToken){\n    const data = {refreshToken};\n\n    const response = await fetch(\"/api/token\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.accessToken;\n}","import React, { useState, useEffect, useContext } from 'react'\n\nimport useRefreshToken from '../hooks/useRefreshToken';\nimport useAccessToken from '../hooks/useAccessToken';\nimport fetchAccessToken from '../helperFunctions/fetchAccessToken'\nconst loadingContext = React.createContext();\nconst isLoggedInContext = React.createContext();\n\nexport function useLoading(){\n    return useContext(loadingContext);\n\n}\n\nexport function useIsLoggedIn(){\n    const [isLoggedIn, setIsLoggedIn]= useContext(isLoggedInContext);\n    return {isLoggedIn,setIsLoggedIn}\n}\n\nexport function LoginInfo({children}) {\n    const [loading, setLoading] = useState(true);\n    const [isLoggedIn,setIsLoggedIn] = useState(false);\n    const [refreshToken, setRefreshToken] = useRefreshToken();\n    const [accessToken, setAccessToken] = useAccessToken();\n    \n    useEffect(()=>{\n         if(refreshToken==null){\n             setLoading(false)\n             setIsLoggedIn(false)\n             return;\n         }\n         fetchAccessToken(refreshToken)\n            .then((accessToken)=>{\n                setLoading(false);\n                setIsLoggedIn(true);\n                setAccessToken(accessToken);\n            })\n            .catch(err=>{\n                console.log(err);\n                setLoading(false);\n                setIsLoggedIn(false);\n            })\n    },[])\n\n    return (\n        <loadingContext.Provider value={loading}>\n            <isLoggedInContext.Provider value={[isLoggedIn,setIsLoggedIn]}>\n                {children}\n            </isLoggedInContext.Provider>\n        </loadingContext.Provider>\n    )\n}\n","import React from 'react'\nimport COLORS from '../defaults/colors.json'\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    fullscreen:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: COLORS.PRIMARY_WHITE,\n        flex: 1,\n        alignItems: \"center\",\n        minHeight: \"100vh\",\n    }\n}) \nexport default function RedScreen({children}) {\n    const styles = useStyles()\n    return (\n        <div className={styles.fullscreen}> \n             {children}\n        </div>\n    )\n}\n","import React from \"react\";\nimport {makeStyles} from '@material-ui/core'\nimport logoRed from \"../shopdharan.png\";\nimport logoWhite from '../shopdharan-white.png'\n\nconst useStyles = makeStyles({\n  logo:{\n    width:\"80vmin\",\n    padding: 5,\n    objectFit: \"contain\"\n  }\n})\n\nexport default function Logo({variant=\"white\", ...props}) {\n  const styles = useStyles()\n  const logo= (variant.toLowerCase())==\"white\"?logoWhite:logoRed;\n  return <img src={logo} className={styles.logo} {...props} />;\n}\n","import React from 'react'\nimport {Typography} from '@material-ui/core'\n\nexport default function ErrorText({children}) {\n    return (\n        <Typography color=\"primary\">\n            {children}\n        </Typography>\n    )\n}\n","import React, { useState } from \"react\";\nimport { TextField, Button, CircularProgress } from \"@material-ui/core\";\n\nimport {useIsLoggedIn} from '../contexts/LoginInfo'\nimport LightScreen from \"../components/LightScreen\";\nimport Logo from \"../components/Logo\";\nimport ErrorText from '../components/ErrorText'\nimport useRefreshToken from '../hooks/useRefreshToken'\nimport useAccessToken from '../hooks/useAccessToken'\n\nasync function fetchTokens(username, password) {\n  const data = {\n    username: username,\n    password: password,\n  };\n\n  const response = await fetch(\"/api/admin/login\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  if (!response.ok) {\n    throw await response.text();\n  }\n  return await response.json();\n}\n\nexport default function LoginScreen() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState('');\n  const [refreshToken,setRefreshToken] = useRefreshToken();\n  const [accessToken, setAccessToken] = useAccessToken();\n  const {isLoggedIn, setIsLoggedIn} = useIsLoggedIn();\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value);\n  };\n\n  \n  const handleLogin = async () => {\n    try{\n      setErr('')\n      setLoading(true)\n      const {accessToken, refreshToken } = await fetchTokens(username,password);\n      setLoading(false)\n      setRefreshToken(refreshToken);\n      setAccessToken(accessToken);\n      setIsLoggedIn(true)\n    }catch(err){\n      setLoading(false)\n      setErr(err)\n    }\n  };\n\n const ShowLoading = ()=>{\n  if (loading) return <CircularProgress />\n  return null;\n }\n\n const ShowError = ()=>{\n if(err) return <ErrorText>{err}</ErrorText>\n return null;\n }\n\n  return (\n    <LightScreen>\n      <Logo />\n      <ShowLoading />\n      <ShowError />\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        value={username}\n        onChange={handleUsernameInput}\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordInput}\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        required\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        style={{ margin: \"1rem\", width: \"80vmin\" }}\n        onClick={handleLogin}\n      >\n        Login\n      </Button>\n    </LightScreen>\n  );\n}\n","import React from 'react'\nimport COLORS from '../defaults/colors.json'\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    fullscreen:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: COLORS.PRIMARY_RED,\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"100vh\",\n    }\n})\nexport default function RedScreen({children}) {\n    const styles = useStyles()\n    return (\n        <div className={styles.fullscreen}>\n             {children}\n        </div>\n    )\n}\n","import React from \"react\";\nimport logo from \"../shopdharan-white.png\";\n\nexport default function LogoWhite() {\n  return <img src={logo} className={\"logo\"} />;\n}\n","import React from 'react'\nimport {CircularProgress} from '@material-ui/core'\n\nimport RedScreen from '../components/RedScreen'\nimport LogoWhite from '../components/LogoWhite'\n\nexport default function LoadingScreen() {\n    return (\n        <RedScreen>\n            <LogoWhite />\n            <CircularProgress color=\"secondary\" />\n        </RedScreen>\n    )\n}\n","import React from \"react\";\nimport {useHistory} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core'\nimport {ArrowBack} from '@material-ui/icons'\nimport COLORS from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n  nav:{\n    display: \"flex\",\n    minHeight: \"3em\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: \"1em\",\n    backgroundColor: COLORS.PRIMARY_RED,\n    width: \"100%\"\n  },\n  title:{\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    color: COLORS.PRIMARY_WHITE,\n    fontSize: \"25px\",\n    fontWeight: \"bold\",\n  }\n})\nexport default function Navigation({ title=\"Shop Dharan\" }) {\n    const history = useHistory()\n    const styles = useStyles()\n    return (\n    <nav className={styles.nav}>\n     <ArrowBack onClick={history.goBack} color=\"secondary\" fontSize=\"large\"/>\n      <div className={styles.title}>\n          {title}\n      </div>\n    </nav>\n  );\n}\n","export default async function fetchAccessToken(accessToken){\n    const data = {accessToken};\n\n    const response = await fetch(\"/api/validate\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n    if(!response.ok) throw response.statusText;\n    const body = await response.json();\n\n    return body.valid;\n}","import validateAccessToken from \"./validateAccessToken\";\nimport fetchAccessToken from \"./fetchAccessToken\";\n\nexport default async function fetchWithCredentials(method = \"POST\", url, body) {\n  let accessToken = sessionStorage.getItem(\"accessToken\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  const isValid = await validateAccessToken(accessToken);\n  if (!isValid){\n    accessToken = await fetchAccessToken(refreshToken);\n    sessionStorage.setItem(\"accessToken\", accessToken);\n  }\n\n  let options = {\n    method: method,\n    headers: {\n      authorization: `bearer ${accessToken}`,\n      \"content-type\": \"application/json\",\n    },\n    \n  };\n  if(body && method !== 'GET'){\n   options = {...options, body: JSON.stringify(body),} \n  }\n  \n  return await fetch(url,options);\n}\n","import React, { useState, useReducer, useContext, useEffect } from \"react\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\nconst EmployeeContext = React.createContext()\nconst LoadingContext = React.createContext()\nconst ErrorContext = React.createContext()\n\nexport const ACTIONS = {\n    SETALL: \"setall\",\n    SETNAME: \"setname\",\n    SETUSERNAME: \"setusername\",\n    SETEMAIL: \"setemail\",\n    TOGGLEADMIN: \"toggleadmin\",\n};\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.SETALL:\n            return { ...action.payload };\n        case ACTIONS.SETNAME:\n            return { ...state, employee_name: action.payload };\n        case ACTIONS.SETUSERNAME:\n            return { ...state, username: action.payload };\n        case ACTIONS.SETEMAIL:\n            return { ...state, email: action.payload };\n        case ACTIONS.TOGGLEADMIN:\n            return { ...state, is_admin: !state.is_admin };\n        default:\n            return state;\n    }\n}\n\nexport function useEmployeeContext(){\n    const [state,dispatch] = useContext(EmployeeContext)\n    return {state, dispatch}\n}\n\nexport function useLoadingContext(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return {loading, setLoading}\n}\n\nexport function useErrorContext(){\n    const [err,setErr] = useContext(ErrorContext)\n    return {err,setErr}\n}\n\nexport  function EmployeeInfo({ employee_id, children }) {\n    const url = `/api/employees/get?employee_id=${employee_id}`;\n    const [state, dispatch] = useReducer(reducer, {\n        employee_name: \"\",\n        is_admin: false,\n        username: \"\",\n        email: \"\",\n    });\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState(\"\");\n\n    useEffect(() => {\n        const getData = async () => {\n            setLoading(true);\n            const response = await fetchWithCredentials(\"GET\", url);\n            if (!response.ok) throw response.statusText;\n            const data = await response.json();\n            dispatch({ type: ACTIONS.SETALL, payload: data });\n            setLoading(false);\n        };\n\n        getData().catch((err) => {\n            setLoading(false);\n            setErr(err);\n        });\n    }, [url]);\n\n\n    return(\n        <EmployeeContext.Provider value={[state,dispatch]}>\n            <LoadingContext.Provider value={[loading,setLoading]}>\n                <ErrorContext.Provider value={[err,setErr]}>\n                    {children}\n                </ErrorContext.Provider>\n            </LoadingContext.Provider>\n        </EmployeeContext.Provider>\n    );\n}\n","import React from \"react\";\nimport {Button} from \"@material-ui/core\";\n\n\nexport default function CancelAndOkButton({\n  onClickOk,\n  onClickCancel,\n  okLabel=\"Ok\",\n  cancelLabel = \"Cancel\",\n}) {\n  return (\n    <div className=\"button-container\" style={{width:\"100%\"}}>\n      <Button color=\"primary\" variant=\"text\" onClick={onClickCancel}>\n        {cancelLabel}\n      </Button>\n\n      <Button color=\"primary\" variant=\"contained\" onClick={onClickOk}>\n        {okLabel}\n      </Button>\n    </div>\n  );\n}\n","import React from 'react'\nimport {CircularProgress} from '@material-ui/core'\n\nexport default function DisplayLoading({loading}) {\n    if(loading) return <CircularProgress  color=\"primary\"/>\n    return null;\n}\n","import React from 'react'\nimport ErrorText from './ErrorText'\n\nexport default function DisplayErrors({errors=[]}) {\n    if(errors.length>0){\n        return errors.map((err, index)=>(\n            <ErrorText key={index} >\n                {err.toString()}\n            </ErrorText>\n        ))\n    }\n    return null;\n}\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default function CustomSwitch({checked, onChange, label}) {\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={onChange} color=\"primary\"/>}\n        label={label}\n      />\n    </FormGroup>\n  );\n}","import React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport { useEmployeeContext, ACTIONS } from \"../contexts/EmployeeInfo\";\nimport CustomSwitch from \"./CustomSwitch\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n});\n\nexport default function EmployeeForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useEmployeeContext();\n  return (\n    <>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.employee_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETNAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.username}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETUSERNAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"Email\"\n        className={styles.button}\n        value={state.email}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <CustomSwitch\n        label=\"Admin\"\n        checked={state.is_admin}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEADMIN })}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nimport {\n  EmployeeInfo,\n  useErrorContext,\n  useLoadingContext,\n  useEmployeeContext,\n} from \"../contexts/EmployeeInfo\";\n\nimport CancelAndOkButton from \"../components/CancelAndOkButton\";\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport EmployeeForm from \"../components/EmployeeForm\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\n\nexport default function DisplayEmployee({ employee_id }) {\n  return (\n    <EmployeeInfo employee_id={employee_id}>\n      <Wrapper employee_id={employee_id} />\n    </EmployeeInfo>\n  );\n}\n\nfunction Wrapper({ employee_id }) {\n  const { loading } = useLoadingContext();\n  const { err } = useErrorContext();\n  const { state } = useEmployeeContext();\n  const history = useHistory();\n\n  const handleDelete = async () => {\n    const confirmed = window.confirm(\n      \"Are You Sure You Want To Delete this Account?\"\n    );\n    if (!confirmed) return;\n    const url = `/api/employees/delete`;\n    const data = { employee_id };\n    const response = await fetchWithCredentials(\"DELETE\", url, data);\n    if (response.ok) {\n      alert(\"Employee Deleted\");\n      history.goBack();\n      return;\n    }\n    alert(\"Failed To Delete\");\n  };\n\n  const handleUpdate = async () => {\n    const confirmed = window.confirm(\"Are You Sure You Want To Update\");\n    if (!confirmed) return;\n    const data = {\n      ...state,\n      employee_id,\n    };\n    const url = `/api/employees/update`;\n    const response = await fetchWithCredentials(\"PUT\", url, data);\n    if (response.ok) {\n      alert(\"Employee Updated\");\n      return;\n    }\n    alert(\"Failed To Upload\");\n  };\n\n  if (loading) return <DisplayLoading loading={true} />;\n  if (err) return <DisplayErrors errors={[err]} />;\n\n  return (\n    <>\n      <CancelAndOkButton\n        onClickOk={handleUpdate}\n        okLabel=\"Update\"\n        onClickCancel={handleDelete}\n        cancelLabel=\"Delete\"\n      />\n      <EmployeeForm />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useParams} from \"react-router-dom\";\n\n\nimport LightScreen from '../components/LightScreen'\nimport NavigationBar from '../components/NavigationBar'\nimport DisplayEmployee from '../components/DisplayEmployee'\n\n\nexport default function EmployeeScreen() {\n  const { id } = useParams();\n  return (\n    <LightScreen>\n        <NavigationBar title={\"Employee\"}/>\n        <DisplayEmployee employee_id={id}/>\n    </LightScreen>\n  )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function NavLinks() {\n    return (\n        <>\n            <Link to='/employees' className=\"white-text-bold\"> Employees</Link>\n            <Link to='/cities' className=\"white-text-bold\"> Cities</Link>\n            <Link to='/catagories' className=\"white-text-bold\"> Catagories</Link>\n            <Link to='/suppliers' className=\"white-text-bold\"> Suppliers</Link>\n            <Link to='/orders' className=\"white-text-bold\"> Orders</Link>\n            \n        </>\n    )\n}\n","import React from 'react'\n\nimport NavLinks from '../components/NavLinks'\nimport LogoWhite from '../components/LogoWhite'\nimport RedScreen from '../components/RedScreen'\n\nexport default function NavScreen() {\n    return (\n        <RedScreen>\n            <LogoWhite />\n            <NavLinks />\n        </RedScreen>\n    )\n}\n","import { useState, useEffect } from \"react\";\n\nimport useAccessToken from \"./useAccessToken\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport validateAccessToken from \"../helperFunctions/validateAccessToken\";\nimport fetchAccessToken from \"../helperFunctions/fetchAccessToken\";\n\nexport default function useFetch(method = \"GET\", url, body) {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState();\n  const [err, setErr] = useState(\"\");\n  const [accessToken, setAccessToken] = useAccessToken();\n  const [refreshToken] = useRefreshToken();\n\n  useEffect(() => {\n    const validations = async () => {\n      const isValid = await validateAccessToken(accessToken);\n      if (isValid) return;\n      const newAccessToken = await fetchAccessToken(refreshToken);\n      setAccessToken(newAccessToken);\n    };\n\n    const fetchItems = async () => {\n      let options = {\n        method: method,\n        headers: {\n          authorization: `bearer ${accessToken}`,\n          \"content-type\": \"application/json\",\n        },\n      };\n      if (body) {\n        options = { ...options, body: JSON.stringify(body) };\n      }\n      const request = await fetch(url, options);\n      if(!request.ok){\n        setErr(request.statusText)\n        setLoading(false)\n        return;\n      }\n      const result = await request.json();\n\n      setResult(result);\n      setLoading(false);\n    };\n\n    setLoading(true);\n    validations()\n      .then(() => {\n        fetchItems();\n      })\n      .catch((err) => {\n        setErr(err);\n        setLoading(false);\n      });\n  }, [url, body]);\n\n  return { loading, result, err };\n}\n","import React from 'react'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    CircularProgress,\n    Paper,\n    makeStyles,\n  } from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useFetchEmployees from '../hooks/useFetchEmployees'\nimport ErrorText from './ErrorText'\nimport colors from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n    container: {\n      maxWidth: 1000,\n      width: \"90%\",\n      margin: 10,\n    },\n    table: {\n      width: \"100%\",\n    },\n    head: {\n      backgroundColor: colors.PRIMARY_RED,\n      color: colors.PRIMARY_WHITE,\n      fontWeight: \"bolder\",\n    },\n  });\n\nexport default function DisplayEmployees() {\n    const {err,loading,result} = useFetchEmployees()\n    const styles = useStyles()\n    const history = useHistory()\n\n    if(loading) return <CircularProgress color=\"primary\" />\n    if(err) return <ErrorText> {err} </ErrorText>\n    return (\n        <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n          <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Admin\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Username\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Email\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((employee) => (\n              <TableRow key={employee.employee_id} \n                onClick ={()=>{\n                  history.push(`employees/${employee.employee_id}`)\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {employee.employee_name}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {employee.is_admin ? \"True\" : \"False\"}\n                </TableCell>\n                <TableCell align=\"center\">{employee.username}</TableCell>\n                <TableCell align=\"center\">{employee.email}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","export function validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport function validatePassword(password){\n    return ((password).length >= 6)\n}","import React, { useState, useReducer, useContext } from \"react\";\n\nconst EmployeeContext = React.createContext();\nconst ErrorsContext = React.createContext();\nconst LoadingContext = React.createContext();\n\nexport const ACTIONS = {\n  SETEMPLOYEENAME: \"setemployeename\",\n  TOGGLEISADMIN: \"toggleisadmin\",\n  SETUSERNAME: \"setusername\",\n  SETPASSWORD: \"setpassword\",\n  SETREPASSWORD: \"setrepassword\",\n  SETEMAIL: \"setemail\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETEMPLOYEENAME:\n      return { ...state, employee_name: action.payload };\n    case ACTIONS.TOGGLEISADMIN:\n      return { ...state, is_admin: !state.is_admin };\n    case ACTIONS.SETEMAIL:\n      return { ...state, email: action.payload };\n    case ACTIONS.SETUSERNAME:\n      return { ...state, username: action.payload };\n    case ACTIONS.SETPASSWORD:\n      return { ...state, password: action.payload };\n    case ACTIONS.SETREPASSWORD:\n      return { ...state, repassword: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function useEmployeeContext() {\n  const [state, dispatch] = useContext(EmployeeContext);\n  return { state, dispatch };\n}\n\nexport function useLoadingContext() {\n  const [loading, setLoading] = useContext(LoadingContext);\n  return { loading, setLoading };\n}\n\nexport function useErrorsContext() {\n  const [err, setErr] = useContext(ErrorsContext);\n  return { err, setErr };\n}\n\nexport function EmployeeInfo({ children }) {\n  const [state, dispatch] = useReducer(reducer, {\n    employee_name: \"\",\n    is_admin: false,\n    username: \"\",\n    password: \"\",\n    repassword: \"\",\n    email: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState([]);\n\n  return (\n    <EmployeeContext.Provider value={[state, dispatch]}>\n      <ErrorsContext.Provider value={[err, setErr]}>\n        <LoadingContext.Provider value={[loading, setLoading]}>\n          {children}\n        </LoadingContext.Provider>\n      </ErrorsContext.Provider>\n    </EmployeeContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { TextField, makeStyles } from \"@material-ui/core\";\n\nimport CustomSwitch from \"./CustomSwitch\";\n\nimport { ACTIONS, useEmployeeContext } from \"../contexts/AddEmployeeInfo\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function EmployeeForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useEmployeeContext();\n  return (\n    <>\n      <CustomSwitch\n        checked={state.is_admin}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEISADMIN })}\n        label=\"Admin\"\n      />\n\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.employee_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMPLOYEENAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        className={styles.button}\n        value={state.email}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.username}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETUSERNAME, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.password}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Retype Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.repassword}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETREPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\n\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\nimport {\n  validateEmail,\n  validatePassword,\n} from \"../helperFunctions/inputValidations\";\nimport CancelAndOkButton from './CancelAndOkButton'\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport AddEmployeeForm from '../components/AddEmployeeForm';\nimport { EmployeeInfo, useLoadingContext, useErrorsContext,useEmployeeContext } from \"../contexts/AddEmployeeInfo\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    alignItems: \"center\",\n  },\n});\n\nasync function addEmployee(state) {\n  const url = `/api/employees/add`;\n  const body = { ...state };\n  const response = await fetchWithCredentials(\"POST\", url, body);\n  if (response.ok) {\n    return response.ok;\n  }\n  throw await response.text();\n}\n\nfunction validations(employee_data) {\n  let errors = [];\n  if (!validateEmail(employee_data.email))\n    errors = [...errors, \"Invalid Email\"];\n  if (!validatePassword(employee_data.password))\n    errors = [...errors, \"Password should Be Atleast 6 digit long\"];\n  if (employee_data.password !== employee_data.repassword)\n    errors = [...errors, \"Passwords Don't Match\"];\n  return errors;\n}\n\n\nexport default function AddEmployees({ handleClose }) {\n  return (\n    \n      <EmployeeInfo>\n        <Wrapper handleClose={handleClose}/>\n      </EmployeeInfo>\n  \n  );\n}\n\nfunction Wrapper({handleClose}) {\n  const {loading, setLoading} = useLoadingContext();\n  const {err,setErr} = useErrorsContext();\n  const {state} = useEmployeeContext();\n  const styles = useStyles();\n\n  async function handleAddEmployee(){\n      setErr([]);\n      const errors = validations(state);\n      if (errors.length > 0) {\n        setErr([...errors]);\n        return;\n      }\n      try {\n        setLoading(true)\n        const employee_added = await addEmployee(state);\n        setLoading(false)\n        if (employee_added) {\n          handleClose();\n          return alert(\"Employees Added\");\n        }\n        throw \"Failed To Add Employees\";\n      } catch (err) {\n        setLoading(false)\n        setErr([String(err)]);\n      }\n  }\n\n  return (\n    <Paper className={styles.wrapper}>\n      <DisplayLoading loading={loading} />\n      <DisplayErrors errors={err} />\n      <AddEmployeeForm />\n      <CancelAndOkButton okLabel={\"Add Employee\"}\n       onClickOk={handleAddEmployee}\n       cancelLabel={\"Cancel\"}\n       onClickCancel={handleClose}\n      />\n    </Paper>\n  );\n}\n\n","import React,{useState} from \"react\";\nimport {\n  Button,\n  Backdrop,\n  makeStyles\n} from \"@material-ui/core\";\n \nimport { useHistory } from \"react-router-dom\";\n\nimport LightScreen from \"../components/LightScreen\";\n\nimport Navigationbar from \"../components/NavigationBar\";\nimport DisplayEmployees from '../components/DisplayEmployees'\nimport AddEmployees from '../components/AddEmployees'\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nfunction AddEmployee({open, handleClose}){\n  const styles = useStyles()\n  return(\n    <Backdrop open={open} className={styles.backdrop} >\n      <AddEmployees handleClose={handleClose}/>\n    </Backdrop>\n  )\n}\n \nexport default function EmployeesScreen({match}) {\n\n  const history = useHistory();\n  \n  const [ open, setOpen] = useState(false);\n\n  const handleOpen = ()=>{\n    setOpen(true)\n  }\n  const handleClose = ()=>{\n    setOpen(false)\n  }\n\n  const goToAdd = () => {\n    history.push(`${match.url}/add`);\n  };\n\n\n  return (\n    <LightScreen>\n      <Navigationbar title={\"Employees\"} />\n      <AddEmployee open={open} handleClose={handleClose} />\n      <Button color=\"primary\" onClick={handleOpen}>\n        Add New\n      </Button>\n      <DisplayEmployees />\n    </LightScreen>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useFetch(method = \"GET\", url, body) {\n  const [loading, setLoading] = useState(true);\n  const [result, setResult] = useState();\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    const fetchItems = async () => {\n      let options = {\n        method: method,\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      };\n      if (body) {\n        options = { ...options, body: JSON.stringify(body) };\n      }\n      const request = await fetch(url, options);\n      if (!request.ok) {\n        setErr(request.statusText);\n        setLoading(false);\n        return;\n      }\n      const result = await request.json();\n\n      setResult(result);\n      setLoading(false);\n    };\n\n    setLoading(true);\n    fetchItems().catch((err) => {\n      setErr(err);\n      setLoading(false);\n    });\n  }, [url, body]);\n\n  return { loading, result, err };\n}\n","\nimport useFetch from './useFetch'\n\nexport default function useFetchCities() {\n    const url = `/api/cities/getall`;\n    const { loading, result, err } = useFetch(\"GET\", url);\n    \n    return {loading, result, err}\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default  async function addCity(city_name){\n    const url = `/api/cities/add`\n    const response = await fetchWithCredentials('POST',url,{city_name})\n    return response.ok;\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  CircularProgress,\n  Paper,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport colors from \"../defaults/colors.json\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport ErrorText from \"../components/ErrorText\";\nimport addCity from '../helperFunctions/addCity'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: colors.PRIMARY_RED,\n    color: colors.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function CitiesScreen({match}) {\n  const { loading, result, err } = useFetchCities();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleAddCity = async () =>{\n    const city_name = window.prompt(\"City Name\");\n    if(!city_name) return;\n    const success = await addCity(city_name)\n    if(success){\n      alert(\"City Added\")\n      return;\n    }\n    alert(\"Failed To Add City\")\n  }\n\n  const CityTable = () => {\n    return (\n      <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                No.\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                City Name\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((city, index) => (\n              <TableRow\n                key={city.city_id}\n                onClick={() => {\n                  history.push(`${match.url}/${city.city_id}`);\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {index+1}\n                </TableCell>\n                <TableCell align=\"center\">{city.city_name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const Display = () => {\n    if (loading) return <CircularProgress color=\"primary\" />;\n    if (err) return <ErrorText> {err} </ErrorText>;\n    return <CityTable />;\n  };\n  return (\n    <LightScreen>\n      <NavigationBar title=\"Cities\" />\n      <Button color=\"primary\"\n        onClick={handleAddCity}\n      > Add City </Button>\n      <Display />\n    </LightScreen>\n  );\n}\n","import React from 'react'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    CircularProgress,\n    Paper,\n    makeStyles,\n  } from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useFetchSuppliers from '../hooks/useFetchSuppliers'\nimport ErrorText from './ErrorText'\nimport colors from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n    container: {\n      maxWidth: 1000,\n      width: \"90%\",\n      margin: 10,\n    },\n    table: {\n      width: \"100%\",\n    },\n    head: {\n      backgroundColor: colors.PRIMARY_RED,\n      color: colors.PRIMARY_WHITE,\n      fontWeight: \"bolder\",\n    },\n  });\n\nexport default function DisplaySuppliers({visible,supplier_name, catagory_id,city_id}) {\n    const {err,loading,result} = useFetchSuppliers({visible,supplier_name,catagory_id,city_id})\n    const styles = useStyles()\n    const history = useHistory()\n\n    if(loading) return <CircularProgress color=\"primary\" />\n    if(err) return <ErrorText> {err} </ErrorText>\n    return (\n        <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Description\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Number\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Visible\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((supplier) => (\n              <TableRow key={supplier.supplier_id} \n                onClick ={()=>{\n                  history.push(`/suppliers/${supplier.supplier_id}`)\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {supplier.supplier_name}\n                </TableCell>\n                <TableCell align=\"center\">{supplier.supplier_description}</TableCell>\n                <TableCell align=\"center\">{supplier.contact_number}</TableCell>\n                <TableCell align=\"center\">\n                  {supplier.visible ? \"True\" : \"False\"}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchSuppliers({\n    visible,\n    city_id,\n    catagory_id,\n    supplier_name\n}) {\n    \n    const searchParams= new URLSearchParams()\n    if(city_id) searchParams.append('city_id',city_id)\n    if(visible != null || undefined) searchParams.append('visible', visible)\n    if(catagory_id) searchParams.append('catagory_id', catagory_id)\n    if(supplier_name) searchParams.append('supplier_name', supplier_name)\n    \n    const url = `/api/suppliers/getall?${searchParams}`\n\n    const {err,loading,result} = useFetch('GET',url)\n    \n    return {err,loading,result}\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function deleteCity(city_id){\n    const url = `/api/cities/delete`\n    const response = await fetchWithCredentials('DELETE', url, {city_id})\n    return response.ok;\n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function updateCity(city_id, city_name){\n    const url = '/api/cities/update'\n    const response = await fetchWithCredentials('PUT',url,{city_id,city_name})\n    return response.ok\n}","import React,{useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\nimport {CircularProgress, TextField,makeStyles, Button} from '@material-ui/core'\nimport LightScreen from '../components/LightScreen'\nimport ErrorText from '../components/ErrorText'\nimport NavigationBar from '../components/NavigationBar'\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport DisplaySuppliers from '../components/DisplaySuppliers'\nimport deleteCity from '../helperFunctions/deleteCity'\nimport updateCity from '../helperFunctions/updateCity'\n\nconst useStyles = makeStyles({\n    button: { margin: \"1rem\", width: \"80vmin\" },\n  });\n\nexport default function CityScreen() {\n    const {id} = useParams()\n    const url = `/api/cities/get?city_id=${id}`\n    const styles = useStyles()\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState('');\n    const [name, setName] = useState('');\n    const [title, setTitle] = useState('City')\n    const history = useHistory()\n\n    useEffect(()=>{\n        const getData =  async () =>{\n            setLoading(true);\n            const response = await fetchWithCredentials('GET', url);\n            const data = await response.json()\n            setName(data.city_name);\n            setLoading(false)\n            setTitle(data.city_name)\n        }\n\n        getData()\n            .catch(err=> setErr(err))\n    },[])\n    \n    const CityInfo = ()=>{\n        const handleName = (e)=>{\n            setName(e.target.value)\n        }\n        \n        const handleDelete = async ()=>{\n            const confirmed = window.confirm(\"Are You Sure You Want To Delete This City?\")\n            if(!confirmed) return;\n            const deleted = await deleteCity(id);\n            if(deleted){\n                window.alert(\"City Deleted\")\n                history.goBack()\n                return;\n            }\n            window.alert(\"Failed to Delete\")\n        }\n\n        const handleUpdate = async ()=>{\n            const confirmed = window.confirm('Are You Sure You Want To Update');\n            if(!confirmed) return;\n            const updated = await updateCity(id,name);\n            if(updated){\n                window.alert(\"City Updated\")\n                history.goBack()\n                return;\n            }\n            window.alert('Failed To Update')\n        }\n        return(\n\n            <div className=\"button-container\">\n                \n            <Button color=\"primary\"\n                onClick={handleDelete}\n            >\n                Delete\n            </Button>\n\n            <TextField value={name}\n            label=\"Name\"\n            variant=\"outlined\"\n            className={styles.button}\n            value={name}\n            autoFocus={true}\n            onChange={handleName}\n            required\n            />\n\n            <Button color=\"primary\" variant=\"contained\"\n                onClick = {handleUpdate}\n            >\n                Update\n            </Button>\n            </div>\n        )\n    }\n\n    const Display = ()=>{\n        if(loading) return <CircularProgress color=\"primary\" />\n        if(err) return <ErrorText> {err} </ErrorText> \n        return <CityInfo />\n    }\n\n    return(\n        <LightScreen>\n            <NavigationBar title={title} />\n            <Display />\n            <h2> Suppliers </h2>\n            <DisplaySuppliers city_id={id} />\n        </LightScreen>\n    )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport CitiesScreen from '../screens/CitiesScreen'\nimport CityScreen from '../screens/CityScreen'\n\nexport default function City({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={CitiesScreen}/>\n           <Route exact path={`${match.url}/:id`} component={CityScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchCatagories(){\n    const url = `/api/catagories/getall`;\n    const { loading, result, err } = useFetch(\"GET\", url);\n    return {loading, result, err} \n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default  async function addCatagory(catagory_name){\n    const url = `/api/catagories/add`\n    const response = await fetchWithCredentials('POST',url,{catagory_name})\n    return response.ok;\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  CircularProgress,\n  Paper,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport colors from \"../defaults/colors.json\";\nimport LightScreen from \"../components/LightScreen\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport ErrorText from \"../components/ErrorText\";\nimport addCatagory from '../helperFunctions/addCatagory'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n  },\n  head: {\n    backgroundColor: colors.PRIMARY_RED,\n    color: colors.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nexport default function CitiesScreen({match}) {\n  const { loading, result, err } = useFetchCatagories();\n  const styles = useStyles();\n  const history = useHistory();\n\n  const handleAddCatagory = async () =>{\n    const catagory_name = window.prompt(\"Catagory Name\");\n    if(!catagory_name) return;\n    const success = await addCatagory(catagory_name)\n    if(success){\n      alert(\"Catagory Added\")\n      return;\n    }\n    alert(\"Failed To Add Catagory\")\n  }\n\n  const Catagory = () => {\n    return (\n      <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"employee table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                No.\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Catagory Name\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((catagory, index) => (\n              <TableRow\n                key={catagory.catagory_id}\n                onClick={() => {\n                  history.push(`${match.url}/${catagory.catagory_id}`);\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {index+1}\n                </TableCell>\n                <TableCell align=\"center\">{catagory.catagory_name}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const Display = () => {\n    if (loading) return <CircularProgress color=\"primary\" />;\n    if (err) return <ErrorText> {err} </ErrorText>;\n    return <Catagory />;\n  };\n  return (\n    <LightScreen>\n      <NavigationBar title=\"Catagories\" />\n      <Button color=\"primary\"\n        onClick={handleAddCatagory}\n      > Add Catagory </Button>\n      <Display />\n    </LightScreen>\n  );\n}\n","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function deleteCity(catagory_id){\n    const url = `/api/catagories/delete`\n    const response = await fetchWithCredentials('DELETE', url, {catagory_id})\n    return response.ok;\n}","import fetchWithCredentials from './fetchWithCredentials'\n\nexport default async function updateCity(catagory_id, catagory_name){\n    const url = '/api/catagories/update'\n    const response = await fetchWithCredentials('PUT',url,{catagory_id,catagory_name})\n    return response.ok\n}","import React,{useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\nimport {CircularProgress, TextField,makeStyles, Button} from '@material-ui/core'\nimport LightScreen from '../components/LightScreen'\nimport ErrorText from '../components/ErrorText'\nimport NavigationBar from '../components/NavigationBar'\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport DisplaySuppliers from '../components/DisplaySuppliers'\nimport deleteCatagory from '../helperFunctions/deleteCatagory'\nimport updateCatagory from '../helperFunctions/updateCatagory'\n\nconst useStyles = makeStyles({\n    button: { margin: \"1rem\", width: \"80vmin\" },\n  });\n\nexport default function CityScreen() {\n    const {id} = useParams()\n    const url = `/api/catagories/get?catagory_id=${id}`\n    const styles = useStyles()\n\n    const [loading, setLoading] = useState(false);\n    const [err, setErr] = useState('');\n    const [name, setName] = useState('');\n    const [title, setTitle] = useState('Catagory')\n    const history = useHistory()\n\n    useEffect(()=>{\n        const getData =  async () =>{\n            setLoading(true);\n            const response = await fetchWithCredentials('GET', url);\n            const data = await response.json()\n            setName(data.catagory_name);\n            setLoading(false)\n            setTitle(data.catagory_name)\n        }\n\n        getData()\n            .catch(err=> setErr(err))\n    },[])\n    \n    const CityInfo = ()=>{\n        const handleName = (e)=>{\n            setName(e.target.value)\n        }\n        \n        const handleDelete = async ()=>{\n            const confirmed = window.confirm(\"Are You Sure You Want To Delete This Catagory?\")\n            if(!confirmed) return;\n            const deleted = await deleteCatagory(id);\n            if(deleted){\n                window.alert(\"Catagory Deleted\")\n                history.goBack()\n                return;\n            }\n            window.alert(\"Failed to Delete\")\n        }\n\n        const handleUpdate = async ()=>{\n            const confirmed = window.confirm('Are You Sure You Want To Update');\n            if(!confirmed) return;\n            const updated = await updateCatagory(id,name);\n            if(updated){\n                window.alert(\"Catagory Updated\")\n                history.goBack()\n                return;\n            }\n            window.alert('Failed To Update')\n        }\n        return(\n\n            <div className=\"button-container\">\n                \n            <Button color=\"primary\"\n                onClick={handleDelete}\n            >\n                Delete\n            </Button>\n\n            <TextField value={name}\n            label=\"Name\"\n            variant=\"outlined\"\n            className={styles.button}\n            value={name}\n            autoFocus={true}\n            onChange={handleName}\n            required\n            />\n\n            <Button color=\"primary\" variant=\"contained\"\n                onClick = {handleUpdate}\n            >\n                Update\n            </Button>\n            </div>\n        )\n    }\n\n    const Display = ()=>{\n        if(loading) return <CircularProgress color=\"primary\" />\n        if(err) return <ErrorText> {err} </ErrorText> \n        return <CityInfo />\n    }\n\n    return(\n        <LightScreen>\n            <NavigationBar title={title} />\n            <Display />\n            <h2> Suppliers </h2>\n            <DisplaySuppliers catagory_id={id} />\n        </LightScreen>\n    )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport CatagoriesScreen from '../screens/CatagoriesScreen'\nimport CatagoryScreen from '../screens/CatagoryScreen'\n\nexport default function Catagory({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={CatagoriesScreen}/>\n           <Route exact path={`${match.url}/:id`} component={CatagoryScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import React,{useState, useEffect} from \"react\";\nimport {\n  Select,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function CustomSelect({\n  label,\n  options = [],\n  selection = {value: \"All\"},\n  setSelection,\n}) {\n  const styles = useStyles();\n  const [currentValue, setCurrentValue] = useState(selection.id)\n  useEffect(()=>{\n    setSelection(selection.id)\n  },[])\n  return (\n    <FormControl className={styles.formControl}>\n      <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n      <Select\n        labelId={label}\n        value={currentValue}\n        onChange={(e) => {\n          setCurrentValue(e.target.value)\n          setSelection(e.target.value)}}\n      >\n        \n        {selection.id?null:<MenuItem value={selection.id}>{String(selection.value)}</MenuItem>}\n        {options.map((option) => (\n          <MenuItem key={option.id} value={option.id}>{String(option.value)}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React, {useState, useContext, useReducer} from \"react\";\n\nconst SupplierContext = React.createContext();\nconst FileContext = React.createContext()\nconst LoadingContext = React.createContext();\nconst ErrorContext = React.createContext()\n\nexport const ACTIONS = {\n  SETSUPPLIER: \"supplier\",\n  SETCITY: \"city\",\n  SETEMAIL: \"email\",\n  SETDESCRIPTION: \"description\",\n  TOGGLEVISIBLITY: \"togglevisibility\",\n  SETPASSWORD: \"password\",\n  SETREPASSWORD: \"repassword\",\n  SETCATAGORY: \"catagory\",\n  SETCONTACTNUM: \"contact\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETSUPPLIER:\n      return { ...state, supplier_name: action.payload };\n    case ACTIONS.SETCITY:\n      return { ...state, city_id: action.payload };\n    case ACTIONS.SETEMAIL:\n      return { ...state, email_id: action.payload };\n    case ACTIONS.TOGGLEVISIBLITY:\n      return { ...state, visible: !state.visible };\n    case ACTIONS.SETPASSWORD:\n      return { ...state, password: action.payload };\n    case ACTIONS.SETDESCRIPTION:\n      return { ...state, supplier_description: action.payload };\n    case ACTIONS.SETREPASSWORD:\n      return { ...state, repassword: action.payload };\n    case ACTIONS.SETCATAGORY:\n      return { ...state, catagory_id: action.payload };\n    case ACTIONS.SETCONTACTNUM:\n      return { ...state, contact_number: action.payload };\n    default:\n      return state;\n  }\n}\n\n\nexport function useSupplier(){\n    const [state,dispatch] = useContext(SupplierContext)\n    return {state,dispatch}\n}\n\nexport function useErrors(){\n    const [err, setErr] = useContext(ErrorContext)\n    return {err, setErr};\n}\n\nexport function  useLoading(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return {loading,setLoading}\n}\n\nexport function useFile(){\n  const [file,setFile] = useContext(FileContext)\n  return {file, setFile}\n}\n\nexport function SupplierInfo({children}) {\n  const [state, dispatch] = useReducer(reducer, {\n    supplier_name: \"\",\n    city_id: \"\",\n    email_id: \"\",\n    supplier_description: \"\",\n    visible: false,\n    password: \"\",\n    repassword: \"\",\n    catagory_id: \"\",\n    contact_number: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState([]);\n  const [file,setFile] = useState()\n  return(\n      <SupplierContext.Provider value={[state,dispatch]}>\n        <ErrorContext.Provider value={[err,setErr]}>\n            <LoadingContext.Provider value={[loading,setLoading]}>\n              <FileContext.Provider value={[file,setFile]}>\n                {children}\n              </FileContext.Provider>\n            </LoadingContext.Provider>\n        </ErrorContext.Provider>\n      </SupplierContext.Provider>\n  );\n}\n","import validateAccessToken from \"./validateAccessToken\";\nimport fetchAccessToken from \"./fetchAccessToken\";\n\nexport default async function uploadWithCredentials(method=\"POST\", url, object){\n    let accessToken = sessionStorage.getItem(\"accessToken\");\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n  \n    const isValid = await validateAccessToken(accessToken);\n    if (!isValid){\n      accessToken = await fetchAccessToken(refreshToken);\n      sessionStorage.setItem(\"accessToken\", accessToken);\n    }\n  \n    let body = new FormData()\n\n    for(const key in object){\n        body.append(key.toString(), object[key])\n    }\n\n    for (const value of body.values()) {\n        console.log(value); \n     }\n  \n    return await fetch(url,{\n        method: method,\n        headers: {\n          authorization: `bearer ${accessToken}`,\n          // 'content-type': 'application/x-www-form-urlencoded',\n        },\n        body: body\n    })\n}","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nexport default function AddImage({ url, setFile }) {\n  const [display, setDisplay] = useState(url);\n\n  const handleDelete = () => {\n    setDisplay();\n    setFile()\n  };\n  return (\n    <>\n      {display && (\n        <img\n          src={display}\n          style={{ height: 200, width: 300, objectFit: \"cover\" }}\n          alt=\"Logo\"\n        />\n      )}\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyItems: \"center\",\n          justifyContent: \"space-evenly\",\n          width: \"90%\",\n        }}\n      >\n        {display && (\n          <Button onClick={handleDelete} color=\"primary\">\n            Remove\n          </Button>\n        )}\n        <Button variant=\"contained\" color=\"primary\">\n          <label for=\"file\" id=\"upload\">\n            Add Photo\n          </label>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"file\"\n          accept=\".jpg,.jpeg,.webp,.png\"\n          onChange={(e) => {\n            const photo = e.target.files[0];\n            setDisplay(URL.createObjectURL(photo));\n            setFile(photo)\n          }}\n          hidden\n        />\n      </div>\n    </>\n  );\n}\n","import { useSupplier, ACTIONS, useFile } from \"../contexts/AddSupplierInfo\";\n\nimport React from \"react\";\nimport { TextField, makeStyles, Input } from \"@material-ui/core\";\n\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport CustomSelect from \"./CustomSelect\";\nimport CustomSwitch from \"./CustomSwitch\";\nimport DisplayLoading from './DisplayLoading'\nimport AddImage from '../components/AddImage'\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    paddingBottom: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  fullcontainer:{\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\"\n  }\n});\n\nexport default function SupplierForm() {\n  const styles = useStyles();\n  const { state, dispatch } = useSupplier();\n  const {file,setFile} = useFile() \n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  if (citiesloading || catagoryloading) return <DisplayLoading loading={true}/>\n\n  return (\n    <>\n      <CustomSwitch\n        checked={state.visible}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEVISIBLITY })}\n        label=\"Visible\"\n      />\n      <AddImage \n        file= {file}\n        setFile={setFile}\n      />\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.supplier_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETSUPPLIER, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        className={styles.button}\n        value={state.email_id}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Description\"\n        variant=\"outlined\"\n        multiline\n        rows={5}\n        className={styles.button}\n        value={state.supplier_description}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETDESCRIPTION, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.password}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Retype Password\"\n        variant=\"outlined\"\n        type=\"password\"\n        className={styles.button}\n        value={state.repassword}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETREPASSWORD, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Contact Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        className={styles.button}\n        value={state.contact_number}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETCONTACTNUM, payload: e.target.value })\n        }\n        required\n      />\n\n    <div className={styles.fullcontainer}>\n      <CustomSelect\n        label={\"City\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCITY, payload: value });\n        }}\n        options={cities.map((city) => ({\n          id: city.city_id,\n          value: city.city_name,\n        }))}\n        selection={{ id: cities[0].city_id, value: cities[0].city_name }}\n      />\n\n      <CustomSelect\n        label={\"Catagory\"}\n        setSelection={(value) => {\n          dispatch({ type: ACTIONS.SETCATAGORY, payload: value });\n        }}\n        options={catagories.map((catagory) => ({\n          id: catagory.catagory_id,\n          value: catagory.catagory_name,\n        }))}\n        selection={{\n          id: catagories[0].catagory_id,\n          value: catagories[0].catagory_name,\n        }}\n      />\n    </div>\n    </>\n  );\n}\n","import React, { useReducer, useState } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\n\nimport {\n  SupplierInfo,\n  useLoading,\n  useErrors,\n  useSupplier,\n  useFile\n} from \"../contexts/AddSupplierInfo\";\n\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\nimport uploadFilesWithCredentials from '../helperFunctions/uploadFilesWithCredentials'\nimport {\n  validateEmail,\n  validatePassword,\n} from \"../helperFunctions/inputValidations\";\n\nimport CancelAndOk from \"../components/CancelAndOkButton\";\nimport DisplayLoading from \"./DisplayLoading\";\nimport DisplayErrors from \"./DisplayErrors\";\nimport AddSupplierForm from \"./AddSupplierForm\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  inside: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0.5em\",\n    alignItems: \"center\",\n    padding: \"0.5em\",\n  },\n});\n\nasync function addSupplier(state) {\n  const url = `/api/suppliers/add`;\n  const body = { ...state };\n  // const response = await fetchWithCredentials(\"POST\", url, body);\n  const response = await uploadFilesWithCredentials(\"POST\",url,body)\n  if (response.ok) {\n    return response.ok;\n  }\n  throw await response.text();\n}\n\nfunction validations(supplier_data) {\n  let errors = [];\n  if (!validateEmail(supplier_data.email_id))\n    errors = [...errors, \"Invalid Email\"];\n  if (!validatePassword(supplier_data.password))\n    errors = [...errors, \"Password should Be Atleast 6 digit long\"];\n  if (supplier_data.password !== supplier_data.repassword)\n    errors = [...errors, \"Passwords Don't Match\"];\n  return errors;\n}\n\nexport default function AddSupplier({ handleClose }) {\n  return (\n    <SupplierInfo>\n      <Wrapper handleClose={handleClose} />\n    </SupplierInfo>\n  );\n}\n\nfunction Wrapper({ handleClose }) {\n  const styles = useStyles();\n  const { state } = useSupplier();\n  const { loading, setLoading } = useLoading();\n  const { err, setErr } = useErrors();\n  const {file} = useFile()\n  const handleAddSupplier = async () => {\n    setErr([]);\n    const errors = validations(state);\n    if (errors.length > 0) {\n      setErr([...errors]);\n      return;\n    }\n    try {\n      setLoading(true);\n      const supplier_added = await addSupplier({...state,file});\n      setLoading(false);\n      if (supplier_added) {\n        handleClose();\n        return alert(\"Suppliers Added\");\n      }\n      throw \"Failed To Add Suppliers\";\n    } catch (err) {\n      setLoading(false);\n      setErr([String(err)]);\n    }\n  };\n\n  return (\n    <Paper className={styles.wrapper}>\n      <div className={styles.inside}>\n        <DisplayLoading loading={loading} />\n        <DisplayErrors errors={err} />\n        <AddSupplierForm />\n        <CancelAndOk\n          okLabel={\"Add Supplier\"}\n          onClickOk={handleAddSupplier}\n          cancelLabel={\"Cancel\"}\n          onClickCancel={handleClose}\n        />\n      </div>\n    </Paper>\n  );\n}\n","import React, { useReducer, useState } from \"react\";\n\nimport {\n  CircularProgress,\n  TextField,\n  Button,\n  makeStyles,\n  Backdrop,\n} from \"@material-ui/core\";\n\nimport CustomSelect from \"../components/CustomSelect\";\nimport ErrorText from \"../components/ErrorText\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport LightScreen from \"../components/LightScreen\";\nimport DisplaySuppliers from \"../components/DisplaySuppliers\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport AddSupplier from \"../components/AddSupplier\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    gap: \"1em\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n \nfunction AddSuppliers({ open, handleClose }) {\n  const styles = useStyles();\n  return (\n    <Backdrop open={open} className={styles.backdrop}>\n      <AddSupplier handleClose={handleClose} />\n    </Backdrop>\n  );\n}\n\nconst ACTION = {\n  SETVISIBILITY: \"setvisibility\",\n  SETSUPPLIERNAME: \"setsuppliername\",\n  SETCATAGORY: \"setcatagory\",\n  SETCITY: \"setcity\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTION.SETVISIBILITY:\n      return { ...state, visible: action.payload };\n    case ACTION.SETSUPPLIERNAME:\n      return { ...state, supplier_name: action.payload };\n    case ACTION.SETCATAGORY:\n      return { ...state, catagory_id: action.payload };\n    case ACTION.SETCITY:\n      return { ...state, city_id: action.payload };\n    default:\n      return state;\n  }\n}\n\nfunction SelectOptions({ state, dispatch }) {\n  const styles = useStyles();\n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  const [search, setSearch] = useState(\"\");\n\n  if (catagoryloading || citiesloading)\n    return <CircularProgress color=\"primary\" />;\n  if (catagorieserr || citiesserr)\n    return <ErrorText> Something Went Wrong </ErrorText>;\n\n  return (\n    <div className={styles.wrapper}>\n      <CustomSelect\n        label=\"City\"\n        options={{value: \"All\"},cities.map((city) => ({\n          id: city.city_id,\n          value: city.city_name,\n        }))}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETCITY, payload: value })\n        }\n      />\n      <CustomSelect\n        label=\"Catagory\"\n        options={{value: \"All\"},catagories.map((catagory) => ({\n          id: catagory.catagory_id,\n          value: catagory.catagory_name,\n        }))}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETCATAGORY, payload: value })\n        }\n      />\n      <CustomSelect\n        label=\"Visible\"\n        options={[\n          { id: true, value: \"True\" },\n          { id: false, value: \"False\" },\n        ]}\n        setSelection={(value) =>\n          dispatch({ type: ACTION.SETVISIBILITY, payload: value })\n        }\n      />\n      <div className={styles.wrapper}>\n        <TextField\n          variant=\"outlined\"\n          value={search}\n          label=\"Name\"\n          onChange={(e) =>\n            //   dispatch({ type: ACTION.SETSUPPLIERNAME, payload: e.target.value })\n            setSearch(e.target.value)\n          }\n          type=\"search\"\n        />\n        <Button\n          color=\"primary\"\n          onClick={() =>\n            dispatch({ type: ACTION.SETSUPPLIERNAME, payload: search })\n          }\n        >\n          Search\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function SuppliersScreen() {\n  const [state, dispatch] = useReducer(reducer, {\n    visible: null,\n    supplier_name: \"\",\n    catagory_id: \"\",\n    city_id: \"\",\n  });\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <LightScreen>\n      <NavigationBar />\n      <SelectOptions state={state} dispatch={dispatch} />\n      <AddSuppliers open={open} handleClose={handleClose} />\n      <Button color=\"primary\" onClick={handleOpen}>\n        Add New\n      </Button>\n      <DisplaySuppliers\n        visible={state.visible}\n        supplier_name={state.supplier_name}\n        catagory_id={state.catagory_id}\n        city_id={state.city_id}\n      />\n    </LightScreen>\n  );\n}\n","import React, { useContext, useState, useReducer, useEffect } from \"react\";\nimport fetchWithCredentials from \"../helperFunctions/fetchWithCredentials\";\n\n\nconst SupplierContext = React.createContext();\nconst LoadingContext = React.createContext();\nconst ErrorContext = React.createContext();\n\n\nexport const ACTIONS = {\n  SETALL: \"setall\",\n  SETSUPPLIER: \"setsupplier\",\n  SETCITY: \"setcity\",\n  SETEMAIL: \"setemail\",\n  TOGGLEVISIBILITY: \"togglevisible\",\n  SETCATAGORY: \"setcatagory\",\n  SETCONTACT: \"setcontact\",\n  SETDESCRIPTION: \"setdescription\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SETALL:\n      return { ...action.payload };\n    case ACTIONS.SETSUPPLIER:\n        return {...state, supplier_name: action.payload}\n    case ACTIONS.SETCITY:\n        return {...state,city_id: action.payload}\n    case ACTIONS.SETEMAIL:\n        return {...state, email_id: action.payload}\n    case ACTIONS.TOGGLEVISIBILITY:\n        return {...state, visible: !state.visible}\n    case ACTIONS.SETDESCRIPTION:\n        return{...state, supplier_description: action.payload}\n    case ACTIONS.SETCATAGORY:\n        return {...state, catagory_id: action.payload}\n    case ACTIONS.SETCONTACT:\n        return {...state, contact_number: action.payload}\n    default:\n        return state\n  }\n}\n\nexport function useSupplier(){\n    const [state, dispatch] = useContext(SupplierContext)\n    return {state, dispatch}\n}\n\nexport function useLoading(){\n    const [loading, setLoading] = useContext(LoadingContext)\n    return { loading, setLoading}\n}\n\nexport function useError(){\n    const [err, setErr] = useContext(ErrorContext)\n    return {err, setErr}\n}\n\nexport function SupplierInfo({ supplier_id, children }) {\n  const url = `/api/suppliers/get?supplier_id=${supplier_id}`;\n  const [state, dispatch] = useReducer(reducer, {\n    supplier_name: \"\",\n    image_id: \"\",\n    city_id: \"\",\n    email_id: \"\",\n    supplier_description: \"\",\n    visible: true,\n    catagory_id: \"\",\n    contact_number: \"\",\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const response = await fetchWithCredentials(\"GET\", url);\n      if(!response.ok) throw response.statusText;\n      const data = await response.json();\n      dispatch({ type: ACTIONS.SETALL, payload: data });\n      setLoading(false);\n    };\n\n    getData().catch((err) => {\n      setLoading(false);\n      setErr(err);\n    });\n  },[supplier_id]);\n\n  return(\n      <SupplierContext.Provider value={[state,dispatch]}>\n        <LoadingContext.Provider value={[loading,setLoading]}>\n            <ErrorContext.Provider value={[err,setErr]}>\n                {children}\n            </ErrorContext.Provider>\n        </LoadingContext.Provider>\n      </SupplierContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles, Paper } from \"@material-ui/core\";\nimport AddPhoto from \"./AddImage\";\n\nimport CancelAndOkButton from \"../components/CancelAndOkButton\";\nimport uploadFilesWithCredentials from \"../helperFunctions/uploadFilesWithCredentials\";\n\nconst useStyles = makeStyles({\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    alignItems: \"center\",\n    gap: \"1em\",\n  },\n\n});\n\nexport default function UpdatePhoto({\n  url,\n  handleClose = () => {},\n  object_info = {},\n  image_id,\n}) {\n  const styles = useStyles();\n  const [file, setFile] = useState();\n  const imageUrl = `/images/${image_id}`\n  const handleUpdatePhoto = async () => {\n    const response = await uploadFilesWithCredentials(\"PUT\", url, {\n      file,\n      ...object_info,\n    });\n    if (!response.ok) return alert(await response.text());\n    alert(\"photo updated\");\n    handleClose();\n  };\n\n  return (\n    <Paper className={styles.wrapper}>\n      <AddPhoto setFile={setFile} url={imageUrl}/>\n      <CancelAndOkButton\n        okLabel={\"Update\"}\n        onClickOk={handleUpdatePhoto}\n        cancelLabel={\"Cancel\"}\n        onClickCancel={handleClose}\n      />\n    </Paper>\n  );\n}\n","import { ACTIONS, useSupplier } from \"../contexts/SupplierInfo\";\n\nimport React, { useState } from \"react\";\nimport { TextField, makeStyles, Button, Backdrop } from \"@material-ui/core\";\n\nimport useFetchCities from \"../hooks/useFetchCities\";\nimport useFetchCatagories from \"../hooks/useFetchCatagories\";\nimport CustomSelect from \"./CustomSelect\";\nimport CustomSwitch from \"./CustomSwitch\";\nimport DisplayLoading from \"./DisplayLoading\";\nimport UpdatePhoto from \"./UpdatePhoto\";\n\nconst useStyles = makeStyles((theme) => ( {\n  button: { margin: \"1rem\", width: \"80vmin\" },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em\",\n    paddingBottom: \"1em\",\n    height: \"80%\",\n    alignItems: \"center\",\n    overflowY: \"scroll\",\n  },\n  fullcontainer: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nfunction UpdatePhotoContainer({ open, handleClose, supplier_id, image_id, ...props }) {\n  const styles = useStyles();\n  return (\n    <Backdrop open={open} className={styles.backdrop} {...props} >\n      <UpdatePhoto handleClose={handleClose}\n      url={'/api/suppliers/update/photo'}\n      object_info={{supplier_id}} image_id={image_id}/>\n    </Backdrop>\n  );\n}\n\nexport default function SupplierForm({supplier_id}) {\n  const styles = useStyles();\n  const { state, dispatch } = useSupplier();\n\n  const [open, setOpen] = useState(false);\n\n  const {\n    loading: catagoryloading,\n    result: catagories,\n    err: catagorieserr,\n  } = useFetchCatagories();\n\n  const {\n    loading: citiesloading,\n    result: cities,\n    err: citiesserr,\n  } = useFetchCities();\n\n  if (citiesloading || catagoryloading)\n    return <DisplayLoading loading={true} />;\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div\n      style={{\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <img src={`/images/${state.image_id}`} style={{height:200,width:300, objectFit:\"contain\"}}/>\n\n      <Button color=\"primary\" onClick={handleOpen}>\n        Update Photo\n      </Button>\n\n      <UpdatePhotoContainer open={open} handleClose={handleClose}\n        supplier_id={supplier_id} image_id={state.image_id}\n      />\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        className={styles.button}\n        value={state.supplier_name}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETSUPPLIER, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        type=\"email\"\n        className={styles.button}\n        value={state.email_id}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETEMAIL, payload: e.target.value })\n        }\n        required\n      />\n\n      <CustomSwitch\n        checked={state.visible}\n        onChange={(e) => dispatch({ type: ACTIONS.TOGGLEVISIBILITY })}\n        label=\"Visible\"\n      />\n\n      <TextField\n        label=\"Description\"\n        variant=\"outlined\"\n        multiline\n        rows={5}\n        className={styles.button}\n        value={state.supplier_description}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETDESCRIPTION, payload: e.target.value })\n        }\n        required\n      />\n\n      <TextField\n        label=\"Contact Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        className={styles.button}\n        value={state.contact_number}\n        onChange={(e) =>\n          dispatch({ type: ACTIONS.SETCONTACTNUM, payload: e.target.value })\n        }\n        required\n      />\n\n      <div className={styles.fullcontainer}>\n        <CustomSelect\n          label={\"City\"}\n          setSelection={(value) => {\n            dispatch({ type: ACTIONS.SETCITY, payload: value });\n          }}\n          options={cities.map((city) => ({\n            id: city.city_id,\n            value: city.city_name,\n          }))}\n          selection={{ id: state.city_id }}\n        />\n\n        <CustomSelect\n          label={\"Catagory\"}\n          setSelection={(value) => {\n            dispatch({ type: ACTIONS.SETCATAGORY, payload: value });\n          }}\n          options={catagories.map((catagory) => ({\n            id: catagory.catagory_id,\n            value: catagory.catagory_name,\n          }))}\n          selection={{\n            id: state.catagory_id,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport fetchWithCredentials from '../helperFunctions/fetchWithCredentials'\nimport { SupplierInfo, useLoading, useError, useSupplier} from \"../contexts/SupplierInfo\";\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport SupplierForm from \"../components/SupplierForm\";\nimport CancelAndOkButton from \"../components/CancelAndOkButton\";\n\nexport default function DisplaySupplier({ supplier_id }) {\n  return (\n    <SupplierInfo supplier_id={supplier_id}>\n      <Container supplier_id={supplier_id} />\n    </SupplierInfo>\n  );\n}\n\nfunction Container({supplier_id}) {\n  const history = useHistory();\n  const {state} = useSupplier()\n  const handleDelete = async () => {\n    const confirmed = window.confirm(\n      \"Are You Sure You Want To Delete this Account?\"\n    );\n    if (!confirmed) return;\n    const url = `/api/suppliers/delete`;\n    const data = { supplier_id };\n    const response = await fetchWithCredentials(\"DELETE\", url, data);\n    if (response.ok) {\n      alert(\"Supplier Deleted\");\n      history.goBack();\n      return;\n    }\n    alert(\"Failed To Delete\");\n  };\n\n  const handleUpdate = async () => {\n    const confirmed = window.confirm(\"Are You Sure You Want To Update\");\n    if (!confirmed) return;\n    const data = {\n      ...state,\n      supplier_id\n    };\n    const url = `/api/suppliers/update`;\n    const response = await fetchWithCredentials(\"PUT\", url, data);\n    if (response.ok) {\n      alert(\"Supplier Updated\");\n      return;\n    }\n    alert(\"Failed To Update\");\n  };\n\n  const { loading } = useLoading();\n  const { err } = useError();\n  if (loading) return <DisplayLoading loading={true} />;\n  if (err) return <DisplayErrors errors={[err]} />;\n  return (\n    <>\n      <SupplierForm supplier_id={supplier_id}/>\n      <CancelAndOkButton okLabel=\"Update\" cancelLabel=\"Delete\" \n        onClickOk={handleUpdate} onClickCancel={handleDelete}\n      />\n    </>\n  );\n}\n","import React from 'react'\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    CircularProgress,\n    Paper,\n    makeStyles,\n  } from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport useFetchProducts from '../hooks/useFetchProducts'\nimport ErrorText from './ErrorText'\nimport colors from '../defaults/colors.json'\n\nconst useStyles = makeStyles({\n    container: {\n      maxWidth: 1000,\n      width: \"90%\",\n      margin: 10,\n    },\n    table: {\n      width: \"100%\",\n      overflow: \"scroll\"\n    },\n    head: {\n      backgroundColor: colors.PRIMARY_RED,\n      color: colors.PRIMARY_WHITE,\n      fontWeight: \"bolder\",\n    },\n  });\n\nexport default function DisplayProducts({supplier_id,available}) {\n    const {err,loading,result} = useFetchProducts({supplier_id,available})\n    const styles = useStyles()\n    const history = useHistory()\n\n    if(loading) return <CircularProgress color=\"primary\" />\n    if(err) return <ErrorText> {err} </ErrorText>\n    return (\n        <TableContainer component={Paper} className={styles.container}>\n        <Table aria-label=\"products table\" className={styles.table}>\n          <TableHead className={styles.head}>\n            <TableRow>\n              <TableCell align=\"center\" className={styles.head}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Description\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Available\n              </TableCell>\n              <TableCell align=\"center\" className={styles.head}>\n                Price\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {result.map((product) => (\n              <TableRow key={product.product_id} \n                onClick ={()=>{\n                  history.push(`/products/${product.product_id}`)\n                }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {product.product_name}\n                </TableCell>\n                <TableCell align=\"center\">{product.product_description}</TableCell>\n                <TableCell align=\"center\">{product.available?\"Yes\":\"No\"}</TableCell>\n                <TableCell align=\"center\">\n                  {product.price}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","import useFetch from './useFetch'\n\nexport default function useFetchProducts({\n    supplier_id,\n    available,\n}) {\n    \n    const searchParams= new URLSearchParams()\n    if(supplier_id) searchParams.append('supplier_id',supplier_id)\n    if(available != null || undefined) searchParams.append('available', available)\n    \n    const url = `/api/products/getall?${searchParams}`\n\n    const {err,loading,result} = useFetch('GET',url)\n    \n    return {err,loading,result}\n}\n","import React from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {\n  makeStyles,\n} from \"@material-ui/core\";\n\n\nimport LightScreen from '../components/LightScreen'\nimport NavigationBar from '../components/NavigationBar'\nimport DisplaySupplier from '../components/DisplaySupplier'\nimport DisplayProducts from '../components/DisplayProducts'\n\n// const useStyles = makeStyles({\n//   button: { margin: \"1rem\", width: \"80vmin\" },\n// });\n \nexport default function SupplierScreen() {\n  const { id } = useParams();\n  return (\n    <LightScreen>\n        <NavigationBar title={\"Supplier\"}/>\n        <DisplaySupplier supplier_id={id}/>\n        <DisplayProducts supplier_id={id}/>\n    </LightScreen>\n  )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport SuppliersScreen from '../screens/SuppliersScreen'\nimport SupplierScreen from '../screens/SupplierScreen'\n\nexport default function Suppliers({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={SuppliersScreen}/>\n           <Route exact path={`${match.url}/:id`} component={SupplierScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Typography,\n  Button,\n  makeStyles,\n  Pagination,\n} from \"@material-ui/core\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nconst useStyles = makeStyles({\n  container: {\n    minWidth: 150,\n    display: \"flex\",\n    gap: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default function CustomPagination({\n  page = 0,\n  setPage,\n  hasMore = true,\n}) {\n  const styles = useStyles();\n\n  const incrementPage = () => {\n    setPage((page) => (hasMore ? page + 1 : page));\n  };\n  const decrementPage = () => {\n    setPage((page) => (page > 0 ? page - 1 : 0));\n  };\n\n  return (\n    <Paper className={styles.container}>\n      {page > 0 && (\n        <Button onClick={decrementPage}>\n          <KeyboardArrowLeft fontSize=\"large\" />\n        </Button>\n      )}\n      <Typography variant=\"h5\"> {page + 1}</Typography>\n      {hasMore && (\n        <Button onClick={incrementPage}>\n          <KeyboardArrowRight fontSize=\"large\" />\n        </Button>\n      )}\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport COLORS from \"../defaults/colors.json\";\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n    overflow: \"scroll\",\n  },\n  head: {\n    backgroundColor: COLORS.PRIMARY_RED,\n    color: COLORS.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\nfunction ReturnDateTime(dateString) {\n  function addZero(i) {\n    if (i < 10) return `0${i}`;\n    return `${i}`;\n  }\n\n  const date = new Date(dateString);\n  const month = addZero(date.getMonth() + 1);\n  const day = addZero(date.getDate());\n  const hour = addZero(date.getHours());\n  const minutes = addZero(date.getMinutes());\n\n  return `${hour}:${minutes} ${day}/${month}`;\n}\n\nexport default function OrdersTable({ orders = [] }) {\n  const styles = useStyles();\n  const history = useHistory();\n\n  return (\n    <TableContainer component={Paper} className={styles.container}>\n      <Table aria-label=\"products table\" className={styles.table}>\n        <TableHead className={styles.head}>\n          <TableRow>\n            <TableCell align=\"center\" className={styles.head}>\n              Index\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Status\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Time\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order, index) => (\n            <TableRow\n              key={order.order_id}\n              onClick={() => {\n                history.push(`/orders/${order.order_id}`);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                {index + 1}\n              </TableCell>\n              <TableCell align=\"center\">{order.order_status}</TableCell>\n              <TableCell align=\"center\">\n                {ReturnDateTime(order.ordered_time)}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useEffect} from 'react'\nimport useFetchOrder from '../hooks/useFetchOrders'\nimport CustomPagination from '../components/CustomPagination'\nimport DisplayLoading from '../components/DisplayLoading'\nimport DisplayErrors from '../components/DisplayErrors'\n\nimport OrdersTable from '../tables/OrdersTable'\n\nexport default function DisplayOrders() {\n    const [page,setPage] = useState(0)\n    const {err, loading, result=[]} = useFetchOrder({page_number: page})\n    const [hasMore, setHasMore] = useState(true)\n\n    useEffect(() => {\n        if(result.length<10) return setHasMore(false)\n        setHasMore(true)\n    }, [result])\n    return (\n        <>\n            <CustomPagination page={page} setPage={setPage} hasMore={hasMore}/>\n            <DisplayLoading loading={loading}/>\n            <DisplayErrors errors={[err]}/>\n            <OrdersTable orders={result}/>\n        </>\n    )\n}\n","import useFetchWithAuth from './useFetchWithAuth'\n\nexport default function useFetchOrders({order_status, page_number=0, payed}) {\n    \n    const searchParams= new URLSearchParams()\n    if(order_status) searchParams.append('order_status',order_status)\n    if(page_number) searchParams.append('page_number', page_number)\n    const url = `/api/admin/orders/getall?${searchParams}`\n    const {err,loading,result = []} = useFetchWithAuth(\"GET\", url)\n    return {err,loading ,result}\n}\n","import React from 'react'\n\nimport LightScreen from '../components/LightScreen'\nimport NavBar from '../components/NavigationBar'\n\nimport DisplayOrders from '../section/DisplayOrders'\nexport default function OrdersScreen() {\n    return (\n        <LightScreen>\n            <NavBar title=\"Orders\"/>\n            <DisplayOrders />\n        </LightScreen>\n    )\n}\n","import React from \"react\";\nimport { TextField, makeStyles, FormControl } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  input: { margin: \"1rem\", width: \"80vmin\" },\n});\n\nexport default function CustomText({\n  label,\n  type,\n  value,\n  onChange,\n  required,\n  ...props\n}) {\n  const styles = useStyles();\n\n  return (\n    <FormControl>\n      <TextField\n        label={label}\n        variant=\"outlined\"\n        type={type}\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        required={required}\n        {...props}\n      />\n    </FormControl>\n  );\n}","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory } from \"react-router-dom\";\nimport COLORS from \"../defaults/colors.json\";\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 1000,\n    width: \"90%\",\n    margin: 10,\n  },\n  table: {\n    width: \"100%\",\n    overflow: \"scroll\",\n  },\n  head: {\n    backgroundColor: COLORS.PRIMARY_RED,\n    color: COLORS.PRIMARY_WHITE,\n    fontWeight: \"bolder\",\n  },\n});\n\n\nexport default function OrdersTable({ ordered_items = [] }) {\n  const styles = useStyles();\n  const history = useHistory();\n\n  return (\n    <TableContainer component={Paper} className={styles.container}>\n      <Table aria-label=\"products table\" className={styles.table}>\n        <TableHead className={styles.head}>\n          <TableRow>\n            <TableCell align=\"center\" className={styles.head}>\n              Index\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Name\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Price\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Quantity\n            </TableCell>\n            <TableCell align=\"center\" className={styles.head}>\n              Total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {ordered_items.map((ordered_item, index) => (\n            <TableRow\n              key={ordered_item.ordered_item_id}\n              onClick={() => {\n                history.push(`/products/${ordered_item.product_id}`);\n              }}\n            >\n              <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                {index + 1}\n              </TableCell>\n              <TableCell align=\"center\">{ordered_item.product_name}</TableCell>\n              <TableCell align=\"center\">{ordered_item.price}</TableCell>\n              <TableCell align=\"center\">\n                {ordered_item.quantity}\n              </TableCell>\n              <TableCell align=\"center\">\n                {Number(ordered_item.quantity) * Number(ordered_item.price)}\n              </TableCell>\n            </TableRow>\n          ))}\n          \n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\n\nimport CustomText from \"../components/CustomText\";\n\nexport default function DisplayUserInfo({ user }) {\n  return (\n    <>\n      <h3> User </h3>\n      <CustomText\n        label=\"Name\"\n        defaultValue={user.user_name}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <CustomText\n        label=\"Mobile No.\"\n        defaultValue={user.mobile_number}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <CustomText\n        label=\"Email\"\n        defaultValue={user.email_id}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport CustomText from \"../components/CustomText\";\n\nexport default function DisplayAddress({ address }) {\n  return (\n    <>\n      <h3> Address </h3>\n      <CustomText\n        defaultValue={address.city_name}\n        label=\"City\"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <CustomText\n        defaultValue={address.street_name}\n        label=\"Street\"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <CustomText\n        defaultValue={address.details}\n        label=\"Details\"\n        multiline\n        rowsMax={4}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport DisplayLoading from \"../components/DisplayLoading\";\nimport DisplayErrors from \"../components/DisplayErrors\";\nimport CustomText from '../components/CustomText'\n\nimport useFetchOrder from \"../hooks/useFetchOrder\";\nimport OrderedItemsTable from \"../tables/OrderedItemsTable\";\nimport DisplayUserInfo from \"./DisplayUserInfo\";\nimport DisplayAddress from \"./DisplayAddress\";\n\nfunction GetTotal(ordered_items=[]) {\n    const total = ordered_items.reduce((total,item)=>{\n       const price = Number(item.price);\n       const quantity= Number(item.quantity)\n       const cost = price * quantity;\n       const currentTotal = Number(total)\n       return currentTotal + cost\n    },0)\n    return Number(total)\n}\n\nexport default function DisplayOrder({ order_id }) {\n  const { err, loading, result } = useFetchOrder({ order_id });\n\n  if (loading) return <DisplayLoading loading={loading} />;\n  if (err) return <DisplayErrors errors={[err]} />;\n\n  return (\n    <>\n      <DisplayUserInfo user={result.user} />\n      <OrderedItemsTable ordered_items={result.ordered_items} />\n      <CustomText value={GetTotal(result.ordered_items)} label=\"Total\" />\n      <DisplayAddress address={result.address} />\n    </>\n  );\n}\n","import useFetchWithAuth from './useFetchWithAuth'\n\nexport default function useFetchOrder({order_id}) {\n    const url = `/api/admin/orders/get?order_id=${order_id}`\n    const {err,loading,result} = useFetchWithAuth(\"GET\", url)\n    return {err,loading, result}\n}\n","import React from \"react\";\nimport { useParams} from \"react-router-dom\";\n\n\nimport LightScreen from '../components/LightScreen'\nimport NavigationBar from '../components/NavigationBar'\nimport DisplayOrder from '../section/DisplayOrder'\n\n\nexport default function OrderScreen() {\n  const { id } = useParams();\n  return (\n    <LightScreen>\n        <NavigationBar title={\"Order\"}/>\n        <DisplayOrder order_id={id}/>\n    </LightScreen>\n  )\n}\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom'\nimport OrdersScreen from '../screens/OrdersScreen'\nimport OrderScreen from '../screens/OrderScreen'\n\nexport default function Catagory({match}) {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route exact path={`${match.url}/`} component={OrdersScreen}/>\n           <Route exact path={`${match.url}/:id`} component={OrderScreen}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport {BrowserRouter as Router ,Route, Switch} from 'react-router-dom'\nimport EmployeeScreen from '../screens/EmployeeScreen'\nimport NavScreen from '../screens/NavScreen'\nimport Employee from './Employee';\nimport City from './City';\nimport Catagory from './Catagory';\nimport Suppliers from './Supplier'\nimport Orders from './Order'\n\nexport default function Main() {\n    return (\n  \n        <Router basename='/admin'>\n            <Switch>\n                <Route exact path='/' component={NavScreen} />\n                <Route path ='/employees' component={EmployeeScreen} />\n                <Route path='/cities' component={City} />\n                <Route path='/cities' component={City} />\n                <Route path='/catagories' component={Catagory} />\n                <Route path='/suppliers' component={Suppliers} />\n                <Route path='/orders' component= {Orders} />\n            </Switch> \n        </Router> \n\n    )\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport LoginScreen from \"./screens/LoginScreen\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nimport Main from './navigation/Main'\nimport { useLoading, useIsLoggedIn } from \"./contexts/LoginInfo\";\n\nfunction Wrapper(){\n  const loading = useLoading();\n  const {isLoggedIn} =  useIsLoggedIn();\n\n  if(loading) return <LoadingScreen />;\n  if(!isLoggedIn) return <LoginScreen />;\n  return <Main />\n}\n\nfunction App() {\n  return (\n    <div className={\"App\"}>\n      <Wrapper />\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport colors from \"./defaults/colors.json\";\nimport { LoginInfo } from \"./contexts/LoginInfo\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: colors.PRIMARY_RED,\n    },\n    secondary: {\n      main: colors.PRIMARY_WHITE,\n    },\n    \n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <LoginInfo>\n        <App />\n      </LoginInfo>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}